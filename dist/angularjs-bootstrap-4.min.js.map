{"version":3,"sources":["webpack://angularBS/webpack/universalModuleDefinition","webpack://angularBS/external \"angular\"","webpack://angularBS/external \"angular-animate\"","webpack://angularBS/webpack/bootstrap","webpack://angularBS/webpack/runtime/define property getters","webpack://angularBS/webpack/runtime/hasOwnProperty shorthand","webpack://angularBS/./.build/lib/src/lib/carousel/bs-carousel-item.directive.ts","webpack://angularBS/./.build/lib/src/lib/carousel/bs-carousel.directive.ts","webpack://angularBS/./.build/lib/src/lib/carousel/carousel.module.ts","webpack://angularBS/./.build/lib/src/lib/carousel/carousel.provider.ts","webpack://angularBS/./.build/lib/src/lib/carousel/bs-carousel-indicators.component.ts","webpack://angularBS/./.build/lib/src/lib/carousel/bs-carousel-nav.directive.ts","webpack://angularBS/./.build/lib/src/lib/collapse/bs-collapse.directive.ts","webpack://angularBS/./.build/lib/src/lib/collapse/bs-collapse-group.directive.ts","webpack://angularBS/./.build/lib/src/lib/collapse/collapse.module.ts","webpack://angularBS/./.build/lib/src/lib/helpers/helpers.module.ts","webpack://angularBS/./.build/lib/src/lib/helpers/angularBS.service.ts","webpack://angularBS/./.build/lib/src/lib/dropdown/bs-dropdown-boundary.directive.ts","webpack://angularBS/./.build/lib/src/lib/dropdown/bs-dropdown.directive.ts","webpack://angularBS/./.build/lib/src/lib/dropdown/dropdown.module.ts","webpack://angularBS/./.build/lib/src/lib/dropdown/bs-dropdown-toggle.directive.ts","webpack://angularBS/./.build/lib/src/lib/modal/modal-backdrop.factory.ts","webpack://angularBS/./.build/lib/src/lib/modal/bs-modal-backdrop.component.ts","webpack://angularBS/./.build/lib/src/lib/modal/bs-modal.directive.ts","webpack://angularBS/./.build/lib/src/lib/modal/modal.module.ts","webpack://angularBS/./.build/lib/src/lib/modal/modal.provider.ts","webpack://angularBS/./.build/lib/src/lib/modal/dismiss.directive.ts","webpack://angularBS/./.build/lib/src/lib/popover/bs-popover-boundary.directive.ts","webpack://angularBS/./.build/lib/src/lib/popover/bs-popover.component.ts","webpack://angularBS/./.build/lib/src/lib/popover/bs-popover-toggle.directive.ts","webpack://angularBS/./.build/lib/src/lib/popover/popover.module.ts","webpack://angularBS/./.build/lib/src/lib/popover/popover.provider.ts","webpack://angularBS/./.build/lib/src/lib/toasts/bs-toast.component.ts","webpack://angularBS/./.build/lib/src/lib/toasts/toasts.module.ts","webpack://angularBS/./.build/lib/src/lib/toasts/toasts.provider.ts","webpack://angularBS/./.build/lib/src/lib/tooltip/bs-tooltip-boundary.directive.ts","webpack://angularBS/./.build/lib/src/lib/tooltip/bs-tooltip.factory.ts","webpack://angularBS/./.build/lib/src/lib/tooltip/bs-tooltip-toggle.directive.ts","webpack://angularBS/./.build/lib/src/lib/tooltip/bs-tooltip.component.ts","webpack://angularBS/./.build/lib/src/lib/tooltip/tooltip.module.ts","webpack://angularBS/./.build/lib/src/lib/tooltip/tooltip.provider.ts","webpack://angularBS/./src/angularjs-bootstrap-4.ts","webpack://angularBS/./.build/src/lib/angularBS.module.ts"],"names":["root","factory","exports","module","require","define","amd","window","__WEBPACK_EXTERNAL_MODULE__734__","__WEBPACK_EXTERNAL_MODULE__180__","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__","d","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","BsCarouselItemDirectiveController","$element","this","addClass","BsCarouselDirectiveController","$scope","$attrs","$interval","Carousel","carouselInterval","slides","currentSlide","sliding","on","e","keyboard","test","target","tagName","prevNextSlide","$digest","preventDefault","interval","parseInt","pause","cycle","cancel","wrap","push","hasClass","removeClass","length","splice","indexOf","isNext","nextIndex","slideTo","index","direction","changeSlide","nextSlide","next","active","transition","removeEventListener","offsetWidth","addEventListener","angularBSCarousel","config","template","carousel","controllerAs","restrict","link","scope","element","attrs","ctrl","register","controller","bindToController","name","BsCollapseDirectiveController","$animateCss","$watch","bsCollapse","nV","collapse","expand","group","css","height","easing","to","scrollHeight","BsCollapseGroupDirectiveController","children","bsCollapseCtrl","invokingCtrl","c","angularBSCollapse","$on","unregister","helpers","elemBCR","getBoundingClientRect","elemStyle","getComputedStyle","width","Math","ceil","getPropertyValue","offsetHeight","top","pageYOffset","document","documentElement","scrollTop","left","pageXOffset","scrollLeft","prefix","placement","placements","p","positionTo","boundaryElement","cssPrefix","splitPlacement","split","arrowTop","realPlacement","offset","offsetTo","auto","calcPosition","setPlacementCSS","newOffset","bo","max","innerWidth","body","clientWidth","innerHeight","clientHeight","newPlacement","arrow","querySelector","arrowTopN","adjustArrow","transform","BsDropdownBoundaryDirectiveController","BSDropdownDirectiveController","$document","angularBS","bsDropdown","_onClick","bind","_keydown","_bsDropdown","querySelectorAll","boundary","reposition","off","contains","$apply","items","idx","i","focus","boundaryOffset","menuOffset","angularBSDropdown","dropdownCtrl","ModalBackdropFactory","$compile","$rootScope","$q","_isVisible","_isAnimated","_openModals","_doHide","_bodyElement","find","backdropElement","backdropScope","$new","isVisible","append","backdrop","animate","_backDropPromise","defer","resolve","promise","backdropController","hide","then","BSModalBackdropController","$timeout","ModalBackdrop","isAnimated","setTimeout","shown","defered","transitionFinished","bsModalBackdropComponent","BSModalController","$injector","Modal","getSelection","type","_keydownHandler","_onKeydown","_bsModal","bsModal","_doShow","display","transitionEnded","callback","ret","onBeforeChange","invoke","_shouldChange","angularBSModal","transitionDuration","backdropTransitionDuration","BsPopoverBoundaryDirectiveController","BsPopoverComponentController","Popover","$observe","value","title","content","text","trim","titleVisible","contentVisible","animation","delay","defaultTitle","defaultContent","changes","_delay","currentValue","visible","previousValue","timeout","parentElement","positionElement","undefined","fadeIn","isFirstChange","bsPopoverComponent","bindings","transclude","BsPopoverToggleDirectiveController","$sce","popoverElement","documentClick","bsPopoverToggle","forEach","attr","html","charCodeAt","trustAsHtml","watcher","newElement","newScope","bsPpCtrl","triggers","trigger","open","remove","angularBSPopover","BsToastComponentController","$transclude","Toasts","elements","header","bsToastComponent","angularBSToasts","BsTooltipBoundaryDirectiveController","BsTooltipFactory","compile","directive","bsTooltipToggleCtrl","instantiate","$onInit","$onDestroy","BsTooltipToggleDirectiveController","Tooltip","_tooltipElement","bsTooltipToggle","bsTpCtrl","close","BsTooltipComponentController","_timeout","bsTooltipComponent","angularBSTooltip"],"mappings":"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","file":"angularjs-bootstrap-4.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"angular\"), require(\"angular-animate\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"angularjs-bootstrap-4\", [\"angular\", \"angular-animate\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"angularjs-bootstrap-4\"] = factory(require(\"angular\"), require(\"angular-animate\"));\n\telse\n\t\troot[\"angularjs-bootstrap-4\"] = factory(root[\"angular\"], root[\"angular-animate\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__734__, __WEBPACK_EXTERNAL_MODULE__180__) {\nreturn ","module.exports = __WEBPACK_EXTERNAL_MODULE__734__;","module.exports = __WEBPACK_EXTERNAL_MODULE__180__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","/*\n * Twitter Bootstrap 4 plugin for AngularJS.\n * Copyright (c) 2016-2021 Rodziu <mateusz.rohde@gmail.com>\n * License: MIT\n */\nimport {IDirective} from 'angular';\n\n/**\n * @ngInject\n */\nclass BsCarouselItemDirectiveController {\n    private $element: JQLite;\n\n    constructor($element: JQLite) {\n        this.$element = $element;\n    }\n\n    $onInit() {\n        this.$element.addClass('carousel-item');\n    }\n}\n\nexport function bsCarouselItemDirective(): IDirective {\n    return {\n        restrict: 'A',\n        require: '^bsCarousel',\n        link: function(scope, element, attrs, ctrl) {\n            ctrl.register(element);\n        },\n        controller: BsCarouselItemDirectiveController\n    };\n}\n","/*\n * Twitter Bootstrap 4 plugin for AngularJS.\n * Copyright (c) 2016-2021 Rodziu <mateusz.rohde@gmail.com>\n * License: MIT\n */\n\nimport {IAttributes, IDirective, IIntervalService, IScope} from 'angular';\nimport {ICarouselOptions} from './carousel.provider';\nimport * as angular from 'angular';\n\ntype direction = 'left' | 'right';\n\n/**\n * @ngInject\n */\nclass BsCarouselDirectiveController {\n    private $scope: IScope;\n    private $element: JQLite;\n    private readonly $attrs: IAttributes;\n    private readonly $interval: IIntervalService;\n    private Carousel: ICarouselOptions;\n    private carouselInterval = null;\n    private slides = [];\n    private currentSlide = -1;\n    private sliding = false;\n    private wrap: boolean;\n    private keyboard: boolean;\n\n    constructor(\n        $scope: IScope, $element: JQLite, $attrs: IAttributes, $interval: IIntervalService,\n        Carousel: ICarouselOptions\n    ) {\n        this.$scope = $scope;\n        this.$element = $element;\n        this.$attrs = $attrs;\n        this.$interval = $interval;\n        this.Carousel = Carousel;\n\n        this.$element.on('keydown', (e) => {\n            if (\n                !this.keyboard\n                || (e.key !== 'ArrowLeft' && e.key !== 'ArrowRight')\n                || /input|textarea/i.test(e.target.tagName)\n            ) {\n                return;\n            }\n            if (e.key === 'ArrowLeft') {\n                this.prevNextSlide(false);\n            } else {\n                this.prevNextSlide(true);\n            }\n            $scope.$digest();\n            e.preventDefault();\n        });\n    }\n\n    $onInit(): void {\n        const interval = 'interval' in this.$attrs ? parseInt(this.$attrs['interval']) : this.Carousel.interval,\n            pause = 'pause' in this.$attrs ? this.$attrs['pause'] === 'hover' : this.Carousel.pause;\n        if (interval) {\n            const cycle = () => {\n                this.carouselInterval = this.$interval(() => {\n                    this.prevNextSlide(true);\n                }, interval);\n            };\n            if (pause) {\n                this.$element.on('mouseenter', () => {\n                    this.$interval.cancel(this.carouselInterval);\n                });\n                this.$element.on('mouseleave', cycle);\n            }\n            cycle();\n        }\n    }\n\n    $onChanges(): void {\n        if (angular.isUndefined(this.wrap)) {\n            this.wrap = this.Carousel.wrap;\n        }\n        if (angular.isUndefined(this.keyboard)) {\n            this.keyboard = this.Carousel.keyboard;\n        }\n    }\n\n    $onDestroy() {\n        if (this.carouselInterval !== null) {\n            this.$interval.cancel(this.carouselInterval);\n        }\n    }\n\n    register($element: JQLite): void {\n        this.slides.push($element);\n        if ($element.hasClass('active')) {\n            if (~this.currentSlide) {\n                this.slides[this.currentSlide].removeClass('active');\n            }\n            this.currentSlide = this.slides.length - 1;\n        } else if (!~this.currentSlide) {\n            $element.addClass('active');\n            this.currentSlide = this.slides.length - 1;\n        }\n    }\n\n    unregister($element: JQLite): void {\n        this.slides.splice(this.slides.indexOf($element, 1));\n    }\n\n    prevNextSlide(isNext: boolean): void {\n        const nextIndex = isNext ? this.currentSlide + 1 : this.currentSlide - 1;\n        if (\n            (nextIndex >= this.slides.length || nextIndex < 0)\n            && !this.wrap\n        ) {\n            return;\n        }\n        this.slideTo(nextIndex, isNext ? 'left' : 'right');\n    }\n\n    slideTo(index: number, direction: direction): void {\n        if (index < 0) {\n            index = this.slides.length - 1;\n        } else if (index >= this.slides.length) {\n            index = 0;\n        }\n        this.changeSlide(index, direction);\n    }\n\n    private changeSlide(nextSlide: number, direction?: direction) {\n        if (nextSlide !== this.currentSlide && !this.sliding) {\n            this.sliding = true;\n            if (angular.isUndefined(direction)) {\n                direction = nextSlide > this.currentSlide ? 'left' : 'right';\n            }\n            const next = this.slides[nextSlide],\n                active = this.slides[this.currentSlide],\n                transition = () => {\n                    active[0].removeEventListener('transitionend', transition);\n                    next.removeClass(\n                        'carousel-item-next carousel-item-prev carousel-item-' + direction)\n                        .addClass('active');\n                    active.removeClass('active carousel-item-' + direction);\n                    this.sliding = false;\n                };\n            next.addClass(direction === 'left' ? 'carousel-item-next' : 'carousel-item-prev');\n            next[0].offsetWidth; // force reflow\n            active.addClass('carousel-item-' + direction);\n            next.addClass('carousel-item-' + direction);\n            active[0].addEventListener('transitionend', transition);\n            this.currentSlide = nextSlide;\n        }\n    }\n}\n\nexport function bsCarouselDirective(): IDirective {\n    /**\n     * @ngdoc directive\n     * @name bsCarousel\n     *\n     * @param interval\n     * @param pause\n     * @param {expression|boolean} wrap\n     * @param {expression|boolean} keyboard\n     */\n    return {\n        restrict: 'A',\n        bindToController: {\n            wrap: '<?',\n            keyboard: '<?'\n        },\n        controller: BsCarouselDirectiveController\n    };\n}\n","/*\n * Twitter Bootstrap 4 plugin for AngularJS.\n * Copyright (c) 2016-2021 Rodziu <mateusz.rohde@gmail.com>\n * License: MIT\n */\nimport * as angular from 'angular';\nimport {CarouselProvider} from './carousel.provider';\nimport {bsCarouselIndicatorsComponent} from './bs-carousel-indicators.component';\nimport {bsCarouselItemDirective} from './bs-carousel-item.directive';\nimport {bsCarouselNavDirective} from './bs-carousel-nav.directive';\nimport {bsCarouselDirective} from './bs-carousel.directive';\n\nconst carouselModule = angular.module('angularBS.carousel', [])\n    .provider('Carousel', CarouselProvider)\n    .component('bsCarouselIndicators', bsCarouselIndicatorsComponent)\n    .directive('bsCarouselItem', bsCarouselItemDirective)\n    .directive('bsCarouselNav', bsCarouselNavDirective)\n    .directive('bsCarousel', bsCarouselDirective);\n\nexport const angularBSCarousel = carouselModule.name;\n","/*\n * Twitter Bootstrap 4 plugin for AngularJS.\n * Copyright (c) 2016-2021 Rodziu <mateusz.rohde@gmail.com>\n * License: MIT\n */\n\nexport interface ICarouselOptions {\n    interval: number,\n    pause: 'hover' | null,\n    wrap: boolean,\n    keyboard: boolean\n}\n\nexport class CarouselProvider {\n    public config: ICarouselOptions = {\n        interval: 5000,\n        pause: 'hover',\n        wrap: true,\n        keyboard: true\n    };\n\n    $get(): ICarouselOptions {\n        return this.config;\n    }\n}\n","/*\n * Twitter Bootstrap 4 plugin for AngularJS.\n * Copyright (c) 2016-2021 Rodziu <mateusz.rohde@gmail.com>\n * License: MIT\n */\n\nimport {IComponentOptions} from 'angular';\n\nexport const bsCarouselIndicatorsComponent: IComponentOptions = {\n    template: '<ol class=\"carousel-indicators\">'\n        + '<li ng-repeat=\"s in ctrl.carousel.slides\" ng-click=\"ctrl.carousel.slideTo($index)\" '\n        + 'ng-class=\"{active: $index === ctrl.carousel.currentSlide}\"></li>'\n        + '</ol>',\n    require: {\n        carousel: '^bsCarousel'\n    },\n    controllerAs: 'ctrl'\n};\n","/*\n * Twitter Bootstrap 4 plugin for AngularJS.\n * Copyright (c) 2016-2021 Rodziu <mateusz.rohde@gmail.com>\n * License: MIT\n */\nimport {IDirective} from 'angular';\n\nexport function bsCarouselNavDirective(): IDirective {\n    return {\n        restrict: 'A',\n        require: '^bsCarousel',\n        link: function(scope, element, attrs, ctrl) {\n            element.on('click', function() {\n                ctrl.prevNextSlide(attrs['bsCarouselNav'] === 'right');\n                scope.$digest();\n            });\n        }\n    };\n}\n","/*\n * Twitter Bootstrap 4 plugin for AngularJS.\n * Copyright (c) 2016-2021 Rodziu <mateusz.rohde@gmail.com>\n * License: MIT\n */\n\nimport {IDirective, IScope} from 'angular';\nimport * as angular from 'angular';\nimport 'angular-animate';\nimport {BsCollapseGroupDirectiveController} from './bs-collapse-group.directive';\n\n/**\n * @ngInject\n */\nexport class BsCollapseDirectiveController {\n    private $scope: IScope;\n    private $element: JQLite;\n    private readonly $animateCss: angular.animate.IAnimateCssService;\n    private bsCollapse: boolean;\n    private group: BsCollapseGroupDirectiveController;\n\n    constructor($scope: IScope, $element: JQLite, $animateCss: angular.animate.IAnimateCssService) {\n        this.$scope = $scope;\n        this.$element = $element;\n        this.$animateCss = $animateCss;\n\n        $scope.$watch(() => {\n            return this.bsCollapse;\n        }, (nV) => {\n            this.bsCollapse = !!nV;\n            if (this.bsCollapse) {\n                this.collapse();\n            } else {\n                this.expand();\n                if (this.group) {\n                    this.group.expand(this);\n                }\n            }\n        })\n    }\n\n    $onInit(): void {\n        if (this.bsCollapse) {\n            this.$element.removeClass('show collapsing').addClass('collapse');\n            this.$element.css({height: null});\n        } else {\n            this.$element.removeClass('collapsing').addClass('collapse show');\n        }\n    }\n\n\n    private expand(): void {\n        if (!this.$element.hasClass('show')) {\n            this.$element.removeClass('collapse').addClass('collapsing');\n            if (this.$animateCss) {\n                this.$animateCss(this.$element, {\n                    addClass: 'show',\n                    easing: 'ease',\n                    to: {\n                        height: this.$element[0].scrollHeight + 'px'\n                    }\n                }).start()['finally'](() => {\n                    this.$element.removeClass('collapsing').addClass('collapse').css({height: 'auto'});\n                });\n            }\n        }\n    }\n    private collapse(): void {\n        if (this.$element.hasClass('show')) {\n            this.$element.css({\n                height: this.$element[0].scrollHeight + 'px'\n            }).removeClass('collapse').addClass('collapsing');\n            this.$animateCss(this.$element, {\n                removeClass: 'show',\n                to: {height: '0'}\n            }).start()['finally'](() => {\n                this.$element.css({height: null});\n                this.$element.removeClass('collapsing').addClass('collapse');\n            });\n        }\n    }\n}\n\nexport function bsCollapseDirective(): IDirective {\n    /**\n     * @ngdoc directive\n     * @name bsCollapse\n     *\n     * @param {expression|boolean} bsCollapse\n     */\n    return {\n        restrict: 'A',\n        bindToController: {\n            bsCollapse: '=?'\n        },\n        require: ['bsCollapse', '?^bsCollapseGroup'],\n        link: function(scope, element, attrs, ctrl) {\n            if (ctrl[1] !== null) {\n                ctrl[1].register(ctrl[0]);\n                ctrl[0].group = ctrl[1];\n                scope.$on('destroy', () => {\n                    ctrl[1].unregister(ctrl[0]);\n                });\n            }\n        },\n        controller: BsCollapseDirectiveController\n    };\n}\n","/*\n * Twitter Bootstrap 4 plugin for AngularJS.\n * Copyright (c) 2016-2021 Rodziu <mateusz.rohde@gmail.com>\n * License: MIT\n */\n\nimport {IDirective} from 'angular';\nimport {BsCollapseDirectiveController} from './bs-collapse.directive';\n\n/**\n * @ngInject\n */\nexport class BsCollapseGroupDirectiveController {\n    private children = [];\n\n    register(bsCollapseCtrl: BsCollapseDirectiveController): void {\n        this.children.push(bsCollapseCtrl);\n    }\n\n    unregister(bsCollapseCtrl: BsCollapseDirectiveController): void {\n        this.children.splice(this.children.indexOf(bsCollapseCtrl), 1);\n    }\n\n    expand(invokingCtrl: BsCollapseDirectiveController): void {\n        for (let c = 0; c < this.children.length; c++) {\n            if (this.children[c] !== invokingCtrl) {\n                this.children[c].bsCollapse = true;\n            }\n        }\n    }\n}\n\nexport function bsCollapseGroupDirective(): IDirective {\n    return {\n        restrict: 'A',\n        controller: BsCollapseGroupDirectiveController\n    };\n}\n","/*\n * Twitter Bootstrap 4 plugin for AngularJS.\n * Copyright (c) 2016-2021 Rodziu <mateusz.rohde@gmail.com>\n * License: MIT\n */\nimport * as angular from 'angular';\nimport {bsCollapseDirective} from './bs-collapse.directive';\nimport {bsCollapseGroupDirective} from './bs-collapse-group.directive';\n\nconst collapseModule = angular.module('angularBS.collapse', [])\n    .directive('bsCollapse', bsCollapseDirective)\n    .directive('bsCollapseGroup', bsCollapseGroupDirective);\n\nexport const angularBSCollapse = collapseModule.name;\n","/*\n * Twitter Bootstrap 4 plugin for AngularJS.\n * Copyright (c) 2016-2021 Rodziu <mateusz.rohde@gmail.com>\n * License: MIT\n */\nimport * as angular from 'angular';\nimport {AngularBSService} from './angularBS.service';\n\nconst helpersModule = angular.module('angularBS.helpers', [])\n    .factory('angularBS', AngularBSService);\n\nexport const helpers = helpersModule.name;\n","/*\n * Twitter Bootstrap 4 plugin for AngularJS.\n * Copyright (c) 2016-2021 Rodziu <mateusz.rohde@gmail.com>\n * License: MIT\n */\n\nimport * as angular from 'angular';\n\nexport interface IElementOffset {\n    width: number,\n    height: number,\n    top: number,\n    left: number\n}\n\nexport type placement = 'top' | 'left' | 'right' | 'bottom' | string;\n\nexport class AngularBSService {\n    /**\n     * Get element width, height, position from top and left of document/window,\n     */\n    offset(element: HTMLElement): IElementOffset {\n        const elemBCR = element.getBoundingClientRect(),\n            elemStyle = element['currentStyle'] || window.getComputedStyle(element);\n        return {\n            width: Math.ceil(angular.isNumber(elemBCR.width) ? elemBCR.width : element.offsetWidth)\n                + parseInt(elemStyle.getPropertyValue('margin-left'))\n                + parseInt(elemStyle.getPropertyValue('margin-right')),\n            height: Math.ceil(angular.isNumber(elemBCR.height) ? elemBCR.height : element.offsetHeight)\n                + parseInt(elemStyle.getPropertyValue('margin-top'))\n                + parseInt(elemStyle.getPropertyValue('margin-bottom')),\n            top: Math.ceil(elemBCR.top + (window.pageYOffset || document.documentElement.scrollTop)),\n            left: Math.ceil(elemBCR.left + (window.pageXOffset || document.documentElement.scrollLeft)),\n        };\n    }\n\n    /**\n     * Removes all placement classes on given element\n     */\n    setPlacementCSS(element: JQLite, prefix: string, placement: placement): void {\n        const placements = ['top', 'left', 'right', 'bottom'];\n        for (let p = 0; p < placements.length; p++) {\n            element.removeClass(prefix + placements[p]);\n        }\n        element.addClass(prefix + placement);\n    }\n\n    /**\n     * Position element aside of positionTo on given side (placement)\n     * @param element\n     * @param positionTo\n     * @param placement\n     * @param [boundaryElement] - defaults to document|window\n     * @param cssPrefix\n     * @returns {{top: number, left: number, position: string}}\n     */\n    positionElement(\n        element: JQLite,\n        positionTo: JQLite,\n        placement: placement,\n        boundaryElement?: JQLite,\n        cssPrefix?: string\n    ): void {\n        const splitPlacement = placement.split(' ');\n        let top = 0, left = 0,\n            arrowTop = '50%',\n            realPlacement: placement = 'left',\n            offset = this.offset(element[0]);\n        const offsetTo = this.offset(positionTo[0]),\n            placements: placement[] = ['right', 'top', 'bottom'],\n            auto = !!~splitPlacement.indexOf('auto'),\n            calcPosition = () => {\n                switch (realPlacement) {\n                    case 'bottom':\n                        top = (offsetTo.top + offsetTo.height);\n                        left = ((offsetTo.left + (offsetTo.width / 2)) - (offset.width / 2));\n                        break;\n                    case 'top':\n                        top = (offsetTo.top - offset.height);\n                        left = ((offsetTo.left + (offsetTo.width / 2)) - (offset.width / 2));\n                        break;\n                    case 'left':\n                        top = (offsetTo.top + ((offsetTo.height - offset.height) / 2));\n                        left = (offsetTo.left - offset.width);\n                        break;\n                    case 'right':\n                        top = (offsetTo.top + ((offsetTo.height - offset.height) / 2));\n                        left = (offsetTo.left + offsetTo.width);\n                        break;\n                }\n                this.setPlacementCSS(element, cssPrefix, realPlacement);\n                // check to see if element has been resized after adding the placement\n                const newOffset = this.offset(element[0]);\n                if (newOffset.height !== offset.height || newOffset.width !== offset.width) {\n                    offset = newOffset;\n                    calcPosition();\n                }\n            };\n        for (let p = 0; p < placements.length; p++) {\n            if (~splitPlacement.indexOf(placements[p])) {\n                realPlacement = placements[p];\n                break;\n            }\n        }\n        calcPosition();\n        // get boundary offset\n        const bo = angular.isDefined(boundaryElement) ? this.offset(boundaryElement[0]) : {\n            top: window.pageYOffset || document.documentElement.scrollTop,\n            left: 0,\n            width: Math.max(window.innerWidth, document.body.clientWidth),\n            height: Math.max(window.innerHeight, document.body.clientHeight)\n        };\n        // change side if element would be outside of given viewport\n        if (auto) {\n            let newPlacement = realPlacement;\n            switch (realPlacement) {\n                case 'left':\n                    if (left < bo.left) {\n                        newPlacement = 'right';\n                    }\n                    break;\n                case 'right':\n                    if (left + offset.width + 10 > bo.left + bo.width) {\n                        newPlacement = 'left';\n                    }\n                    break;\n                case 'bottom':\n                    if (top + offset.height + 10 > bo.top + bo.height) {\n                        newPlacement = 'top';\n                    }\n                    break;\n                case 'top':\n                    if (top < bo.top) {\n                        newPlacement = 'bottom';\n                    }\n                    break;\n            }\n            if (newPlacement !== realPlacement) {\n                realPlacement = newPlacement;\n                calcPosition();\n            }\n        }\n        // adjust arrow position\n        const arrow = angular.element(element[0].querySelector('.arrow'));\n        if (angular.isDefined(arrow)) {\n            switch (realPlacement) {\n                case 'left':\n                case 'right':\n                    if (top < bo.top) {\n                        top = bo.top;\n                        arrowTop = (offsetTo.top + offsetTo.height / 2) + 'px';\n                    } else if (top + offset.height > bo.top + bo.height) {\n                        top = bo.top + bo.height - offset.height;\n                        let arrowTopN = offsetTo.top + offsetTo.height / 2 - top;\n                        if (arrowTopN > offset.height - 15) {\n                            arrowTopN = offset.height - 15;\n                        }\n                        arrowTop = arrowTopN + 'px';\n                    }\n                    arrow.css('top', arrowTop);\n                    break;\n                case 'bottom':\n                    arrow.css('top', '');\n                    break;\n                case 'top':\n                    arrow.css('top', 'auto');\n                    break;\n            }\n        }\n        this.adjustArrow(element, realPlacement);\n        // apply element position\n        element.css({\n            top: '0px',\n            left: '0px',\n            transform: 'translate3d(' + left + 'px, ' + top + 'px, 0px)'\n        });\n    }\n\n    /**\n     * Properly set arrow position of tooltip/popover element\n     */\n    adjustArrow(element: JQLite, placement: placement): void {\n        const arrow = angular.element(element[0].querySelector('.arrow'));\n        if (angular.isDefined(arrow)) {\n            switch (placement) {\n                case 'top':\n                case 'bottom':\n                    arrow.css('left', 'calc(50% - ' + (this.offset(arrow[0]).width / 2 + 'px)'));\n                    break;\n                case 'left':\n                case 'right':\n                    arrow.css('top', 'calc(50% - ' + (this.offset(arrow[0]).height / 2 + 'px)'));\n                    break;\n            }\n        }\n    }\n}\n","/*\n * Twitter Bootstrap 4 plugin for AngularJS.\n * Copyright (c) 2016-2021 Rodziu <mateusz.rohde@gmail.com>\n * License: MIT\n */\nimport {IDirective} from 'angular';\n\n/**\n * @ngInject\n */\nexport class BsDropdownBoundaryDirectiveController {\n    public $element: JQLite;\n\n    constructor($element: JQLite) {\n        this.$element = $element;\n    }\n}\n\nexport function bsDropdownBoundaryDirective(): IDirective {\n    return {\n        restrict: 'A',\n        controller: BsDropdownBoundaryDirectiveController\n    };\n}\n","/*\n * Twitter Bootstrap 4 plugin for AngularJS.\n * Copyright (c) 2016-2021 Rodziu <mateusz.rohde@gmail.com>\n * License: MIT\n */\nimport {IDirective, IDocumentService, IScope} from 'angular';\nimport {AngularBSService} from '../helpers/angularBS.service';\nimport {BsDropdownBoundaryDirectiveController} from './bs-dropdown-boundary.directive';\nimport * as angular from 'angular';\n\n/**\n * @ngInject\n */\nclass BSDropdownDirectiveController {\n    private $scope: IScope;\n    private $element: JQLite;\n    private $document: IDocumentService;\n    private angularBS: AngularBSService;\n    private bsDropdown: boolean;\n    private _bsDropdown: boolean;\n    private boundary: BsDropdownBoundaryDirectiveController;\n    private boundaryElement: JQLite;\n\n    constructor($scope: IScope, $element: JQLite, $document: IDocumentService, angularBS: AngularBSService) {\n        this.$scope = $scope;\n        this.$element = $element;\n        this.$document = $document;\n        this.angularBS = angularBS;\n    }\n\n    $onInit(): void {\n        this.bsDropdown = !!this.bsDropdown;\n        this.$element.addClass('dropdown');\n        this.$document.on('click', this._onClick.bind(this));\n        this.$element.on('keydown', this._keydown.bind(this));\n    }\n\n    $doCheck(): void {\n        if (this._bsDropdown !== this.bsDropdown) {\n            this._bsDropdown = this.bsDropdown;\n            if (this.bsDropdown) {\n                this.$element.addClass('show');\n                angular.element(this.$element[0].querySelectorAll('.dropdown-menu')).addClass('show');\n                if (this.boundary || this.boundaryElement) {\n                    this.reposition();\n                }\n            } else {\n                if (this.boundary || this.boundaryElement) {\n                    this.$element.removeClass('dropup');\n                }\n                this.$element.removeClass('show');\n                angular.element(this.$element[0].querySelectorAll('.dropdown-menu')).removeClass('show');\n            }\n        }\n    }\n\n    $onDestroy(): void {\n        this.$document.off('click', this._onClick.bind(this));\n        this.$element.off('keydown', this._keydown.bind(this));\n    }\n\n    _onClick(e: JQueryMouseEventObject): void {\n        if (this.bsDropdown && !this.$element[0].contains(e.target)) {\n            this.$scope.$apply(() => {\n                this.bsDropdown = false;\n            });\n        }\n    }\n\n    _keydown(e: JQueryKeyEventObject): void {\n        if (this.bsDropdown && e.key === 'Escape') {\n            this.$scope.$apply(() => {\n                this.bsDropdown = false;\n            });\n            return;\n        }\n        if (e.key === 'ArrowUp' || e.key === 'ArrowDown') {\n            const items = this.$element[0].querySelectorAll<HTMLAnchorElement>(\n                '.dropdown-menu a:not(.disabled)'\n            );\n            let idx = -1;\n            for (let i = 0; i < items.length; i++) {\n                if (items[i].contains(e.target)) {\n                    idx = i;\n                    break;\n                }\n            }\n            if (e.key === 'ArrowUp' && idx > 0) {\n                idx--;\n            } else if (e.key === 'ArrowDown' && idx < items.length - 1) {\n                idx++;\n            }\n            if (!~idx) {\n                idx = 0;\n            }\n            items[idx].focus();\n        }\n    }\n\n    reposition(): void {\n        const boundaryElement = this.boundary ? this.boundary.$element[0] : this.boundaryElement[0],\n            boundaryOffset = this.angularBS.offset(boundaryElement),\n            menuOffset = this.angularBS.offset(this.$element[0].querySelector('.dropdown-menu'));\n        if (menuOffset.height + menuOffset.top > boundaryOffset.height + boundaryOffset.top) {\n            this.$element.addClass('dropup');\n        } else {\n            this.$element.removeClass('dropup');\n        }\n    }\n}\n\nexport function bsDropdownDirective(): IDirective {\n    /**\n     * @ngdoc directive\n     * @name bsDropdown\n     * @property {expression|boolean} bsDropdown\n     */\n    return {\n        restrict: 'A',\n        require: {\n            boundary: '?^bsDropdownBoundary'\n        },\n        bindToController: {\n            bsDropdown: '=?',\n            boundaryElement: '<?'\n        },\n        controller: BSDropdownDirectiveController\n    };\n}\n","/*\n * Twitter Bootstrap 4 plugin for AngularJS.\n * Copyright (c) 2016-2021 Rodziu <mateusz.rohde@gmail.com>\n * License: MIT\n */\nimport * as angular from 'angular';\nimport {helpers} from '../helpers/helpers.module';\nimport {bsDropdownBoundaryDirective} from './bs-dropdown-boundary.directive';\nimport {bsDropdownDirective} from './bs-dropdown.directive';\nimport {bsDropdownToggleDirective} from './bs-dropdown-toggle.directive';\n\nconst dropdownModule = angular.module('angularBS.dropdown', [helpers])\n    .directive('bsDropdownBoundary', bsDropdownBoundaryDirective)\n    .directive('bsDropdown', bsDropdownDirective)\n    .directive('bsDropdownToggle', bsDropdownToggleDirective);\n\nexport const angularBSDropdown = dropdownModule.name;\n","/*\n * Twitter Bootstrap 4 plugin for AngularJS.\n * Copyright (c) 2016-2021 Rodziu <mateusz.rohde@gmail.com>\n * License: MIT\n */\n\nimport {IDirective} from 'angular';\n\nexport function bsDropdownToggleDirective(): IDirective {\n    return {\n        restrict: 'A',\n        require: '^bsDropdown',\n        link: function(scope, element, attrs, dropdownCtrl) {\n            element.on('click', () => {\n                scope.$apply(() => {\n                    dropdownCtrl.bsDropdown = !dropdownCtrl.bsDropdown;\n                });\n            });\n        }\n    };\n}\n","/*\n * Twitter Bootstrap 4 plugin for AngularJS.\n * Copyright (c) 2016-2021 Rodziu <mateusz.rohde@gmail.com>\n * License: MIT\n */\nimport {ICompileService, IDeferred, IDocumentService, IPromise, IQService, IRootScopeService, IScope} from 'angular';\nimport * as angular from 'angular';\nimport {BSModalBackdropController} from './bs-modal-backdrop.component';\n\ninterface IBackdropScope extends IScope {\n    isVisible: () => boolean\n}\n\n/**\n * @ngInject\n */\nexport class ModalBackdropFactory {\n    private $q: IQService;\n    private _isVisible = false;\n    private _isAnimated = false;\n    private _backDropPromise: IDeferred<void>;\n    private _openModals = 0;\n    private _bodyElement: JQLite;\n    public backdropController: BSModalBackdropController;\n\n    constructor($document: IDocumentService, $compile: ICompileService, $rootScope: IRootScopeService, $q: IQService) {\n        this.$q = $q;\n\n        this._bodyElement = $document.find('body');\n        const backdropElement = angular.element('<bs-modal-backdrop ng-if=\"isVisible()\"></bs-modal-backdrop>'),\n            backdropScope = $rootScope.$new(true) as IBackdropScope;\n        // create backdrop element in body\n        backdropScope.isVisible = this.isVisible.bind(this);\n        $compile(backdropElement)(backdropScope);\n        this._bodyElement.append(backdropElement);\n    }\n\n    isVisible(): boolean {\n        return this._isVisible;\n    }\n\n    isAnimated(): boolean {\n        return this._isAnimated;\n    }\n\n    show(backdrop: boolean, animate: boolean): IPromise<void> {\n        this._openModals++;\n        this._backDropPromise = this.$q.defer<void>();\n        this._isAnimated = !!animate;\n        this._bodyElement.addClass('modal-open');\n        if (backdrop && !this._isVisible) {\n            this._isVisible = true;\n        } else {\n            this._backDropPromise.resolve();\n        }\n        return this._backDropPromise.promise;\n    }\n\n    shown(): void {\n        this._backDropPromise.resolve();\n    }\n\n    hide(): void {\n        this._openModals--;\n        if (this._openModals < 0) {\n            this._openModals = 0;\n        }\n        if (this._openModals === 0) {\n            if (angular.isDefined(this.backdropController)) {\n                this.backdropController.hide().then(this._doHide);\n            } else {\n                this._doHide();\n            }\n        }\n    }\n\n    private _doHide = () => {\n        this._isVisible = false;\n        this._bodyElement.removeClass('modal-open');\n    }\n}\n","/*\n * Twitter Bootstrap 4 plugin for AngularJS.\n * Copyright (c) 2016-2021 Rodziu <mateusz.rohde@gmail.com>\n * License: MIT\n */\n\nimport {IComponentOptions, IPromise, IQService, ITimeoutService} from 'angular';\nimport {ModalBackdropFactory} from './modal-backdrop.factory';\n\nexport class BSModalBackdropController {\n    private $element: JQLite;\n    private $q: IQService;\n    private readonly $timeout: ITimeoutService;\n    private ModalBackdrop: ModalBackdropFactory;\n    private isAnimated: () => boolean;\n    /**\n     * @ngInject\n     */\n    constructor($element: JQLite, $q: IQService, $timeout: ITimeoutService, ModalBackdrop: ModalBackdropFactory) {\n        this.$element = $element;\n        this.$q = $q;\n        this.$timeout = $timeout;\n        this.ModalBackdrop = ModalBackdrop;\n    }\n\n    $onInit(): void {\n        this.ModalBackdrop.backdropController = this;\n        this.isAnimated = this.ModalBackdrop.isAnimated.bind(this.ModalBackdrop);\n    }\n\n    $postLink(): void {\n        // wait until 'fade' class is added, we don't use $timeout cause we don't need a digest cycle here\n        setTimeout(() => {\n            this.$element.children()[0].offsetWidth; // force reflow\n            this.$element.children().addClass('show');\n            this.ModalBackdrop.shown();\n        });\n    }\n\n    hide(): IPromise<void> {\n        const defered = this.$q.defer<void>(),\n            backdropElement = this.$element.children();\n        backdropElement.removeClass('show');\n        if (this.isAnimated()) {\n            let transitionFinished = false;\n            const transition = function() {\n                if (!transitionFinished) {\n                    defered.resolve();\n                    transitionFinished = true;\n                }\n            };\n            backdropElement[0].addEventListener('transitionend', transition);\n            this.$timeout(transition, 150);\n        } else {\n            defered.resolve();\n        }\n        return defered.promise;\n    }\n}\n\nexport const bsModalBackdropComponent: IComponentOptions = {\n    template: '<div class=\"modal-backdrop\" ng-class=\"{\\'fade\\': vm.isAnimated()}\"></div>',\n    controllerAs: 'vm',\n    controller: BSModalBackdropController\n};\n","/*\n * Twitter Bootstrap 4 plugin for AngularJS.\n * Copyright (c) 2016-2021 Rodziu <mateusz.rohde@gmail.com>\n * License: MIT\n */\n\n\nimport {IDirective, IDocumentService, IScope, ITimeoutService} from 'angular';\nimport IInjectorService = angular.auto.IInjectorService;\nimport {ModalBackdropFactory} from './modal-backdrop.factory';\nimport {ModalProvider} from './modal.provider';\nimport * as angular from 'angular';\n\n/**\n * @ngInject\n */\nexport class BSModalController {\n    private readonly $timeout: ITimeoutService;\n    private $document: IDocumentService;\n    private $injector: IInjectorService;\n    private Modal: ModalProvider;\n    private ModalBackdrop: ModalBackdropFactory;\n    private _keydownHandler: (JQueryEventObject) => void;\n    private _bsModal: boolean;\n    private onBeforeChange: () => boolean;\n    public $scope: IScope;\n    public $element: JQLite;\n    public backdrop: 'static' | boolean;\n    public keyboard: boolean;\n    public bsModal: boolean;\n\n    constructor(\n        $scope: IScope,\n        $element: JQLite,\n        $timeout: ITimeoutService,\n        $document: IDocumentService,\n        $injector: IInjectorService,\n        Modal: ModalProvider,\n        ModalBackdrop: ModalBackdropFactory\n    ) {\n        this.$scope = $scope;\n        this.$element = $element;\n        this.$timeout = $timeout;\n        this.$document = $document;\n        this.$injector = $injector;\n        this.Modal = Modal;\n        this.ModalBackdrop = ModalBackdrop;\n    }\n\n\n    $onInit(): void {\n        if (angular.isUndefined(this.keyboard)) {\n            this.keyboard = this.Modal.config.keyboard;\n        }\n        if (angular.isUndefined(this.backdrop)) {\n            this.backdrop = this.Modal.config.backdrop;\n        }\n        // backdrop click\n        this.$element.on('click', (e) => {\n            if (window.getSelection().type === 'Range') {\n                return;\n            }\n            if (this.backdrop === true && e.target === this.$element[0]) { // .modal covers whole page\n                this.$scope.$apply(() => {\n                    this.hide();\n                });\n            }\n        });\n        // keyboard esc\n        this._keydownHandler = (e) => this._onKeydown(e);\n        this.$document.on('keydown', this._keydownHandler);\n    }\n\n    $doCheck(): void {\n        if (this._bsModal !== this.bsModal) {\n            this._bsModal = this.bsModal;\n            if (this.bsModal) {\n                this._doShow();\n            } else {\n                this._doHide();\n            }\n        }\n    }\n\n    $onDestroy(): void {\n        if (this.bsModal) {\n            this._doHide();\n        }\n        this.$document.off('keydown', this._keydownHandler);\n    }\n\n    _onKeydown(e: JQueryKeyEventObject): void {\n        if (this.keyboard && e.key === 'Escape') {\n            this.$scope.$apply(() => {\n                this.hide();\n            });\n        }\n    }\n\n    _doShow(): void {\n        if (!this.$element.hasClass('show')) {\n            this.$element.css({display: 'block'});\n            this.$element[0].offsetWidth; // force reflow\n            this.ModalBackdrop\n                .show(!!this.backdrop, this.$element.hasClass('fade'))\n                .then(() => {\n                    this.$element.addClass('show');\n                });\n        }\n    }\n\n    _doHide(): void {\n        if (this.$element.hasClass('show')) {\n            this.$element.removeClass('show');\n            let transitionEnded = false;\n            const callback = () => {\n                    this.ModalBackdrop.hide();\n                    this.$element.css({display: ''});\n                },\n                transition = () => {\n                    if (!transitionEnded) {\n                        this.$element[0].removeEventListener('transitionend', transition);\n                        callback();\n                        transitionEnded = true;\n                    }\n                };\n            if (this.$element.hasClass('fade')) {\n                this.$element[0].addEventListener('transitionend', transition);\n                this.$timeout(transition, 300);\n            } else {\n                callback();\n            }\n        }\n    }\n\n    _shouldChange(): boolean {\n        let ret = this.onBeforeChange();\n        if (ret !== false) {\n            ret = this.$injector.invoke(this.Modal.config.onBeforeChange, this);\n        }\n        return ret !== false;\n    }\n\n    show(): void {\n        if (this.bsModal) {\n            return;\n        }\n        if (this._shouldChange()) {\n            this.bsModal = this._bsModal = true;\n            this._doShow();\n        }\n    }\n\n    hide(): void {\n        if (!this.bsModal) {\n            return;\n        }\n        if (this._shouldChange()) {\n            this.bsModal = this._bsModal = false;\n            this._doHide();\n        }\n    }\n}\n\nexport function bsModalDirective(): IDirective {\n    /**\n     * @ngdoc directive\n     * @name bsModal\n     *\n     * @param {expression} bsModal\n     * @param {string|boolean} backdrop\n     * @param {boolean} keyboard\n     * @param {Function} onBeforeChange\n     */\n    return {\n        restrict: 'A',\n        scope: true,\n        bindToController: {\n            bsModal: '=',\n            keyboard: '<?',\n            backdrop: '<?',\n            onBeforeChange: '&'\n        },\n        controller: BSModalController,\n        controllerAs: 'bsModal'\n    };\n}\n","/*\n * Twitter Bootstrap 4 plugin for AngularJS.\n * Copyright (c) 2016-2021 Rodziu <mateusz.rohde@gmail.com>\n * License: MIT\n */\nimport * as angular from 'angular';\nimport {ModalProvider} from './modal.provider';\nimport {ModalBackdropFactory} from './modal-backdrop.factory';\nimport {bsModalBackdropComponent} from './bs-modal-backdrop.component';\nimport {bsModalDirective} from './bs-modal.directive';\nimport {dismissDirective} from './dismiss.directive';\n\nconst modalModule = angular.module('angularBS.modal', [])\n    .provider('Modal', ModalProvider)\n    .factory('ModalBackdrop', ModalBackdropFactory)\n    .component('bsModalBackdrop', bsModalBackdropComponent)\n    .directive('bsModal', bsModalDirective)\n    .directive('dismiss', dismissDirective);\n\nexport const angularBSModal = modalModule.name;\n","/*\n * Twitter Bootstrap 4 plugin for AngularJS.\n * Copyright (c) 2016-2021 Rodziu <mateusz.rohde@gmail.com>\n * License: MIT\n */\n\nimport {Injectable} from 'angular';\nimport {BSModalController} from './bs-modal.directive';\n\ninterface IModalOptions {\n    backdrop: 'static' | boolean,\n    keyboard: boolean,\n    transitionDuration: number,\n    backdropTransitionDuration: number,\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    onBeforeChange: Injectable<(this: BSModalController, ...args: any[]) => boolean>\n}\n\nexport class ModalProvider {\n    public config: IModalOptions = {\n        backdrop: 'static',\n        keyboard: true,\n        transitionDuration: 300,\n        backdropTransitionDuration: 150,\n        onBeforeChange: () => true\n    }\n\n    public backdropController = null;\n\n    $get(): this {\n        return this;\n    }\n}\n","/*\n * Twitter Bootstrap 4 plugin for AngularJS.\n * Copyright (c) 2016-2021 Rodziu <mateusz.rohde@gmail.com>\n * License: MIT\n */\n\n\nimport {IDirective} from 'angular';\n\nexport function dismissDirective(): IDirective {\n    return {\n        restrict: 'A',\n        require: '^bsModal',\n        link: function(scope, element, attrs, bsModal) {\n            element.on('click', function() {\n                scope.$apply(() => {\n                    bsModal.hide();\n                });\n            });\n        }\n    };\n}\n","/*\n * Twitter Bootstrap 4 plugin for AngularJS.\n * Copyright (c) 2016-2021 Rodziu <mateusz.rohde@gmail.com>\n * License: MIT\n */\nimport {IDirective} from 'angular';\n\n/**\n * @ngInject\n */\nexport class BsPopoverBoundaryDirectiveController {\n    private $element: JQLite;\n\n    constructor($element: JQLite) {\n        this.$element = $element;\n    }\n}\n\nexport function bsPopoverBoundaryDirective(): IDirective {\n    return {\n        restrict: 'A',\n        controller: BsPopoverBoundaryDirectiveController\n    };\n}\n","/*\n * Twitter Bootstrap 4 plugin for AngularJS.\n * Copyright (c) 2016-2021 Rodziu <mateusz.rohde@gmail.com>\n * License: MIT\n */\n\nimport {\n    IAttributes,\n    IComponentOptions,\n    IOnChangesObject,\n    IPromise,\n    IScope,\n    ITimeoutService\n} from 'angular';\nimport {IPopoverOptions, popoverDelay} from './popover.provider';\nimport {AngularBSService, placement} from '../helpers/angularBS.service';\nimport * as angular from 'angular';\n\n/**\n * @ngInject\n */\nclass BsPopoverComponentController {\n    private $scope: IScope;\n    private $element: JQLite;\n    private $attrs: IAttributes;\n    private readonly $timeout: ITimeoutService;\n    private Popover: IPopoverOptions;\n    private angularBS: AngularBSService;\n    private titleVisible: boolean;\n    private contentVisible: boolean;\n    private animation: boolean;\n    private delay: popoverDelay;\n    private placement: placement;\n    private defaultTitle: string;\n    private defaultContent: string;\n    private _delay: popoverDelay;\n    private visible: boolean;\n    private timeout: null | IPromise<void>;\n    private parentElement: JQLite;\n    private boundary: JQLite;\n    private fadeIn: boolean;\n\n    constructor(\n        $scope: IScope,\n        $element: JQLite,\n        $attrs: IAttributes,\n        $timeout: ITimeoutService,\n        Popover: IPopoverOptions,\n        angularBS: AngularBSService\n    ) {\n        this.$scope = $scope;\n        this.$element = $element;\n        this.$attrs = $attrs;\n        this.$timeout = $timeout;\n        this.Popover = Popover;\n        this.angularBS = angularBS;\n\n        //\n        $attrs.$observe('placement', (value) => {\n            this.placement = value as string;\n        });\n        // check if title & content are not empty\n        const title = angular.element($element[0].querySelector('.popover-header')),\n            content = angular.element($element[0].querySelector('.popover-body'));\n\n        $scope.$watch(() => {\n            return title.text().trim();\n        }, (nV) => {\n            this.titleVisible = nV !== '';\n        });\n\n        $scope.$watch(() => {\n            return content.text().trim();\n        }, (nV) => {\n            this.contentVisible = nV !== '';\n        });\n    }\n\n    $onInit(): void {\n        if (angular.isUndefined(this.animation)) {\n            this.animation = this.Popover.animation;\n        }\n        if (angular.isUndefined(this.delay)) {\n            this.delay = this.Popover.delay;\n        }\n        this.placement = this.Popover.placement;\n        this.defaultTitle = this.Popover.title;\n        this.defaultContent = this.Popover.content;\n    }\n\n    $onChanges(changes: IOnChangesObject): void {\n        if (angular.isDefined(changes.delay)) {\n            this._delay = angular.isDefined(changes.delay.currentValue)\n                ? changes.delay.currentValue : this.Popover.delay;\n        }\n        if (\n            angular.isDefined(changes.visible)\n            && changes.visible.previousValue !== changes.visible.currentValue\n        ) {\n            this.visible = changes.visible.currentValue !== false;\n            let delay: number;\n            if (angular.isObject(this._delay)) {\n                delay = this._delay[this.visible ? 'show' : 'hide'] || this.Popover.delay;\n            } else {\n                delay = this._delay;\n            }\n            if (this.timeout !== null) {\n                this.$timeout.cancel(this.timeout);\n            }\n            this.timeout = this.$timeout(() => {\n                this.timeout = null;\n                if (this.visible) {\n                    if (this.parentElement) {\n                        this.angularBS.positionElement(\n                            this.$element.children(), this.parentElement, this.placement,\n                            this.boundary !== null ? this.boundary : undefined,\n                            'bs-popover-'\n                        );\n                    } else { // static popover\n                        this.angularBS.setPlacementCSS(this.$element.children(), 'bs-popover-', this.placement);\n                        this.angularBS.adjustArrow(this.$element.children(), this.placement);\n                    }\n                    this.fadeIn = this.visible;\n                } else if (this.animation && !changes.visible.isFirstChange()) {\n                    // properly display fade out animation\n                    this.visible = true;\n                    this.fadeIn = false;\n                    const transition = () => {\n                        this.visible = false;\n                        this.$element.children()[0].removeEventListener('transitionend', transition);\n                        this.$scope.$digest();\n                    };\n                    this.$element.children()[0].addEventListener('transitionend', transition);\n                } else {\n                    this.fadeIn = false;\n                }\n            }, delay);\n        }\n    }\n}\n\n/**\n * @ngdoc component\n * @name bsPopoverTitle\n * @description contents of this element would be transcluded to .popover-title element\n */\n/**\n * @ngdoc component\n * @name bsPopoverContent\n * @description contents of this element would be transcluded to .popover-content element\n */\n\n/**\n * @ngdoc component\n * @name bsPopover\n *\n * @param {expression|boolean} visible\n * @param {expression|boolean} animation\n * @param {expression|number} delay\n * @param {expression} parentElement\n * @param {expression} boundary\n * @param {string} placement\n */\nexport const bsPopoverComponent: IComponentOptions = {\n    template: '<div class=\"popover\" '\n        + 'ng-class=\"{\\'fade\\': bsPpCtrl.animation, \\'show\\': bsPpCtrl.fadeIn}\" '\n        + 'style=\"display: {{bsPpCtrl.visible || bsPpCtrl.fadeIn ? \\'block\\' : \\'none\\'}}\" '\n        + 'ng-show=\"bsPpCtrl.visible || bsPpCtrl.fadeIn\">'\n        + '<div class=\"arrow\"></div>'\n        + '<div class=\"popover-header\" ng-transclude=\"title\" ng-show=\"bsPpCtrl.titleVisible\">'\n        + '{{bsPpCtrl.defaultTitle}}'\n        + '</div>'\n        + '<div class=\"popover-body\" ng-transclude=\"content\" ng-show=\"bsPpCtrl.contentVisible\">'\n        + '{{bsPpCtrl.defaultContent}}'\n        + '</div>'\n        + '</div>',\n    controllerAs: 'bsPpCtrl',\n    bindings: {\n        visible: '<',\n        animation: '<',\n        delay: '<',\n        parentElement: '<',\n        boundary: '<'\n    },\n    transclude: {\n        title: '?bsPopoverTitle',\n        content: '?bsPopoverContent'\n    },\n    controller: BsPopoverComponentController\n};\n","/*\n * Twitter Bootstrap 4 plugin for AngularJS.\n * Copyright (c) 2016-2021 Rodziu <mateusz.rohde@gmail.com>\n * License: MIT\n */\n\n\nimport {\n    IAttributes,\n    ICompileService,\n    IDirective,\n    IDocumentService,\n    ISCEService,\n    IScope,\n    ITimeoutService\n} from 'angular';\nimport {IPopoverOptions} from './popover.provider';\nimport * as angular from 'angular';\nimport {placement} from '../helpers/angularBS.service';\n\ninterface IBSPopoverElementScope extends IScope {\n    bsPpCtrl: BsPopoverToggleDirectiveController\n}\n\n/**\n * @ngInject\n */\nclass BsPopoverToggleDirectiveController {\n    private $scope: IScope;\n    private $element: JQLite;\n    private $attrs: IAttributes;\n    private readonly $compile: ICompileService;\n    private $timeout: ITimeoutService;\n    private $document: IDocumentService;\n    private $sce: ISCEService;\n    private Popover: IPopoverOptions;\n    private bsPopoverToggle: boolean;\n    private placement: placement;\n    private title: string;\n    private content: string;\n    private readonly documentClick: (JQueryEventObject) => void;\n    private html: string;\n    private popoverElement: JQLite = null;\n\n    constructor(\n        $scope: IScope,\n        $element: JQLite,\n        $attrs: IAttributes,\n        $compile: ICompileService,\n        $timeout: ITimeoutService,\n        $document: IDocumentService,\n        $sce: ISCEService,\n        Popover: IPopoverOptions\n    ) {\n        this.$scope = $scope;\n        this.$element = $element;\n        this.$attrs = $attrs;\n        this.$compile = $compile;\n        this.$timeout = $timeout;\n        this.$document = $document;\n        this.$sce = $sce;\n        this.Popover = Popover;\n\n        this.documentClick = (e: JQueryMouseEventObject) => {\n            if (!$element[0].contains(e.target)) {\n                this.bsPopoverToggle = false;\n                this.$scope.$digest();\n            }\n        };\n\n        ['title', 'content'].forEach((attr) => {\n            $attrs.$observe(attr, (value) => {\n                if (!(angular.isDefined(this.html) && this.html) || Popover.html) {\n                    value = (value as string).replace(/[\\u00A0-\\u9999<>&'\"]/gim, function(i) {\n                        return '&#' + i.charCodeAt(0) + ';'\n                    });\n                }\n                this[attr] = $sce.trustAsHtml(value);\n                if (attr === 'title') {\n                    $element.attr('title', '');\n                }\n            });\n        });\n\n        const watcher = this.$scope.$watch(() => {\n            return this.bsPopoverToggle;\n        }, (nV) => {\n            if (nV) {\n                this.bsPopoverToggle = false;\n                this.$compile(\n                    '<bs-popover visible=\"bsPpCtrl.bsPopoverToggle\" animation=\"bsPpCtrl.animation\" '\n                    + 'delay=\"bsPpCtrl.delay\" placement=\"{{bsPpCtrl.placement}}\" '\n                    + 'parent-element=\"bsPpCtrl.$element\" '\n                    + 'boundary=\"bsPpCtrl.boundary\">'\n                    + '<bs-popover-title ng-bind-html=\"bsPpCtrl.title\"></bs-popover-title>'\n                    + '<bs-popover-content ng-bind-html=\"bsPpCtrl.content\"></bs-popover-content>'\n                    + '</bs-popover>'\n                )(this.$scope.$new(), (newElement, newScope: IBSPopoverElementScope) => {\n                    newScope.bsPpCtrl = this;\n                    $document.find('body').append(newElement);\n                    this.popoverElement = newElement;\n                    // we delay popover display a little, to properly calculate its dimensions after its created\n                    $timeout(() => {\n                        this.bsPopoverToggle = true;\n                    }, 50);\n                });\n                watcher(); // create popover element once and leave it be\n            }\n        });\n    }\n\n    $onInit(): void {\n        if (angular.isUndefined(this.bsPopoverToggle)) {\n            this.bsPopoverToggle = false;\n        }\n        const triggers = (angular.isUndefined(this.$attrs.trigger) ? this.Popover.trigger : this.$attrs.trigger)\n                .split(' '),\n            open = () => {\n                this.bsPopoverToggle = true;\n                this.$scope.$digest();\n            },\n            close = () => {\n                this.bsPopoverToggle = false;\n                this.$scope.$digest();\n            };\n        if (~triggers.indexOf('hover')) {\n            this.$element.on('mouseenter', open);\n            this.$element.on('mouseleave', close);\n        }\n        if (~triggers.indexOf('focus')) {\n            this.$element.on('click', open);\n            this.$document.on('click', this.documentClick);\n        }\n        if (~triggers.indexOf('click')) {\n            this.$element.on('click', () => {\n                this.bsPopoverToggle = !this.bsPopoverToggle;\n                this.$scope.$digest();\n            });\n        }\n        this.placement = angular.isUndefined(this.$attrs.placement) ? this.Popover.placement : this.$attrs.placement;\n        this.title = this.$sce.trustAsHtml(this.Popover.title);\n        this.content = this.$sce.trustAsHtml(this.Popover.content);\n    }\n\n    $onDestroy(): void {\n        if (this.popoverElement !== null) {\n            this.popoverElement.remove();\n        }\n        this.$document.off('click', this.documentClick);\n    }\n}\n\nexport function bsPopoverToggleDirective(): IDirective {\n    /**\n     * @ngdoc directive\n     * @name bsPopoverToggle\n     *\n     * @param {expression|boolean} bsPopoverToggle\n     * @param {expression|boolean} animation\n     * @param {expression|number} delay\n     * @param {expression|boolean} html\n     * @param placement\n     * @param title\n     * @param trigger\n     */\n    return {\n        restrict: 'A',\n        bindToController: {\n            bsPopoverToggle: '=?',\n            animation: '<?',\n            delay: '<?',\n            html: '<?'\n        },\n        require: ['?^bsPopoverBoundary', 'bsPopoverToggle'],\n        controllerAs: 'bsPpCtrl',\n        link: function(scope, element, attrs, ctrl) {\n            ctrl[1].boundary = ctrl[0] === null ? null : ctrl[0].$element;\n        },\n        controller: BsPopoverToggleDirectiveController\n    };\n}\n","/*\n * Twitter Bootstrap 4 plugin for AngularJS.\n * Copyright (c) 2016-2021 Rodziu <mateusz.rohde@gmail.com>\n * License: MIT\n */\nimport * as angular from 'angular';\nimport {helpers} from '../helpers/helpers.module';\nimport {PopoverProvider} from './popover.provider';\nimport {bsPopoverBoundaryDirective} from './bs-popover-boundary.directive';\nimport {bsPopoverComponent} from './bs-popover.component';\nimport {bsPopoverToggleDirective} from './bs-popover-toggle.directive';\n\nconst popoverModule = angular.module('angularBS.popover', [helpers])\n    .provider('Popover', PopoverProvider)\n    .directive('bsPopoverBoundary', bsPopoverBoundaryDirective)\n    .component('bsPopover', bsPopoverComponent)\n    .directive('bsPopoverToggle', bsPopoverToggleDirective);\n\nexport const angularBSPopover = popoverModule.name;\n","/*\n * Twitter Bootstrap 4 plugin for AngularJS.\n * Copyright (c) 2016-2021 Rodziu <mateusz.rohde@gmail.com>\n * License: MIT\n */\n\nimport {placement} from '../helpers/angularBS.service';\n\nexport type popoverDelay = number | {show: number, hide: number};\n\nexport interface IPopoverOptions {\n    animation: boolean,\n    delay: popoverDelay,\n    html: boolean,\n    placement: placement,\n    title: string,\n    content: string,\n    trigger: 'click' | 'hover' | 'focus' | string\n}\n\nexport class PopoverProvider {\n    public config: IPopoverOptions ={\n        animation: true,\n        delay: 0,\n        html: false,\n        placement: 'right',\n        title: '',\n        content: '',\n        trigger: 'click'\n    }\n\n    $get(): IPopoverOptions {\n        return this.config;\n    }\n}\n","/*\n * Twitter Bootstrap 4 plugin for AngularJS.\n * Copyright (c) 2016-2021 Rodziu <mateusz.rohde@gmail.com>\n * License: MIT\n */\nimport {ICompileService, IComponentOptions, IOnChangesObject, IScope, ITranscludeFunction} from 'angular';\nimport {IToastsOptions} from './toasts.provider';\nimport * as angular from 'angular';\n\n/**\n * @ngInject\n */\nclass BsToastComponentController {\n    private $scope: IScope;\n    private $element: JQLite;\n    private $compile: ICompileService;\n    private Toasts: IToastsOptions;\n    private animation: boolean;\n    private visible: boolean;\n    private fadeIn: boolean;\n\n    constructor(\n        $scope: IScope,\n        $element: JQLite,\n        $transclude: ITranscludeFunction,\n        $compile: ICompileService,\n        Toasts: IToastsOptions\n    ) {\n        this.$scope = $scope;\n        this.$element = $element;\n        this.$compile = $compile;\n        this.Toasts = Toasts;\n\n        $transclude((elements, scope) => {\n            let header, body;\n            for (let i = 0; i < elements.length; i++) {\n                if (elements[i].tagName === 'BS-TOAST-HEADER') {\n                    header = elements[i];\n                } else if (elements[i].tagName === 'BS-TOAST-BODY') {\n                    body = elements[i];\n                }\n            }\n            if (header) {\n                header = angular.element(header);\n                header.addClass('toast-header');\n                $element.children().append($compile(header)(scope))\n            }\n            if (body) {\n                body = angular.element(body);\n                body.addClass('toast-body d-block');\n                $element.children().append($compile(body)(scope))\n            }\n        });\n    }\n\n    $onInit(): void {\n        if (angular.isUndefined(this.animation)) {\n            this.animation = this.Toasts.animation;\n        }\n    }\n\n    $onChanges(changes: IOnChangesObject): void {\n        if (\n            angular.isDefined(changes.visible)\n            && changes.visible.previousValue !== changes.visible.currentValue\n        ) {\n            this.visible = !!changes.visible.currentValue;\n            if (this.animation && !this.visible && !changes.visible.isFirstChange()) {\n                // properly display fade out animation\n                this.visible = true;\n                this.fadeIn = false;\n                const transition = () => {\n                    this.visible = false;\n                    this.$element.children()[0].removeEventListener('transitionend', transition);\n                    this.$scope.$digest();\n                };\n                this.$element.children()[0].addEventListener('transitionend', transition);\n            } else {\n                this.fadeIn = this.visible;\n            }\n        }\n    }\n}\n\n/**\n * @ngdoc component\n * @name bsToastHeader\n * @description contents of this element would be transcluded to .toast-header element\n */\n/**\n * @ngdoc component\n * @name bsToastBody\n * @description contents of this element would be transcluded to .toast-body element\n */\n/**\n * @ngdoc component\n * @name bsToast\n *\n * @param {expression|boolean} visible\n * @param {expression|boolean} animation\n */\nexport const bsToastComponent: IComponentOptions = {\n    template: '<div class=\"toast\" '\n        + 'ng-class=\"{\\'fade\\': vm.animation, \\'show\\': vm.fadeIn}\" '\n        + 'style=\"display: {{vm.visible || vm.fadeIn ? \\'block\\' : \\'none\\'}}\">'\n        + '</div>',\n    controllerAs: 'vm',\n    bindings: {\n        visible: '<',\n        animation: '<'\n    },\n    transclude: true,\n    controller: BsToastComponentController\n};\n","/*\n * Twitter Bootstrap 4 plugin for AngularJS.\n * Copyright (c) 2016-2021 Rodziu <mateusz.rohde@gmail.com>\n * License: MIT\n */\nimport * as angular from 'angular';\nimport {ToastsProvider} from './toasts.provider';\nimport {bsToastComponent} from './bs-toast.component';\n\nconst toastsModule = angular.module('angularBS.toasts', [])\n    .provider('Toasts', ToastsProvider)\n    .component('bsToast', bsToastComponent);\n\nexport const angularBSToasts = toastsModule.name;\n","/*\n * Twitter Bootstrap 4 plugin for AngularJS.\n * Copyright (c) 2016-2021 Rodziu <mateusz.rohde@gmail.com>\n * License: MIT\n */\n\nexport interface IToastsOptions {\n    animation: boolean\n}\n\nexport class ToastsProvider {\n    public config: IToastsOptions = {\n        animation: true\n    }\n\n    $get(): IToastsOptions {\n        return this.config;\n    }\n}\n","/*\n * Twitter Bootstrap 4 plugin for AngularJS.\n * Copyright (c) 2016-2021 Rodziu <mateusz.rohde@gmail.com>\n * License: MIT\n */\nimport {IDirective} from 'angular';\n\n/**\n * @ngInject\n */\nclass BsTooltipBoundaryDirectiveController {\n    private $element: JQLite;\n\n    constructor($element: JQLite) {\n        this.$element = $element;\n    }\n}\n\nexport function bsTooltipBoundaryDirective(): IDirective {\n    return {\n        restrict: 'A',\n        controller: BsTooltipBoundaryDirectiveController\n    };\n}\n","/*\n * Twitter Bootstrap 4 plugin for AngularJS.\n * Copyright (c) 2016-2021 Rodziu <mateusz.rohde@gmail.com>\n * License: MIT\n */\n\nimport IInjectorService = angular.auto.IInjectorService;\nimport {IDirective} from 'angular';\nimport {BsTooltipToggleDirectiveController} from './bs-tooltip-toggle.directive';\n\n/**\n * @ngInject\n */\nexport class BsTooltipFactory {\n    private $injector: IInjectorService;\n\n    constructor($injector: IInjectorService) {\n        this.$injector = $injector;\n    }\n\n    customBindingDirective(): IDirective {\n        return {\n            restrict: 'A',\n            require: '?^bsTooltipBoundary',\n            compile: (element, attrs) => {\n                if (!('bsTooltipToggle' in attrs) && !('bsPopoverToggle' in attrs)) {\n                    return (scope, element, attrs, ctrl) => {\n                        const directive = this.$injector.get('bsTooltipToggleDirective')[0],\n                            bsTooltipToggleCtrl = this.$injector.instantiate(directive.controller, {\n                                '$scope': scope,\n                                '$element': element,\n                                '$attrs': attrs\n                            }) as BsTooltipToggleDirectiveController;\n                        directive.compile(\n                            element, scope, attrs, [ctrl, bsTooltipToggleCtrl]\n                        )(\n                            scope, element, attrs, [ctrl, bsTooltipToggleCtrl]\n                        );\n                        bsTooltipToggleCtrl.$onInit();\n                        element.on('$destroy', function() {\n                            bsTooltipToggleCtrl.$onDestroy();\n                        });\n                    }\n                }\n            }\n        }\n    }\n}\n","/*\n * Twitter Bootstrap 4 plugin for AngularJS.\n * Copyright (c) 2016-2021 Rodziu <mateusz.rohde@gmail.com>\n * License: MIT\n */\n\nimport {IAttributes, ICompileService, IDirective, IDocumentService, ISCEService, IScope} from 'angular';\nimport {ITooltipOptions} from './tooltip.provider';\nimport * as angular from 'angular';\nimport {placement} from '../helpers/angularBS.service';\n\ninterface IBSTooltipScope extends IScope {\n    bsTpCtrl: BsTooltipToggleDirectiveController\n}\n\n/**\n * @ngInject\n */\nexport class BsTooltipToggleDirectiveController {\n    private $scope: IScope;\n    private $element: JQLite;\n    private $attrs: IAttributes;\n    private $document: IDocumentService;\n    private $sce: ISCEService;\n    private Tooltip: ITooltipOptions;\n    private _tooltipElement: JQLite = null;\n    private html: boolean;\n    private title: string;\n    private bsTooltipToggle: boolean;\n    private placement: placement;\n\n    constructor(\n        $scope: IScope,\n        $element: JQLite,\n        $attrs: IAttributes,\n        $compile: ICompileService,\n        $document: IDocumentService,\n        $sce: ISCEService,\n        Tooltip: ITooltipOptions\n    ) {\n        this.$scope = $scope;\n        this.$element = $element;\n        this.$attrs = $attrs;\n        this.$document = $document;\n        this.$sce = $sce;\n        this.Tooltip = Tooltip;\n\n        $attrs.$observe('title', (value) => {\n            if (!(angular.isDefined(this.html) && this.html) || Tooltip.html) {\n                value = (value as string).replace(/[\\u00A0-\\u9999<>&'\"]/gim, (i) => {\n                    return '&#' + i.charCodeAt(0) + ';'\n                });\n            }\n            this.title = $sce.trustAsHtml(value);\n            $element.attr('title', '');\n        });\n\n        const watcher = $scope.$watch(() => {\n            return this.bsTooltipToggle;\n        }, (nV) => {\n            if (nV) {\n                $compile(\n                    '<bs-tooltip visible=\"bsTpCtrl.bsTooltipToggle\" animation=\"bsTpCtrl.animation\" '\n                    + 'delay=\"bsTpCtrl.delay\" placement=\"{{bsTpCtrl.placement}}\" '\n                    + 'parent-element=\"bsTpCtrl.$element\" '\n                    + 'boundary=\"bsTpCtrl.boundary\">'\n                    + '<span ng-bind-html=\"bsTpCtrl.title\"></span></bs-tooltip>'\n                )($scope.$new(), (newElement, newScope: IBSTooltipScope) => {\n                    newScope.bsTpCtrl = this;\n                    $document.find('body').append(newElement);\n                    this._tooltipElement = newElement;\n                });\n                watcher(); // create tooltip element once and leave it be\n            }\n        });\n    }\n\n    $onInit(): void {\n        if (angular.isUndefined(this.bsTooltipToggle)) {\n            this.bsTooltipToggle = false;\n        }\n        const triggers = (angular.isUndefined(this.$attrs.trigger) ? this.Tooltip.trigger : this.$attrs.trigger)\n                .split(' '),\n            open = () => {\n                this.bsTooltipToggle = true;\n                this.$scope.$digest();\n            },\n            close = () => {\n                this.bsTooltipToggle = false;\n                this.$scope.$digest();\n            };\n        if (~triggers.indexOf('hover')) {\n            this.$element.on('mouseenter', open);\n            this.$element.on('mouseleave', close);\n        }\n        if (~triggers.indexOf('focus')) {\n            this.$element.on('focus', open);\n            this.$element.on('blur', close);\n        }\n        if (~triggers.indexOf('click')) {\n            this.$element.on('click', () => {\n                this.bsTooltipToggle = !this.bsTooltipToggle;\n                this.$scope.$digest();\n            });\n        }\n        this.placement = angular.isUndefined(this.$attrs.placement) ? this.Tooltip.placement : this.$attrs.placement;\n        this.title = this.$sce.trustAsHtml(this.Tooltip.title);\n    }\n\n    $onDestroy(): void {\n        if (this._tooltipElement !== null) {\n            this._tooltipElement.remove();\n        }\n    }\n}\n\nexport function bsTooltipToggleDirective(): IDirective {\n    /**\n     * @ngdoc directive\n     * @name bsTooltipToggle\n     *\n     * @param {expression|boolean} bsTooltipToggle\n     * @param {expression|boolean} animation\n     * @param {expression|number} delay\n     * @param {expression|boolean} html\n     * @param placement\n     * @param title\n     * @param trigger\n     */\n    return {\n        restrict: 'A',\n        bindToController: {\n            bsTooltipToggle: '=?',\n            animation: '<?',\n            delay: '<?',\n            html: '<?'\n        },\n        require: ['?^bsTooltipBoundary', 'bsTooltipToggle'],\n        controllerAs: 'bsTpCtrl',\n        link: function(scope, element, attrs, ctrl) {\n            ctrl[1].boundary = ctrl[0] === null ? null : ctrl[0].$element;\n        },\n        controller: BsTooltipToggleDirectiveController\n    };\n}\n","/*\n * Twitter Bootstrap 4 plugin for AngularJS.\n * Copyright (c) 2016-2021 Rodziu <mateusz.rohde@gmail.com>\n * License: MIT\n */\n\nimport {IAttributes, IComponentOptions, IOnChangesObject, IPromise, IScope, ITimeoutService} from 'angular';\nimport {ITooltipOptions, tooltipDelay} from './tooltip.provider';\nimport {AngularBSService, placement} from '../helpers/angularBS.service';\nimport * as angular from 'angular';\n\n/**\n * @ngInject\n */\nclass BsTooltipComponentController {\n    private $scope: IScope;\n    private $element: JQLite;\n    private $attrs: IAttributes;\n    private readonly $timeout: ITimeoutService;\n    private Tooltip: ITooltipOptions;\n    private angularBS: AngularBSService;\n    private _delay: tooltipDelay;\n    private _timeout: IPromise<void> = null;\n    private placement: placement;\n    private titleVisible: boolean;\n    private animation: boolean;\n    private delay: tooltipDelay;\n    private defaultTitle: string;\n    private visible: boolean;\n    private parentElement: JQLite;\n    private boundary: JQLite;\n    private fadeIn: boolean;\n\n    constructor(\n        $scope: IScope,\n        $element: JQLite,\n        $attrs: IAttributes,\n        $timeout: ITimeoutService,\n        Tooltip: ITooltipOptions,\n        angularBS: AngularBSService\n    ) {\n        this.$scope = $scope;\n        this.$element = $element;\n        this.$attrs = $attrs;\n        this.$timeout = $timeout;\n        this.Tooltip = Tooltip;\n        this.angularBS = angularBS;\n\n        $attrs.$observe('placement', (value) => {\n            this.placement = value as string;\n        });\n        // check if title is not empty\n        const title = angular.element($element[0].querySelector('.tooltip-inner'));\n        $scope.$watch(() => {\n            return title.text().trim();\n        }, (nV) => {\n            this.titleVisible = nV !== '';\n        });\n    }\n\n    $onInit(): void {\n        if (angular.isUndefined(this.animation)) {\n            this.animation = this.Tooltip.animation;\n        }\n        if (angular.isUndefined(this.delay)) {\n            this.delay = this.Tooltip.delay;\n        }\n        this.placement = this.Tooltip.placement;\n        this.defaultTitle = this.Tooltip.title;\n        this.$element.children().css({top: 0});\n    }\n\n    $onChanges(changes: IOnChangesObject): void {\n        if (angular.isDefined(changes.delay)) {\n            this._delay = angular.isDefined(changes.delay.currentValue)\n                ? changes.delay.currentValue : this.Tooltip.delay;\n        }\n        if (\n            angular.isDefined(changes.visible)\n            && changes.visible.previousValue !== changes.visible.currentValue\n        ) {\n            this.visible = changes.visible.currentValue !== false;\n            let delay: number;\n            if (angular.isObject(this._delay)) {\n                delay = this._delay[this.visible ? 'show' : 'hide'] || this.Tooltip.delay;\n            } else {\n                delay = this._delay;\n            }\n            if (this._timeout !== null) {\n                this.$timeout.cancel(this._timeout);\n            }\n            this._timeout = this.$timeout(() => {\n                this._timeout = null;\n                if (this.visible) {\n                    if (this.parentElement) {\n                        this.angularBS.positionElement(\n                            this.$element.children(), this.parentElement, this.placement,\n                            this.boundary !== null ? this.boundary : undefined,\n                            'bs-tooltip-'\n                        );\n                    } else { // static tooltip\n                        this.angularBS.setPlacementCSS(this.$element.children(), 'bs-tooltip-', this.placement);\n                        this.angularBS.adjustArrow(this.$element.children(), this.placement);\n                    }\n                    this.fadeIn = this.visible;\n                } else {\n                    // properly display fade out animation\n                    this.visible = true;\n                    this.fadeIn = false;\n                    const transition = () => {\n                        this.visible = false;\n                        this.$element.children()[0].removeEventListener('transitionend', transition);\n                        this.$scope.$digest();\n                    };\n                    this.$element.children()[0].addEventListener('transitionend', transition);\n                }\n            }, delay);\n        }\n    }\n}\n\n/**\n * @ngdoc component\n * @name bsTooltip\n *\n * @param {expression|boolean} visible\n * @param {expression|boolean} animation\n * @param {expression|number} delay\n * @param {expression} parentElement\n * @param {expression} boundary\n * @param placement\n */\nexport const bsTooltipComponent: IComponentOptions = {\n    template: '<div class=\"tooltip\" '\n        + 'ng-class=\"{\\'fade\\': bsTpCtrl.animation, \\'show\\': bsTpCtrl.fadeIn}\" '\n        + 'ng-show=\"bsTpCtrl.visible || bsTpCtrl.fadeIn\">'\n        + '<div class=\"arrow\" ng-show=\"bsTpCtrl.titleVisible\"></div>'\n        + '<div class=\"tooltip-inner\" ng-transclude ng-show=\"bsTpCtrl.titleVisible\">{{bsTpCtrl.defaultTitle}}</div>'\n        + '</div>',\n    controllerAs: 'bsTpCtrl',\n    bindings: {\n        visible: '<',\n        animation: '<',\n        delay: '<',\n        parentElement: '<',\n        boundary: '<'\n    },\n    transclude: true,\n    controller: BsTooltipComponentController\n};\n","/*\n * Twitter Bootstrap 4 plugin for AngularJS.\n * Copyright (c) 2016-2021 Rodziu <mateusz.rohde@gmail.com>\n * License: MIT\n */\nimport {helpers} from '../helpers/helpers.module';\nimport * as angular from 'angular';\nimport {TooltipProvider} from './tooltip.provider';\nimport {bsTooltipBoundaryDirective} from './bs-tooltip-boundary.directive';\nimport {BsTooltipFactory} from './bs-tooltip.factory';\nimport {bsTooltipToggleDirective} from './bs-tooltip-toggle.directive';\nimport {bsTooltipComponent} from './bs-tooltip.component';\n\nconst tooltipModule = angular.module('angularBS.tooltip', [helpers])\n    .provider('Tooltip', TooltipProvider)\n    .factory('bsTooltipFactory',  BsTooltipFactory)\n    .directive('bsTooltipBoundary', bsTooltipBoundaryDirective)\n    .directive('bsTooltipToggle', bsTooltipToggleDirective)\n    .component('bsTooltip', bsTooltipComponent);\n\nexport const angularBSTooltip = tooltipModule.name;\n","/*\n * Twitter Bootstrap 4 plugin for AngularJS.\n * Copyright (c) 2016-2021 Rodziu <mateusz.rohde@gmail.com>\n * License: MIT\n */\nimport {placement} from '../helpers/angularBS.service';\n\nexport type tooltipDelay = number | { show: number, hide: number };\n\nexport interface ITooltipOptions {\n    animation: boolean,\n    delay: tooltipDelay,\n    placement: placement,\n    html: boolean,\n    title: string,\n    trigger: 'click' | 'hover' | 'focus' | string\n}\n\nexport class TooltipProvider {\n    public config: ITooltipOptions = {\n        animation: true,\n        delay: 0,\n        placement: 'bottom',\n        html: false,\n        title: '',\n        trigger: 'hover focus'\n    }\n\n    $get(): ITooltipOptions {\n        return this.config;\n    }\n}\n","/*\n * Twitter Bootstrap 4 plugin for AngularJS.\n * Copyright (c) 2016-2021 Rodziu <mateusz.rohde@gmail.com>\n * License: MIT\n */\nimport {angularBS} from './lib/angularBS.module';\nexport * from './lib/carousel/carousel.provider';\nexport * from './lib/helpers/angularBS.service';\nexport * from './lib/modal/modal.provider';\nexport {BSModalController} from './lib/modal/bs-modal.directive';\nexport * from './lib/popover/popover.provider';\nexport * from './lib/toasts/toasts.provider';\nexport * from './lib/tooltip/tooltip.provider';\n\nexport default angularBS;\n","/*\n * Twitter Bootstrap 4 plugin for AngularJS.\n * Copyright (c) 2016-2021 Rodziu <mateusz.rohde@gmail.com>\n * License: MIT\n */\nimport * as angular from 'angular';\nimport {angularBSCarousel} from './carousel/carousel.module';\nimport {angularBSCollapse} from './collapse/collapse.module';\nimport {angularBSDropdown} from './dropdown/dropdown.module';\nimport {angularBSModal} from './modal/modal.module';\nimport {angularBSPopover} from './popover/popover.module';\nimport {angularBSToasts} from './toasts/toasts.module';\nimport {angularBSTooltip} from './tooltip/tooltip.module';\n\nconst angularBSModule = angular.module('angularBS', [\n    angularBSModal, angularBSDropdown, angularBSTooltip, angularBSPopover, angularBSCollapse,\n    angularBSCarousel, angularBSToasts\n]);\n\nexport const angularBS = angularBSModule.name;\n"],"sourceRoot":""}