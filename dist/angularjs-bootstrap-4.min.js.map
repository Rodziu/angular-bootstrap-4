{"version":3,"sources":["webpack://angularBS/webpack/universalModuleDefinition","webpack://angularBS/./node_modules/angular-animate/angular-animate.js","webpack://angularBS/./node_modules/angular-animate/index.js","webpack://angularBS/external \"angular\"","webpack://angularBS/webpack/bootstrap","webpack://angularBS/webpack/runtime/define property getters","webpack://angularBS/webpack/runtime/hasOwnProperty shorthand","webpack://angularBS/./.build/lib/src/lib/carousel/bs-carousel-item.directive.ts","webpack://angularBS/./.build/lib/src/lib/carousel/bs-carousel.directive.ts","webpack://angularBS/./.build/lib/src/lib/carousel/carousel.module.ts","webpack://angularBS/./.build/lib/src/lib/carousel/carousel.provider.ts","webpack://angularBS/./.build/lib/src/lib/carousel/bs-carousel-indicators.component.ts","webpack://angularBS/./.build/lib/src/lib/carousel/bs-carousel-nav.directive.ts","webpack://angularBS/./.build/lib/src/lib/collapse/bs-collapse.directive.ts","webpack://angularBS/./.build/lib/src/lib/collapse/bs-collapse-group.directive.ts","webpack://angularBS/./.build/lib/src/lib/collapse/collapse.module.ts","webpack://angularBS/./.build/lib/src/lib/helpers/helpers.module.ts","webpack://angularBS/./.build/lib/src/lib/helpers/angularBS.service.ts","webpack://angularBS/./.build/lib/src/lib/dropdown/bs-dropdown-boundary.directive.ts","webpack://angularBS/./.build/lib/src/lib/dropdown/bs-dropdown.directive.ts","webpack://angularBS/./.build/lib/src/lib/dropdown/dropdown.module.ts","webpack://angularBS/./.build/lib/src/lib/dropdown/bs-dropdown-toggle.directive.ts","webpack://angularBS/./.build/lib/src/lib/modal/modal-backdrop.factory.ts","webpack://angularBS/./.build/lib/src/lib/modal/bs-modal-backdrop.component.ts","webpack://angularBS/./.build/lib/src/lib/modal/bs-modal.directive.ts","webpack://angularBS/./.build/lib/src/lib/modal/modal.module.ts","webpack://angularBS/./.build/lib/src/lib/modal/modal.provider.ts","webpack://angularBS/./.build/lib/src/lib/modal/dismiss.directive.ts","webpack://angularBS/./.build/lib/src/lib/popover/bs-popover-boundary.directive.ts","webpack://angularBS/./.build/lib/src/lib/popover/bs-popover.component.ts","webpack://angularBS/./.build/lib/src/lib/popover/bs-popover-toggle.directive.ts","webpack://angularBS/./.build/lib/src/lib/popover/popover.module.ts","webpack://angularBS/./.build/lib/src/lib/popover/popover.provider.ts","webpack://angularBS/./.build/lib/src/lib/toasts/bs-toast.component.ts","webpack://angularBS/./.build/lib/src/lib/toasts/toasts.module.ts","webpack://angularBS/./.build/lib/src/lib/toasts/toasts.provider.ts","webpack://angularBS/./.build/lib/src/lib/tooltip/bs-tooltip-boundary.directive.ts","webpack://angularBS/./.build/lib/src/lib/tooltip/bs-tooltip.factory.ts","webpack://angularBS/./.build/lib/src/lib/tooltip/bs-tooltip-toggle.directive.ts","webpack://angularBS/./.build/lib/src/lib/tooltip/bs-tooltip.component.ts","webpack://angularBS/./.build/lib/src/lib/tooltip/tooltip.module.ts","webpack://angularBS/./.build/lib/src/lib/tooltip/tooltip.provider.ts","webpack://angularBS/./src/angularjs-bootstrap-4.ts","webpack://angularBS/./.build/src/lib/angularBS.module.ts"],"names":["root","factory","exports","module","require","define","amd","window","__WEBPACK_EXTERNAL_MODULE__734__","angular","TRANSITION_PROP","TRANSITIONEND_EVENT","ANIMATION_PROP","ANIMATIONEND_EVENT","ADD_CLASS_SUFFIX","REMOVE_CLASS_SUFFIX","NG_ANIMATE_CLASSNAME","NG_ANIMATE_CHILDREN_DATA","undefined","ontransitionend","onwebkittransitionend","onanimationend","onwebkitanimationend","DURATION_KEY","PROPERTY_KEY","DELAY_KEY","TIMING_KEY","ANIMATION_DELAY_PROP","ANIMATION_DURATION_PROP","TRANSITION_DELAY_PROP","TRANSITION_DURATION_PROP","ngMinErr","$$minErr","assertArg","arg","name","reason","mergeClasses","a","b","isArray","join","pendClasses","classes","fix","isPrefix","className","isString","length","split","forEach","klass","i","stripCommentsFromElement","element","jqLite","nodeType","extractElementNode","elm","applyAnimationClassesFactory","$$jqLite","options","addClass","$$addClass","removeClass","$$removeClass","prepareAnimationOptions","$$prepared","domOperation","noop","$$domOperationFired","applyAnimationStyles","applyAnimationFromStyles","applyAnimationToStyles","from","css","to","mergeAnimationDetails","oldAnimation","newAnimation","target","newOptions","toAdd","toRemove","existing","flags","splitClassesToLookup","value","key","obj","val","prop","allow","resolveElementClasses","attr","preparationClasses","concatWithSpace","realDomOperation","extend","getDomNode","blockKeyframeAnimations","node","applyBlock","applyInlineStyle","styleTuple","style","helpers","duration","$$AnimateChildrenDirective","$interpolate","link","scope","attrs","ngAnimateChildren","setData","data","$observe","ANIMATE_TIMER_KEY","ONE_SECOND","DETECT_CSS_PROPERTIES","transitionDuration","transitionDelay","transitionProperty","animationDuration","animationDelay","animationIterationCount","DETECT_STAGGER_CSS_PROPERTIES","getCssDelayStyle","delay","isKeyframeAnimation","computeCssStyles","$window","properties","styles","Object","create","detectedStyles","getComputedStyle","formalStyleName","actualStyleName","maxValue","values","c","charAt","substring","parseFloat","Math","max","truthyTimingValue","getCssTransitionDurationStyle","applyOnlyDuration","registerRestorableStyles","backup","isDefined","getPropertyValue","copy","isElement","isFunction","isObject","isUndefined","$AnimateCssProvider","$animateProvider","this","$get","$$AnimateRunner","$timeout","$$animateCache","$$forceReflow","$sniffer","$$rAFScheduler","$$animateQueue","applyAnimationClasses","rafWaitQueue","waitUntilQuiet","callback","push","flush","pageWidth","computeTimings","cacheKey","allowNoDuration","timings","get","hasDuration","put","computeCachedCssStyles","aD","tD","maxDelay","maxDuration","initialOptions","restoreStyles","parentNode","enabled","closeAndReturnNoopAnimator","animationClosed","animationPaused","animationCompleted","runner","runnerHost","maxDelayTime","maxDurationTime","startTime","temporaryStyles","packageStyles","events","animations","transitions","method","event","isStructural","structural","structuralClassName","addRemoveClassName","applyClassesEarly","trim","hasToStyles","keys","keyframeStyle","stagger","containsCachedAnimationWithoutDuration","staggerVal","staggerCacheKey","count","staggerClassName","computeCachedCssStaggerStyles","$$skipPreparationClasses","transitionStyle","durationStyle","itemIndex","staggerIndex","isFirst","skipBlocking","fullClassName","relativeDelay","hasTransitions","hasAnimations","hasTransitionAll","applyTransitionDuration","applyAnimationDuration","applyTransitionDelay","applyAnimationDelay","recalculateTimingStyles","delayStyle","activeClasses","blockTransition","blockKeyframeAnimation","cleanupStyles","applyBlocking","$$willAnimate","end","endFn","start","cancel","cancelFn","resume","pause","close","rejected","entry","setProperty","removeProperty","onDone","off","onAnimationProgress","animationTimerData","timer","removeData","complete","stopPropagation","ev","originalEvent","timeStamp","$manualTimeStamp","Date","now","elapsedTime","toFixed","playPause","playAnimation","index","arr","indexOf","splice","maxStagger","triggerAnimationStart","floor","getAttribute","easing","easeProp","easeVal","timerTime","endTime","animationsData","setupFallbackTimer","currentTimerData","expectedEndTime","onAnimationExpired","on","$$AnimateCssDriverProvider","$$animationProvider","drivers","NG_ANIMATE_SHIM_CLASS_NAME","$animateCss","$rootScope","$rootElement","$document","bodyNode","body","rootNode","rootBodyElement","contains","animationDetails","anchors","fromAnimation","prepareRegularAnimation","toAnimation","anchorAnimations","anchor","animator","outAnchor","inAnchor","clone","cloneNode","startingClasses","filterCssClasses","getClassVal","append","animatorIn","animatorOut","calculateAnchorStyles","prepareOutAnimation","prepareInAnimation","startingAnimator","currentAnimation","done","coords","getBoundingClientRect","scrollTop","scrollLeft","endingClasses","getUniqueValues","NG_IN_ANCHOR_CLASS_NAME","NG_OUT_ANCHOR_CLASS_NAME","remove","prepareAnchoredAnimation","animationRunners","animation","all","status","prepareFromToAnchorAnimation","replace","filter","$$AnimateJsProvider","$injector","arguments","before","after","afterFn","beforeFn","classesToAdd","classesToRemove","lookupAnimations","toUpperCase","substr","packageAnimations","closeActiveAnimations","chain","fn","applyOptions","setHost","endAnimations","onComplete","success","cancelled","executeAnimationFn","args","apply","groupEventedAnimations","fnName","operations","ani","endProgressCb","resolved","onAnimationComplete","result","concat","runners","animateFn","reject","matches","flagMap","animationFactory","$$registeredAnimations","$$AnimateJsDriverProvider","$$animateJs","prepareAnimation","endFnFactory","NG_ANIMATE_ATTR_NAME","NG_ANIMATE_PIN_DATA","$$AnimateQueueProvider","rules","skip","getEventData","hasMatchingClasses","newClassString","currentClassString","currentClassMap","classString","map","makeTruthyCssClassMap","some","isAllowed","ruleType","previousAnimation","hasAnimationClasses","and","state","nA","nR","cA","cR","$$rAF","$$Map","$$animation","$templateRequest","$$isDocumentHidden","activeAnimationsLookup","disabledElementsLookup","animationsEnabled","removeFromDisabledElementsLookup","evt","delete","deregisterWatch","$watch","totalPendingRequests","isEmpty","$$postDigest","callbackRegistry","customFilter","classNameFilter","returnTrue","isAnimatableByFilter","isAnimatableClassName","test","normalizeAnimationDetails","Node","prototype","compareDocumentPosition","filterFromRegistry","list","matchContainer","matchCallback","containerNode","cleanupEventListeners","phase","$animate","container","entries","eventType","pin","parentElement","originalElement","postDigestCalled","runInNextPostDigestOrNow","documentHidden","skipAnimations","existingAnimation","hasExistingAnimation","animateChildren","bodyNodeDetected","nodeName","rootNodeDetected","parentAnimationDetected","elementDisabled","parentHost","details","parentNodeDisabled","areAnimationsAllowed","notifyProgress","children","querySelectorAll","child","parseInt","closeChildAnimations","applyGeneratedPreparationClasses","isValidAnimation","clearElementAnimationState","counter","markElementAnimationState","animationCancelled","parent","realRunner","callbacks","targetParentNode","targetNode","call","findCallbacks","progress","clearGeneratedClasses","queueAnimation","bool","argCount","hasElement","has","set","removeAttribute","setAttribute","oldValue","newValue","$$AnimationProvider","NG_ANIMATE_REF_ATTR","RUNNER_STORAGE_KEY","PREPARE_CLASSES_KEY","getRunner","animationQueue","tempClasses","setRunner","beforeStart","prepareClassName","handleDestroyedElement","groupedAnimations","preparedAnimations","refLookup","enterOrMove","anchorNodes","items","hasAttribute","getAnchorNodes","direction","animationID","usedIndicesLookup","anchorGroups","lookupKey","toString","group","cssClassesIntersection","indexKey","groupAnimations","toBeSortedAnimations","animationEntry","extraClasses","domNode","startAnimationFn","closeFn","operation","driverName","driver","invokeFirstDriver","animationRunner","newRunner","update","updateAnimationRunners","finalAnimations","tree","lookup","processNode","queue","remainingLevelEntries","nextLevelEntries","row","childEntry","flatten","processed","parentEntry","elementNode","sortAnimations","innerArray","j","aa","removeRunner","info","angularVersion","directive","restrict","transclude","terminal","priority","$element","ctrl","$transclude","previousElement","previousScope","$watchCollection","ngAnimateSwap","leave","$destroy","childScope","enter","scheduler","tasks","nextTick","shift","provider","KEY","parentCounter","cache","parts","isValid","total","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__","d","definition","o","defineProperty","enumerable","hasOwnProperty","BsCarouselItemDirectiveController","BsCarouselDirectiveController","$scope","$attrs","$interval","Carousel","carouselInterval","slides","currentSlide","sliding","e","keyboard","tagName","prevNextSlide","$digest","preventDefault","interval","cycle","wrap","hasClass","isNext","nextIndex","slideTo","changeSlide","nextSlide","next","active","transition","removeEventListener","offsetWidth","addEventListener","angularBSCarousel","config","template","carousel","controllerAs","register","controller","bindToController","BsCollapseDirectiveController","bsCollapse","nV","collapse","expand","height","scrollHeight","BsCollapseGroupDirectiveController","bsCollapseCtrl","invokingCtrl","angularBSCollapse","$on","unregister","elemBCR","elemStyle","width","ceil","offsetHeight","top","pageYOffset","document","documentElement","left","pageXOffset","prefix","placement","placements","p","positionTo","boundaryElement","cssPrefix","splitPlacement","arrowTop","realPlacement","offset","offsetTo","auto","calcPosition","setPlacementCSS","newOffset","bo","innerWidth","clientWidth","innerHeight","clientHeight","newPlacement","arrow","querySelector","arrowTopN","adjustArrow","transform","BsDropdownBoundaryDirectiveController","BSDropdownDirectiveController","angularBS","bsDropdown","_onClick","bind","_keydown","_bsDropdown","boundary","reposition","$apply","idx","focus","boundaryOffset","menuOffset","angularBSDropdown","dropdownCtrl","ModalBackdropFactory","$compile","$q","_isVisible","_isAnimated","_openModals","_doHide","_bodyElement","find","backdropElement","backdropScope","$new","isVisible","backdrop","animate","_backDropPromise","defer","resolve","promise","backdropController","hide","then","BSModalBackdropController","ModalBackdrop","isAnimated","setTimeout","shown","defered","transitionFinished","bsModalBackdropComponent","BSModalController","Modal","getSelection","type","_keydownHandler","_onKeydown","_bsModal","bsModal","_doShow","display","transitionEnded","ret","onBeforeChange","invoke","_shouldChange","angularBSModal","backdropTransitionDuration","BsPopoverBoundaryDirectiveController","BsPopoverComponentController","Popover","title","content","text","titleVisible","contentVisible","defaultTitle","defaultContent","changes","_delay","currentValue","visible","previousValue","timeout","positionElement","fadeIn","isFirstChange","bsPopoverComponent","bindings","BsPopoverToggleDirectiveController","$sce","popoverElement","documentClick","bsPopoverToggle","html","charCodeAt","trustAsHtml","watcher","newElement","newScope","bsPpCtrl","triggers","trigger","open","angularBSPopover","BsToastComponentController","Toasts","elements","header","bsToastComponent","angularBSToasts","BsTooltipBoundaryDirectiveController","BsTooltipFactory","compile","bsTooltipToggleCtrl","instantiate","$onInit","$onDestroy","BsTooltipToggleDirectiveController","Tooltip","_tooltipElement","bsTooltipToggle","bsTpCtrl","BsTooltipComponentController","_timeout","bsTooltipComponent","angularBSTooltip"],"mappings":"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","file":"angularjs-bootstrap-4.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"angular\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"angularjs-bootstrap-4\", [\"angular\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"angularjs-bootstrap-4\"] = factory(require(\"angular\"));\n\telse\n\t\troot[\"angularjs-bootstrap-4\"] = factory(root[\"angular\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__734__) {\nreturn ","/**\n * @license AngularJS v1.8.0\n * (c) 2010-2020 Google, Inc. http://angularjs.org\n * License: MIT\n */\n(function(window, angular) {'use strict';\n\nvar ELEMENT_NODE = 1;\nvar COMMENT_NODE = 8;\n\nvar ADD_CLASS_SUFFIX = '-add';\nvar REMOVE_CLASS_SUFFIX = '-remove';\nvar EVENT_CLASS_PREFIX = 'ng-';\nvar ACTIVE_CLASS_SUFFIX = '-active';\nvar PREPARE_CLASS_SUFFIX = '-prepare';\n\nvar NG_ANIMATE_CLASSNAME = 'ng-animate';\nvar NG_ANIMATE_CHILDREN_DATA = '$$ngAnimateChildren';\n\n// Detect proper transitionend/animationend event names.\nvar CSS_PREFIX = '', TRANSITION_PROP, TRANSITIONEND_EVENT, ANIMATION_PROP, ANIMATIONEND_EVENT;\n\n// If unprefixed events are not supported but webkit-prefixed are, use the latter.\n// Otherwise, just use W3C names, browsers not supporting them at all will just ignore them.\n// Note: Chrome implements `window.onwebkitanimationend` and doesn't implement `window.onanimationend`\n// but at the same time dispatches the `animationend` event and not `webkitAnimationEnd`.\n// Register both events in case `window.onanimationend` is not supported because of that,\n// do the same for `transitionend` as Safari is likely to exhibit similar behavior.\n// Also, the only modern browser that uses vendor prefixes for transitions/keyframes is webkit\n// therefore there is no reason to test anymore for other vendor prefixes:\n// http://caniuse.com/#search=transition\nif ((window.ontransitionend === undefined) && (window.onwebkittransitionend !== undefined)) {\n  CSS_PREFIX = '-webkit-';\n  TRANSITION_PROP = 'WebkitTransition';\n  TRANSITIONEND_EVENT = 'webkitTransitionEnd transitionend';\n} else {\n  TRANSITION_PROP = 'transition';\n  TRANSITIONEND_EVENT = 'transitionend';\n}\n\nif ((window.onanimationend === undefined) && (window.onwebkitanimationend !== undefined)) {\n  CSS_PREFIX = '-webkit-';\n  ANIMATION_PROP = 'WebkitAnimation';\n  ANIMATIONEND_EVENT = 'webkitAnimationEnd animationend';\n} else {\n  ANIMATION_PROP = 'animation';\n  ANIMATIONEND_EVENT = 'animationend';\n}\n\nvar DURATION_KEY = 'Duration';\nvar PROPERTY_KEY = 'Property';\nvar DELAY_KEY = 'Delay';\nvar TIMING_KEY = 'TimingFunction';\nvar ANIMATION_ITERATION_COUNT_KEY = 'IterationCount';\nvar ANIMATION_PLAYSTATE_KEY = 'PlayState';\nvar SAFE_FAST_FORWARD_DURATION_VALUE = 9999;\n\nvar ANIMATION_DELAY_PROP = ANIMATION_PROP + DELAY_KEY;\nvar ANIMATION_DURATION_PROP = ANIMATION_PROP + DURATION_KEY;\nvar TRANSITION_DELAY_PROP = TRANSITION_PROP + DELAY_KEY;\nvar TRANSITION_DURATION_PROP = TRANSITION_PROP + DURATION_KEY;\n\nvar ngMinErr = angular.$$minErr('ng');\nfunction assertArg(arg, name, reason) {\n  if (!arg) {\n    throw ngMinErr('areq', 'Argument \\'{0}\\' is {1}', (name || '?'), (reason || 'required'));\n  }\n  return arg;\n}\n\nfunction mergeClasses(a,b) {\n  if (!a && !b) return '';\n  if (!a) return b;\n  if (!b) return a;\n  if (isArray(a)) a = a.join(' ');\n  if (isArray(b)) b = b.join(' ');\n  return a + ' ' + b;\n}\n\nfunction packageStyles(options) {\n  var styles = {};\n  if (options && (options.to || options.from)) {\n    styles.to = options.to;\n    styles.from = options.from;\n  }\n  return styles;\n}\n\nfunction pendClasses(classes, fix, isPrefix) {\n  var className = '';\n  classes = isArray(classes)\n      ? classes\n      : classes && isString(classes) && classes.length\n          ? classes.split(/\\s+/)\n          : [];\n  forEach(classes, function(klass, i) {\n    if (klass && klass.length > 0) {\n      className += (i > 0) ? ' ' : '';\n      className += isPrefix ? fix + klass\n                            : klass + fix;\n    }\n  });\n  return className;\n}\n\nfunction removeFromArray(arr, val) {\n  var index = arr.indexOf(val);\n  if (val >= 0) {\n    arr.splice(index, 1);\n  }\n}\n\nfunction stripCommentsFromElement(element) {\n  if (element instanceof jqLite) {\n    switch (element.length) {\n      case 0:\n        return element;\n\n      case 1:\n        // there is no point of stripping anything if the element\n        // is the only element within the jqLite wrapper.\n        // (it's important that we retain the element instance.)\n        if (element[0].nodeType === ELEMENT_NODE) {\n          return element;\n        }\n        break;\n\n      default:\n        return jqLite(extractElementNode(element));\n    }\n  }\n\n  if (element.nodeType === ELEMENT_NODE) {\n    return jqLite(element);\n  }\n}\n\nfunction extractElementNode(element) {\n  if (!element[0]) return element;\n  for (var i = 0; i < element.length; i++) {\n    var elm = element[i];\n    if (elm.nodeType === ELEMENT_NODE) {\n      return elm;\n    }\n  }\n}\n\nfunction $$addClass($$jqLite, element, className) {\n  forEach(element, function(elm) {\n    $$jqLite.addClass(elm, className);\n  });\n}\n\nfunction $$removeClass($$jqLite, element, className) {\n  forEach(element, function(elm) {\n    $$jqLite.removeClass(elm, className);\n  });\n}\n\nfunction applyAnimationClassesFactory($$jqLite) {\n  return function(element, options) {\n    if (options.addClass) {\n      $$addClass($$jqLite, element, options.addClass);\n      options.addClass = null;\n    }\n    if (options.removeClass) {\n      $$removeClass($$jqLite, element, options.removeClass);\n      options.removeClass = null;\n    }\n  };\n}\n\nfunction prepareAnimationOptions(options) {\n  options = options || {};\n  if (!options.$$prepared) {\n    var domOperation = options.domOperation || noop;\n    options.domOperation = function() {\n      options.$$domOperationFired = true;\n      domOperation();\n      domOperation = noop;\n    };\n    options.$$prepared = true;\n  }\n  return options;\n}\n\nfunction applyAnimationStyles(element, options) {\n  applyAnimationFromStyles(element, options);\n  applyAnimationToStyles(element, options);\n}\n\nfunction applyAnimationFromStyles(element, options) {\n  if (options.from) {\n    element.css(options.from);\n    options.from = null;\n  }\n}\n\nfunction applyAnimationToStyles(element, options) {\n  if (options.to) {\n    element.css(options.to);\n    options.to = null;\n  }\n}\n\nfunction mergeAnimationDetails(element, oldAnimation, newAnimation) {\n  var target = oldAnimation.options || {};\n  var newOptions = newAnimation.options || {};\n\n  var toAdd = (target.addClass || '') + ' ' + (newOptions.addClass || '');\n  var toRemove = (target.removeClass || '') + ' ' + (newOptions.removeClass || '');\n  var classes = resolveElementClasses(element.attr('class'), toAdd, toRemove);\n\n  if (newOptions.preparationClasses) {\n    target.preparationClasses = concatWithSpace(newOptions.preparationClasses, target.preparationClasses);\n    delete newOptions.preparationClasses;\n  }\n\n  // noop is basically when there is no callback; otherwise something has been set\n  var realDomOperation = target.domOperation !== noop ? target.domOperation : null;\n\n  extend(target, newOptions);\n\n  // TODO(matsko or sreeramu): proper fix is to maintain all animation callback in array and call at last,but now only leave has the callback so no issue with this.\n  if (realDomOperation) {\n    target.domOperation = realDomOperation;\n  }\n\n  if (classes.addClass) {\n    target.addClass = classes.addClass;\n  } else {\n    target.addClass = null;\n  }\n\n  if (classes.removeClass) {\n    target.removeClass = classes.removeClass;\n  } else {\n    target.removeClass = null;\n  }\n\n  oldAnimation.addClass = target.addClass;\n  oldAnimation.removeClass = target.removeClass;\n\n  return target;\n}\n\nfunction resolveElementClasses(existing, toAdd, toRemove) {\n  var ADD_CLASS = 1;\n  var REMOVE_CLASS = -1;\n\n  var flags = {};\n  existing = splitClassesToLookup(existing);\n\n  toAdd = splitClassesToLookup(toAdd);\n  forEach(toAdd, function(value, key) {\n    flags[key] = ADD_CLASS;\n  });\n\n  toRemove = splitClassesToLookup(toRemove);\n  forEach(toRemove, function(value, key) {\n    flags[key] = flags[key] === ADD_CLASS ? null : REMOVE_CLASS;\n  });\n\n  var classes = {\n    addClass: '',\n    removeClass: ''\n  };\n\n  forEach(flags, function(val, klass) {\n    var prop, allow;\n    if (val === ADD_CLASS) {\n      prop = 'addClass';\n      allow = !existing[klass] || existing[klass + REMOVE_CLASS_SUFFIX];\n    } else if (val === REMOVE_CLASS) {\n      prop = 'removeClass';\n      allow = existing[klass] || existing[klass + ADD_CLASS_SUFFIX];\n    }\n    if (allow) {\n      if (classes[prop].length) {\n        classes[prop] += ' ';\n      }\n      classes[prop] += klass;\n    }\n  });\n\n  function splitClassesToLookup(classes) {\n    if (isString(classes)) {\n      classes = classes.split(' ');\n    }\n\n    var obj = {};\n    forEach(classes, function(klass) {\n      // sometimes the split leaves empty string values\n      // incase extra spaces were applied to the options\n      if (klass.length) {\n        obj[klass] = true;\n      }\n    });\n    return obj;\n  }\n\n  return classes;\n}\n\nfunction getDomNode(element) {\n  return (element instanceof jqLite) ? element[0] : element;\n}\n\nfunction applyGeneratedPreparationClasses($$jqLite, element, event, options) {\n  var classes = '';\n  if (event) {\n    classes = pendClasses(event, EVENT_CLASS_PREFIX, true);\n  }\n  if (options.addClass) {\n    classes = concatWithSpace(classes, pendClasses(options.addClass, ADD_CLASS_SUFFIX));\n  }\n  if (options.removeClass) {\n    classes = concatWithSpace(classes, pendClasses(options.removeClass, REMOVE_CLASS_SUFFIX));\n  }\n  if (classes.length) {\n    options.preparationClasses = classes;\n    element.addClass(classes);\n  }\n}\n\nfunction clearGeneratedClasses(element, options) {\n  if (options.preparationClasses) {\n    element.removeClass(options.preparationClasses);\n    options.preparationClasses = null;\n  }\n  if (options.activeClasses) {\n    element.removeClass(options.activeClasses);\n    options.activeClasses = null;\n  }\n}\n\nfunction blockKeyframeAnimations(node, applyBlock) {\n  var value = applyBlock ? 'paused' : '';\n  var key = ANIMATION_PROP + ANIMATION_PLAYSTATE_KEY;\n  applyInlineStyle(node, [key, value]);\n  return [key, value];\n}\n\nfunction applyInlineStyle(node, styleTuple) {\n  var prop = styleTuple[0];\n  var value = styleTuple[1];\n  node.style[prop] = value;\n}\n\nfunction concatWithSpace(a,b) {\n  if (!a) return b;\n  if (!b) return a;\n  return a + ' ' + b;\n}\n\nvar helpers = {\n  blockTransitions: function(node, duration) {\n    // we use a negative delay value since it performs blocking\n    // yet it doesn't kill any existing transitions running on the\n    // same element which makes this safe for class-based animations\n    var value = duration ? '-' + duration + 's' : '';\n    applyInlineStyle(node, [TRANSITION_DELAY_PROP, value]);\n    return [TRANSITION_DELAY_PROP, value];\n  }\n};\n\nvar $$rAFSchedulerFactory = ['$$rAF', function($$rAF) {\n  var queue, cancelFn;\n\n  function scheduler(tasks) {\n    // we make a copy since RAFScheduler mutates the state\n    // of the passed in array variable and this would be difficult\n    // to track down on the outside code\n    queue = queue.concat(tasks);\n    nextTick();\n  }\n\n  queue = scheduler.queue = [];\n\n  /* waitUntilQuiet does two things:\n   * 1. It will run the FINAL `fn` value only when an uncanceled RAF has passed through\n   * 2. It will delay the next wave of tasks from running until the quiet `fn` has run.\n   *\n   * The motivation here is that animation code can request more time from the scheduler\n   * before the next wave runs. This allows for certain DOM properties such as classes to\n   * be resolved in time for the next animation to run.\n   */\n  scheduler.waitUntilQuiet = function(fn) {\n    if (cancelFn) cancelFn();\n\n    cancelFn = $$rAF(function() {\n      cancelFn = null;\n      fn();\n      nextTick();\n    });\n  };\n\n  return scheduler;\n\n  function nextTick() {\n    if (!queue.length) return;\n\n    var items = queue.shift();\n    for (var i = 0; i < items.length; i++) {\n      items[i]();\n    }\n\n    if (!cancelFn) {\n      $$rAF(function() {\n        if (!cancelFn) nextTick();\n      });\n    }\n  }\n}];\n\n/**\n * @ngdoc directive\n * @name ngAnimateChildren\n * @restrict AE\n * @element ANY\n *\n * @description\n *\n * ngAnimateChildren allows you to specify that children of this element should animate even if any\n * of the children's parents are currently animating. By default, when an element has an active `enter`, `leave`, or `move`\n * (structural) animation, child elements that also have an active structural animation are not animated.\n *\n * Note that even if `ngAnimateChildren` is set, no child animations will run when the parent element is removed from the DOM (`leave` animation).\n *\n *\n * @param {string} ngAnimateChildren If the value is empty, `true` or `on`,\n *     then child animations are allowed. If the value is `false`, child animations are not allowed.\n *\n * @example\n * <example module=\"ngAnimateChildren\" name=\"ngAnimateChildren\" deps=\"angular-animate.js\" animations=\"true\">\n     <file name=\"index.html\">\n       <div ng-controller=\"MainController as main\">\n         <label>Show container? <input type=\"checkbox\" ng-model=\"main.enterElement\" /></label>\n         <label>Animate children? <input type=\"checkbox\" ng-model=\"main.animateChildren\" /></label>\n         <hr>\n         <div ng-animate-children=\"{{main.animateChildren}}\">\n           <div ng-if=\"main.enterElement\" class=\"container\">\n             List of items:\n             <div ng-repeat=\"item in [0, 1, 2, 3]\" class=\"item\">Item {{item}}</div>\n           </div>\n         </div>\n       </div>\n     </file>\n     <file name=\"animations.css\">\n\n      .container.ng-enter,\n      .container.ng-leave {\n        transition: all ease 1.5s;\n      }\n\n      .container.ng-enter,\n      .container.ng-leave-active {\n        opacity: 0;\n      }\n\n      .container.ng-leave,\n      .container.ng-enter-active {\n        opacity: 1;\n      }\n\n      .item {\n        background: firebrick;\n        color: #FFF;\n        margin-bottom: 10px;\n      }\n\n      .item.ng-enter,\n      .item.ng-leave {\n        transition: transform 1.5s ease;\n      }\n\n      .item.ng-enter {\n        transform: translateX(50px);\n      }\n\n      .item.ng-enter-active {\n        transform: translateX(0);\n      }\n    </file>\n    <file name=\"script.js\">\n      angular.module('ngAnimateChildren', ['ngAnimate'])\n        .controller('MainController', function MainController() {\n          this.animateChildren = false;\n          this.enterElement = false;\n        });\n    </file>\n  </example>\n */\nvar $$AnimateChildrenDirective = ['$interpolate', function($interpolate) {\n  return {\n    link: function(scope, element, attrs) {\n      var val = attrs.ngAnimateChildren;\n      if (isString(val) && val.length === 0) { //empty attribute\n        element.data(NG_ANIMATE_CHILDREN_DATA, true);\n      } else {\n        // Interpolate and set the value, so that it is available to\n        // animations that run right after compilation\n        setData($interpolate(val)(scope));\n        attrs.$observe('ngAnimateChildren', setData);\n      }\n\n      function setData(value) {\n        value = value === 'on' || value === 'true';\n        element.data(NG_ANIMATE_CHILDREN_DATA, value);\n      }\n    }\n  };\n}];\n\n/* exported $AnimateCssProvider */\n\nvar ANIMATE_TIMER_KEY = '$$animateCss';\n\n/**\n * @ngdoc service\n * @name $animateCss\n * @kind object\n *\n * @description\n * The `$animateCss` service is a useful utility to trigger customized CSS-based transitions/keyframes\n * from a JavaScript-based animation or directly from a directive. The purpose of `$animateCss` is NOT\n * to side-step how `$animate` and ngAnimate work, but the goal is to allow pre-existing animations or\n * directives to create more complex animations that can be purely driven using CSS code.\n *\n * Note that only browsers that support CSS transitions and/or keyframe animations are capable of\n * rendering animations triggered via `$animateCss` (bad news for IE9 and lower).\n *\n * ## General Use\n * Once again, `$animateCss` is designed to be used inside of a registered JavaScript animation that\n * is powered by ngAnimate. It is possible to use `$animateCss` directly inside of a directive, however,\n * any automatic control over cancelling animations and/or preventing animations from being run on\n * child elements will not be handled by AngularJS. For this to work as expected, please use `$animate` to\n * trigger the animation and then setup a JavaScript animation that injects `$animateCss` to trigger\n * the CSS animation.\n *\n * The example below shows how we can create a folding animation on an element using `ng-if`:\n *\n * ```html\n * <!-- notice the `fold-animation` CSS class -->\n * <div ng-if=\"onOff\" class=\"fold-animation\">\n *   This element will go BOOM\n * </div>\n * <button ng-click=\"onOff=true\">Fold In</button>\n * ```\n *\n * Now we create the **JavaScript animation** that will trigger the CSS transition:\n *\n * ```js\n * ngModule.animation('.fold-animation', ['$animateCss', function($animateCss) {\n *   return {\n *     enter: function(element, doneFn) {\n *       var height = element[0].offsetHeight;\n *       return $animateCss(element, {\n *         from: { height:'0px' },\n *         to: { height:height + 'px' },\n *         duration: 1 // one second\n *       });\n *     }\n *   }\n * }]);\n * ```\n *\n * ## More Advanced Uses\n *\n * `$animateCss` is the underlying code that ngAnimate uses to power **CSS-based animations** behind the scenes. Therefore CSS hooks\n * like `.ng-EVENT`, `.ng-EVENT-active`, `.ng-EVENT-stagger` are all features that can be triggered using `$animateCss` via JavaScript code.\n *\n * This also means that just about any combination of adding classes, removing classes, setting styles, dynamically setting a keyframe animation,\n * applying a hardcoded duration or delay value, changing the animation easing or applying a stagger animation are all options that work with\n * `$animateCss`. The service itself is smart enough to figure out the combination of options and examine the element styling properties in order\n * to provide a working animation that will run in CSS.\n *\n * The example below showcases a more advanced version of the `.fold-animation` from the example above:\n *\n * ```js\n * ngModule.animation('.fold-animation', ['$animateCss', function($animateCss) {\n *   return {\n *     enter: function(element, doneFn) {\n *       var height = element[0].offsetHeight;\n *       return $animateCss(element, {\n *         addClass: 'red large-text pulse-twice',\n *         easing: 'ease-out',\n *         from: { height:'0px' },\n *         to: { height:height + 'px' },\n *         duration: 1 // one second\n *       });\n *     }\n *   }\n * }]);\n * ```\n *\n * Since we're adding/removing CSS classes then the CSS transition will also pick those up:\n *\n * ```css\n * /&#42; since a hardcoded duration value of 1 was provided in the JavaScript animation code,\n * the CSS classes below will be transitioned despite them being defined as regular CSS classes &#42;/\n * .red { background:red; }\n * .large-text { font-size:20px; }\n *\n * /&#42; we can also use a keyframe animation and $animateCss will make it work alongside the transition &#42;/\n * .pulse-twice {\n *   animation: 0.5s pulse linear 2;\n *   -webkit-animation: 0.5s pulse linear 2;\n * }\n *\n * @keyframes pulse {\n *   from { transform: scale(0.5); }\n *   to { transform: scale(1.5); }\n * }\n *\n * @-webkit-keyframes pulse {\n *   from { -webkit-transform: scale(0.5); }\n *   to { -webkit-transform: scale(1.5); }\n * }\n * ```\n *\n * Given this complex combination of CSS classes, styles and options, `$animateCss` will figure everything out and make the animation happen.\n *\n * ## How the Options are handled\n *\n * `$animateCss` is very versatile and intelligent when it comes to figuring out what configurations to apply to the element to ensure the animation\n * works with the options provided. Say for example we were adding a class that contained a keyframe value and we wanted to also animate some inline\n * styles using the `from` and `to` properties.\n *\n * ```js\n * var animator = $animateCss(element, {\n *   from: { background:'red' },\n *   to: { background:'blue' }\n * });\n * animator.start();\n * ```\n *\n * ```css\n * .rotating-animation {\n *   animation:0.5s rotate linear;\n *   -webkit-animation:0.5s rotate linear;\n * }\n *\n * @keyframes rotate {\n *   from { transform: rotate(0deg); }\n *   to { transform: rotate(360deg); }\n * }\n *\n * @-webkit-keyframes rotate {\n *   from { -webkit-transform: rotate(0deg); }\n *   to { -webkit-transform: rotate(360deg); }\n * }\n * ```\n *\n * The missing pieces here are that we do not have a transition set (within the CSS code nor within the `$animateCss` options) and the duration of the animation is\n * going to be detected from what the keyframe styles on the CSS class are. In this event, `$animateCss` will automatically create an inline transition\n * style matching the duration detected from the keyframe style (which is present in the CSS class that is being added) and then prepare both the transition\n * and keyframe animations to run in parallel on the element. Then when the animation is underway the provided `from` and `to` CSS styles will be applied\n * and spread across the transition and keyframe animation.\n *\n * ## What is returned\n *\n * `$animateCss` works in two stages: a preparation phase and an animation phase. Therefore when `$animateCss` is first called it will NOT actually\n * start the animation. All that is going on here is that the element is being prepared for the animation (which means that the generated CSS classes are\n * added and removed on the element). Once `$animateCss` is called it will return an object with the following properties:\n *\n * ```js\n * var animator = $animateCss(element, { ... });\n * ```\n *\n * Now what do the contents of our `animator` variable look like:\n *\n * ```js\n * {\n *   // starts the animation\n *   start: Function,\n *\n *   // ends (aborts) the animation\n *   end: Function\n * }\n * ```\n *\n * To actually start the animation we need to run `animation.start()` which will then return a promise that we can hook into to detect when the animation ends.\n * If we choose not to run the animation then we MUST run `animation.end()` to perform a cleanup on the element (since some CSS classes and styles may have been\n * applied to the element during the preparation phase). Note that all other properties such as duration, delay, transitions and keyframes are just properties\n * and that changing them will not reconfigure the parameters of the animation.\n *\n * ### runner.done() vs runner.then()\n * It is documented that `animation.start()` will return a promise object and this is true, however, there is also an additional method available on the\n * runner called `.done(callbackFn)`. The done method works the same as `.finally(callbackFn)`, however, it does **not trigger a digest to occur**.\n * Therefore, for performance reasons, it's always best to use `runner.done(callback)` instead of `runner.then()`, `runner.catch()` or `runner.finally()`\n * unless you really need a digest to kick off afterwards.\n *\n * Keep in mind that, to make this easier, ngAnimate has tweaked the JS animations API to recognize when a runner instance is returned from $animateCss\n * (so there is no need to call `runner.done(doneFn)` inside of your JavaScript animation code).\n * Check the {@link ngAnimate.$animateCss#usage animation code above} to see how this works.\n *\n * @param {DOMElement} element the element that will be animated\n * @param {object} options the animation-related options that will be applied during the animation\n *\n * * `event` - The DOM event (e.g. enter, leave, move). When used, a generated CSS class of `ng-EVENT` and `ng-EVENT-active` will be applied\n * to the element during the animation. Multiple events can be provided when spaces are used as a separator. (Note that this will not perform any DOM operation.)\n * * `structural` - Indicates that the `ng-` prefix will be added to the event class. Setting to `false` or omitting will turn `ng-EVENT` and\n * `ng-EVENT-active` in `EVENT` and `EVENT-active`. Unused if `event` is omitted.\n * * `easing` - The CSS easing value that will be applied to the transition or keyframe animation (or both).\n * * `transitionStyle` - The raw CSS transition style that will be used (e.g. `1s linear all`).\n * * `keyframeStyle` - The raw CSS keyframe animation style that will be used (e.g. `1s my_animation linear`).\n * * `from` - The starting CSS styles (a key/value object) that will be applied at the start of the animation.\n * * `to` - The ending CSS styles (a key/value object) that will be applied across the animation via a CSS transition.\n * * `addClass` - A space separated list of CSS classes that will be added to the element and spread across the animation.\n * * `removeClass` - A space separated list of CSS classes that will be removed from the element and spread across the animation.\n * * `duration` - A number value representing the total duration of the transition and/or keyframe (note that a value of 1 is 1000ms). If a value of `0`\n * is provided then the animation will be skipped entirely.\n * * `delay` - A number value representing the total delay of the transition and/or keyframe (note that a value of 1 is 1000ms). If a value of `true` is\n * used then whatever delay value is detected from the CSS classes will be mirrored on the elements styles (e.g. by setting delay true then the style value\n * of the element will be `transition-delay: DETECTED_VALUE`). Using `true` is useful when you want the CSS classes and inline styles to all share the same\n * CSS delay value.\n * * `stagger` - A numeric time value representing the delay between successively animated elements\n * ({@link ngAnimate#css-staggering-animations Click here to learn how CSS-based staggering works in ngAnimate.})\n * * `staggerIndex` - The numeric index representing the stagger item (e.g. a value of 5 is equal to the sixth item in the stagger; therefore when a\n *   `stagger` option value of `0.1` is used then there will be a stagger delay of `600ms`)\n * * `applyClassesEarly` - Whether or not the classes being added or removed will be used when detecting the animation. This is set by `$animate` when enter/leave/move animations are fired to ensure that the CSS classes are resolved in time. (Note that this will prevent any transitions from occurring on the classes being added and removed.)\n * * `cleanupStyles` - Whether or not the provided `from` and `to` styles will be removed once\n *    the animation is closed. This is useful for when the styles are used purely for the sake of\n *    the animation and do not have a lasting visual effect on the element (e.g. a collapse and open animation).\n *    By default this value is set to `false`.\n *\n * @return {object} an object with start and end methods and details about the animation.\n *\n * * `start` - The method to start the animation. This will return a `Promise` when called.\n * * `end` - This method will cancel the animation and remove all applied CSS classes and styles.\n */\nvar ONE_SECOND = 1000;\n\nvar ELAPSED_TIME_MAX_DECIMAL_PLACES = 3;\nvar CLOSING_TIME_BUFFER = 1.5;\n\nvar DETECT_CSS_PROPERTIES = {\n  transitionDuration:      TRANSITION_DURATION_PROP,\n  transitionDelay:         TRANSITION_DELAY_PROP,\n  transitionProperty:      TRANSITION_PROP + PROPERTY_KEY,\n  animationDuration:       ANIMATION_DURATION_PROP,\n  animationDelay:          ANIMATION_DELAY_PROP,\n  animationIterationCount: ANIMATION_PROP + ANIMATION_ITERATION_COUNT_KEY\n};\n\nvar DETECT_STAGGER_CSS_PROPERTIES = {\n  transitionDuration:      TRANSITION_DURATION_PROP,\n  transitionDelay:         TRANSITION_DELAY_PROP,\n  animationDuration:       ANIMATION_DURATION_PROP,\n  animationDelay:          ANIMATION_DELAY_PROP\n};\n\nfunction getCssKeyframeDurationStyle(duration) {\n  return [ANIMATION_DURATION_PROP, duration + 's'];\n}\n\nfunction getCssDelayStyle(delay, isKeyframeAnimation) {\n  var prop = isKeyframeAnimation ? ANIMATION_DELAY_PROP : TRANSITION_DELAY_PROP;\n  return [prop, delay + 's'];\n}\n\nfunction computeCssStyles($window, element, properties) {\n  var styles = Object.create(null);\n  var detectedStyles = $window.getComputedStyle(element) || {};\n  forEach(properties, function(formalStyleName, actualStyleName) {\n    var val = detectedStyles[formalStyleName];\n    if (val) {\n      var c = val.charAt(0);\n\n      // only numerical-based values have a negative sign or digit as the first value\n      if (c === '-' || c === '+' || c >= 0) {\n        val = parseMaxTime(val);\n      }\n\n      // by setting this to null in the event that the delay is not set or is set directly as 0\n      // then we can still allow for negative values to be used later on and not mistake this\n      // value for being greater than any other negative value.\n      if (val === 0) {\n        val = null;\n      }\n      styles[actualStyleName] = val;\n    }\n  });\n\n  return styles;\n}\n\nfunction parseMaxTime(str) {\n  var maxValue = 0;\n  var values = str.split(/\\s*,\\s*/);\n  forEach(values, function(value) {\n    // it's always safe to consider only second values and omit `ms` values since\n    // getComputedStyle will always handle the conversion for us\n    if (value.charAt(value.length - 1) === 's') {\n      value = value.substring(0, value.length - 1);\n    }\n    value = parseFloat(value) || 0;\n    maxValue = maxValue ? Math.max(value, maxValue) : value;\n  });\n  return maxValue;\n}\n\nfunction truthyTimingValue(val) {\n  return val === 0 || val != null;\n}\n\nfunction getCssTransitionDurationStyle(duration, applyOnlyDuration) {\n  var style = TRANSITION_PROP;\n  var value = duration + 's';\n  if (applyOnlyDuration) {\n    style += DURATION_KEY;\n  } else {\n    value += ' linear all';\n  }\n  return [style, value];\n}\n\n// we do not reassign an already present style value since\n// if we detect the style property value again we may be\n// detecting styles that were added via the `from` styles.\n// We make use of `isDefined` here since an empty string\n// or null value (which is what getPropertyValue will return\n// for a non-existing style) will still be marked as a valid\n// value for the style (a falsy value implies that the style\n// is to be removed at the end of the animation). If we had a simple\n// \"OR\" statement then it would not be enough to catch that.\nfunction registerRestorableStyles(backup, node, properties) {\n  forEach(properties, function(prop) {\n    backup[prop] = isDefined(backup[prop])\n        ? backup[prop]\n        : node.style.getPropertyValue(prop);\n  });\n}\n\nvar $AnimateCssProvider = ['$animateProvider', /** @this */ function($animateProvider) {\n\n  this.$get = ['$window', '$$jqLite', '$$AnimateRunner', '$timeout', '$$animateCache',\n               '$$forceReflow', '$sniffer', '$$rAFScheduler', '$$animateQueue',\n       function($window,   $$jqLite,   $$AnimateRunner,   $timeout,   $$animateCache,\n                $$forceReflow,   $sniffer,   $$rAFScheduler, $$animateQueue) {\n\n    var applyAnimationClasses = applyAnimationClassesFactory($$jqLite);\n\n    function computeCachedCssStyles(node, className, cacheKey, allowNoDuration, properties) {\n      var timings = $$animateCache.get(cacheKey);\n\n      if (!timings) {\n        timings = computeCssStyles($window, node, properties);\n        if (timings.animationIterationCount === 'infinite') {\n          timings.animationIterationCount = 1;\n        }\n      }\n\n      // if a css animation has no duration we\n      // should mark that so that repeated addClass/removeClass calls are skipped\n      var hasDuration = allowNoDuration || (timings.transitionDuration > 0 || timings.animationDuration > 0);\n\n      // we keep putting this in multiple times even though the value and the cacheKey are the same\n      // because we're keeping an internal tally of how many duplicate animations are detected.\n      $$animateCache.put(cacheKey, timings, hasDuration);\n\n      return timings;\n    }\n\n    function computeCachedCssStaggerStyles(node, className, cacheKey, properties) {\n      var stagger;\n      var staggerCacheKey = 'stagger-' + cacheKey;\n\n      // if we have one or more existing matches of matching elements\n      // containing the same parent + CSS styles (which is how cacheKey works)\n      // then staggering is possible\n      if ($$animateCache.count(cacheKey) > 0) {\n        stagger = $$animateCache.get(staggerCacheKey);\n\n        if (!stagger) {\n          var staggerClassName = pendClasses(className, '-stagger');\n\n          $$jqLite.addClass(node, staggerClassName);\n\n          stagger = computeCssStyles($window, node, properties);\n\n          // force the conversion of a null value to zero incase not set\n          stagger.animationDuration = Math.max(stagger.animationDuration, 0);\n          stagger.transitionDuration = Math.max(stagger.transitionDuration, 0);\n\n          $$jqLite.removeClass(node, staggerClassName);\n\n          $$animateCache.put(staggerCacheKey, stagger, true);\n        }\n      }\n\n      return stagger || {};\n    }\n\n    var rafWaitQueue = [];\n    function waitUntilQuiet(callback) {\n      rafWaitQueue.push(callback);\n      $$rAFScheduler.waitUntilQuiet(function() {\n        $$animateCache.flush();\n\n        // DO NOT REMOVE THIS LINE OR REFACTOR OUT THE `pageWidth` variable.\n        // PLEASE EXAMINE THE `$$forceReflow` service to understand why.\n        var pageWidth = $$forceReflow();\n\n        // we use a for loop to ensure that if the queue is changed\n        // during this looping then it will consider new requests\n        for (var i = 0; i < rafWaitQueue.length; i++) {\n          rafWaitQueue[i](pageWidth);\n        }\n        rafWaitQueue.length = 0;\n      });\n    }\n\n    function computeTimings(node, className, cacheKey, allowNoDuration) {\n      var timings = computeCachedCssStyles(node, className, cacheKey, allowNoDuration, DETECT_CSS_PROPERTIES);\n      var aD = timings.animationDelay;\n      var tD = timings.transitionDelay;\n      timings.maxDelay = aD && tD\n          ? Math.max(aD, tD)\n          : (aD || tD);\n      timings.maxDuration = Math.max(\n          timings.animationDuration * timings.animationIterationCount,\n          timings.transitionDuration);\n\n      return timings;\n    }\n\n    return function init(element, initialOptions) {\n      // all of the animation functions should create\n      // a copy of the options data, however, if a\n      // parent service has already created a copy then\n      // we should stick to using that\n      var options = initialOptions || {};\n      if (!options.$$prepared) {\n        options = prepareAnimationOptions(copy(options));\n      }\n\n      var restoreStyles = {};\n      var node = getDomNode(element);\n      if (!node\n          || !node.parentNode\n          || !$$animateQueue.enabled()) {\n        return closeAndReturnNoopAnimator();\n      }\n\n      var temporaryStyles = [];\n      var classes = element.attr('class');\n      var styles = packageStyles(options);\n      var animationClosed;\n      var animationPaused;\n      var animationCompleted;\n      var runner;\n      var runnerHost;\n      var maxDelay;\n      var maxDelayTime;\n      var maxDuration;\n      var maxDurationTime;\n      var startTime;\n      var events = [];\n\n      if (options.duration === 0 || (!$sniffer.animations && !$sniffer.transitions)) {\n        return closeAndReturnNoopAnimator();\n      }\n\n      var method = options.event && isArray(options.event)\n            ? options.event.join(' ')\n            : options.event;\n\n      var isStructural = method && options.structural;\n      var structuralClassName = '';\n      var addRemoveClassName = '';\n\n      if (isStructural) {\n        structuralClassName = pendClasses(method, EVENT_CLASS_PREFIX, true);\n      } else if (method) {\n        structuralClassName = method;\n      }\n\n      if (options.addClass) {\n        addRemoveClassName += pendClasses(options.addClass, ADD_CLASS_SUFFIX);\n      }\n\n      if (options.removeClass) {\n        if (addRemoveClassName.length) {\n          addRemoveClassName += ' ';\n        }\n        addRemoveClassName += pendClasses(options.removeClass, REMOVE_CLASS_SUFFIX);\n      }\n\n      // there may be a situation where a structural animation is combined together\n      // with CSS classes that need to resolve before the animation is computed.\n      // However this means that there is no explicit CSS code to block the animation\n      // from happening (by setting 0s none in the class name). If this is the case\n      // we need to apply the classes before the first rAF so we know to continue if\n      // there actually is a detected transition or keyframe animation\n      if (options.applyClassesEarly && addRemoveClassName.length) {\n        applyAnimationClasses(element, options);\n      }\n\n      var preparationClasses = [structuralClassName, addRemoveClassName].join(' ').trim();\n      var fullClassName = classes + ' ' + preparationClasses;\n      var hasToStyles = styles.to && Object.keys(styles.to).length > 0;\n      var containsKeyframeAnimation = (options.keyframeStyle || '').length > 0;\n\n      // there is no way we can trigger an animation if no styles and\n      // no classes are being applied which would then trigger a transition,\n      // unless there a is raw keyframe value that is applied to the element.\n      if (!containsKeyframeAnimation\n           && !hasToStyles\n           && !preparationClasses) {\n        return closeAndReturnNoopAnimator();\n      }\n\n      var stagger, cacheKey = $$animateCache.cacheKey(node, method, options.addClass, options.removeClass);\n      if ($$animateCache.containsCachedAnimationWithoutDuration(cacheKey)) {\n        preparationClasses = null;\n        return closeAndReturnNoopAnimator();\n      }\n\n      if (options.stagger > 0) {\n        var staggerVal = parseFloat(options.stagger);\n        stagger = {\n          transitionDelay: staggerVal,\n          animationDelay: staggerVal,\n          transitionDuration: 0,\n          animationDuration: 0\n        };\n      } else {\n        stagger = computeCachedCssStaggerStyles(node, preparationClasses, cacheKey, DETECT_STAGGER_CSS_PROPERTIES);\n      }\n\n      if (!options.$$skipPreparationClasses) {\n        $$jqLite.addClass(element, preparationClasses);\n      }\n\n      var applyOnlyDuration;\n\n      if (options.transitionStyle) {\n        var transitionStyle = [TRANSITION_PROP, options.transitionStyle];\n        applyInlineStyle(node, transitionStyle);\n        temporaryStyles.push(transitionStyle);\n      }\n\n      if (options.duration >= 0) {\n        applyOnlyDuration = node.style[TRANSITION_PROP].length > 0;\n        var durationStyle = getCssTransitionDurationStyle(options.duration, applyOnlyDuration);\n\n        // we set the duration so that it will be picked up by getComputedStyle later\n        applyInlineStyle(node, durationStyle);\n        temporaryStyles.push(durationStyle);\n      }\n\n      if (options.keyframeStyle) {\n        var keyframeStyle = [ANIMATION_PROP, options.keyframeStyle];\n        applyInlineStyle(node, keyframeStyle);\n        temporaryStyles.push(keyframeStyle);\n      }\n\n      var itemIndex = stagger\n          ? options.staggerIndex >= 0\n              ? options.staggerIndex\n              : $$animateCache.count(cacheKey)\n          : 0;\n\n      var isFirst = itemIndex === 0;\n\n      // this is a pre-emptive way of forcing the setup classes to be added and applied INSTANTLY\n      // without causing any combination of transitions to kick in. By adding a negative delay value\n      // it forces the setup class' transition to end immediately. We later then remove the negative\n      // transition delay to allow for the transition to naturally do it's thing. The beauty here is\n      // that if there is no transition defined then nothing will happen and this will also allow\n      // other transitions to be stacked on top of each other without any chopping them out.\n      if (isFirst && !options.skipBlocking) {\n        helpers.blockTransitions(node, SAFE_FAST_FORWARD_DURATION_VALUE);\n      }\n\n      var timings = computeTimings(node, fullClassName, cacheKey, !isStructural);\n      var relativeDelay = timings.maxDelay;\n      maxDelay = Math.max(relativeDelay, 0);\n      maxDuration = timings.maxDuration;\n\n      var flags = {};\n      flags.hasTransitions          = timings.transitionDuration > 0;\n      flags.hasAnimations           = timings.animationDuration > 0;\n      flags.hasTransitionAll        = flags.hasTransitions && timings.transitionProperty === 'all';\n      flags.applyTransitionDuration = hasToStyles && (\n                                        (flags.hasTransitions && !flags.hasTransitionAll)\n                                         || (flags.hasAnimations && !flags.hasTransitions));\n      flags.applyAnimationDuration  = options.duration && flags.hasAnimations;\n      flags.applyTransitionDelay    = truthyTimingValue(options.delay) && (flags.applyTransitionDuration || flags.hasTransitions);\n      flags.applyAnimationDelay     = truthyTimingValue(options.delay) && flags.hasAnimations;\n      flags.recalculateTimingStyles = addRemoveClassName.length > 0;\n\n      if (flags.applyTransitionDuration || flags.applyAnimationDuration) {\n        maxDuration = options.duration ? parseFloat(options.duration) : maxDuration;\n\n        if (flags.applyTransitionDuration) {\n          flags.hasTransitions = true;\n          timings.transitionDuration = maxDuration;\n          applyOnlyDuration = node.style[TRANSITION_PROP + PROPERTY_KEY].length > 0;\n          temporaryStyles.push(getCssTransitionDurationStyle(maxDuration, applyOnlyDuration));\n        }\n\n        if (flags.applyAnimationDuration) {\n          flags.hasAnimations = true;\n          timings.animationDuration = maxDuration;\n          temporaryStyles.push(getCssKeyframeDurationStyle(maxDuration));\n        }\n      }\n\n      if (maxDuration === 0 && !flags.recalculateTimingStyles) {\n        return closeAndReturnNoopAnimator();\n      }\n\n      var activeClasses = pendClasses(preparationClasses, ACTIVE_CLASS_SUFFIX);\n\n      if (options.delay != null) {\n        var delayStyle;\n        if (typeof options.delay !== 'boolean') {\n          delayStyle = parseFloat(options.delay);\n          // number in options.delay means we have to recalculate the delay for the closing timeout\n          maxDelay = Math.max(delayStyle, 0);\n        }\n\n        if (flags.applyTransitionDelay) {\n          temporaryStyles.push(getCssDelayStyle(delayStyle));\n        }\n\n        if (flags.applyAnimationDelay) {\n          temporaryStyles.push(getCssDelayStyle(delayStyle, true));\n        }\n      }\n\n      // we need to recalculate the delay value since we used a pre-emptive negative\n      // delay value and the delay value is required for the final event checking. This\n      // property will ensure that this will happen after the RAF phase has passed.\n      if (options.duration == null && timings.transitionDuration > 0) {\n        flags.recalculateTimingStyles = flags.recalculateTimingStyles || isFirst;\n      }\n\n      maxDelayTime = maxDelay * ONE_SECOND;\n      maxDurationTime = maxDuration * ONE_SECOND;\n      if (!options.skipBlocking) {\n        flags.blockTransition = timings.transitionDuration > 0;\n        flags.blockKeyframeAnimation = timings.animationDuration > 0 &&\n                                       stagger.animationDelay > 0 &&\n                                       stagger.animationDuration === 0;\n      }\n\n      if (options.from) {\n        if (options.cleanupStyles) {\n          registerRestorableStyles(restoreStyles, node, Object.keys(options.from));\n        }\n        applyAnimationFromStyles(element, options);\n      }\n\n      if (flags.blockTransition || flags.blockKeyframeAnimation) {\n        applyBlocking(maxDuration);\n      } else if (!options.skipBlocking) {\n        helpers.blockTransitions(node, false);\n      }\n\n      // TODO(matsko): for 1.5 change this code to have an animator object for better debugging\n      return {\n        $$willAnimate: true,\n        end: endFn,\n        start: function() {\n          if (animationClosed) return;\n\n          runnerHost = {\n            end: endFn,\n            cancel: cancelFn,\n            resume: null, //this will be set during the start() phase\n            pause: null\n          };\n\n          runner = new $$AnimateRunner(runnerHost);\n\n          waitUntilQuiet(start);\n\n          // we don't have access to pause/resume the animation\n          // since it hasn't run yet. AnimateRunner will therefore\n          // set noop functions for resume and pause and they will\n          // later be overridden once the animation is triggered\n          return runner;\n        }\n      };\n\n      function endFn() {\n        close();\n      }\n\n      function cancelFn() {\n        close(true);\n      }\n\n      function close(rejected) {\n        // if the promise has been called already then we shouldn't close\n        // the animation again\n        if (animationClosed || (animationCompleted && animationPaused)) return;\n        animationClosed = true;\n        animationPaused = false;\n\n        if (preparationClasses && !options.$$skipPreparationClasses) {\n          $$jqLite.removeClass(element, preparationClasses);\n        }\n\n        if (activeClasses) {\n          $$jqLite.removeClass(element, activeClasses);\n        }\n\n        blockKeyframeAnimations(node, false);\n        helpers.blockTransitions(node, false);\n\n        forEach(temporaryStyles, function(entry) {\n          // There is only one way to remove inline style properties entirely from elements.\n          // By using `removeProperty` this works, but we need to convert camel-cased CSS\n          // styles down to hyphenated values.\n          node.style[entry[0]] = '';\n        });\n\n        applyAnimationClasses(element, options);\n        applyAnimationStyles(element, options);\n\n        if (Object.keys(restoreStyles).length) {\n          forEach(restoreStyles, function(value, prop) {\n            if (value) {\n              node.style.setProperty(prop, value);\n            } else {\n              node.style.removeProperty(prop);\n            }\n          });\n        }\n\n        // the reason why we have this option is to allow a synchronous closing callback\n        // that is fired as SOON as the animation ends (when the CSS is removed) or if\n        // the animation never takes off at all. A good example is a leave animation since\n        // the element must be removed just after the animation is over or else the element\n        // will appear on screen for one animation frame causing an overbearing flicker.\n        if (options.onDone) {\n          options.onDone();\n        }\n\n        if (events && events.length) {\n          // Remove the transitionend / animationend listener(s)\n          element.off(events.join(' '), onAnimationProgress);\n        }\n\n        //Cancel the fallback closing timeout and remove the timer data\n        var animationTimerData = element.data(ANIMATE_TIMER_KEY);\n        if (animationTimerData) {\n          $timeout.cancel(animationTimerData[0].timer);\n          element.removeData(ANIMATE_TIMER_KEY);\n        }\n\n        // if the preparation function fails then the promise is not setup\n        if (runner) {\n          runner.complete(!rejected);\n        }\n      }\n\n      function applyBlocking(duration) {\n        if (flags.blockTransition) {\n          helpers.blockTransitions(node, duration);\n        }\n\n        if (flags.blockKeyframeAnimation) {\n          blockKeyframeAnimations(node, !!duration);\n        }\n      }\n\n      function closeAndReturnNoopAnimator() {\n        runner = new $$AnimateRunner({\n          end: endFn,\n          cancel: cancelFn\n        });\n\n        // should flush the cache animation\n        waitUntilQuiet(noop);\n        close();\n\n        return {\n          $$willAnimate: false,\n          start: function() {\n            return runner;\n          },\n          end: endFn\n        };\n      }\n\n      function onAnimationProgress(event) {\n        event.stopPropagation();\n        var ev = event.originalEvent || event;\n\n        if (ev.target !== node) {\n          // Since TransitionEvent / AnimationEvent bubble up,\n          // we have to ignore events by finished child animations\n          return;\n        }\n\n        // we now always use `Date.now()` due to the recent changes with\n        // event.timeStamp in Firefox, Webkit and Chrome (see #13494 for more info)\n        var timeStamp = ev.$manualTimeStamp || Date.now();\n\n        /* Firefox (or possibly just Gecko) likes to not round values up\n         * when a ms measurement is used for the animation */\n        var elapsedTime = parseFloat(ev.elapsedTime.toFixed(ELAPSED_TIME_MAX_DECIMAL_PLACES));\n\n        /* $manualTimeStamp is a mocked timeStamp value which is set\n         * within browserTrigger(). This is only here so that tests can\n         * mock animations properly. Real events fallback to event.timeStamp,\n         * or, if they don't, then a timeStamp is automatically created for them.\n         * We're checking to see if the timeStamp surpasses the expected delay,\n         * but we're using elapsedTime instead of the timeStamp on the 2nd\n         * pre-condition since animationPauseds sometimes close off early */\n        if (Math.max(timeStamp - startTime, 0) >= maxDelayTime && elapsedTime >= maxDuration) {\n          // we set this flag to ensure that if the transition is paused then, when resumed,\n          // the animation will automatically close itself since transitions cannot be paused.\n          animationCompleted = true;\n          close();\n        }\n      }\n\n      function start() {\n        if (animationClosed) return;\n        if (!node.parentNode) {\n          close();\n          return;\n        }\n\n        // even though we only pause keyframe animations here the pause flag\n        // will still happen when transitions are used. Only the transition will\n        // not be paused since that is not possible. If the animation ends when\n        // paused then it will not complete until unpaused or cancelled.\n        var playPause = function(playAnimation) {\n          if (!animationCompleted) {\n            animationPaused = !playAnimation;\n            if (timings.animationDuration) {\n              var value = blockKeyframeAnimations(node, animationPaused);\n              if (animationPaused) {\n                temporaryStyles.push(value);\n              } else {\n                removeFromArray(temporaryStyles, value);\n              }\n            }\n          } else if (animationPaused && playAnimation) {\n            animationPaused = false;\n            close();\n          }\n        };\n\n        // checking the stagger duration prevents an accidentally cascade of the CSS delay style\n        // being inherited from the parent. If the transition duration is zero then we can safely\n        // rely that the delay value is an intentional stagger delay style.\n        var maxStagger = itemIndex > 0\n                         && ((timings.transitionDuration && stagger.transitionDuration === 0) ||\n                            (timings.animationDuration && stagger.animationDuration === 0))\n                         && Math.max(stagger.animationDelay, stagger.transitionDelay);\n        if (maxStagger) {\n          $timeout(triggerAnimationStart,\n                   Math.floor(maxStagger * itemIndex * ONE_SECOND),\n                   false);\n        } else {\n          triggerAnimationStart();\n        }\n\n        // this will decorate the existing promise runner with pause/resume methods\n        runnerHost.resume = function() {\n          playPause(true);\n        };\n\n        runnerHost.pause = function() {\n          playPause(false);\n        };\n\n        function triggerAnimationStart() {\n          // just incase a stagger animation kicks in when the animation\n          // itself was cancelled entirely\n          if (animationClosed) return;\n\n          applyBlocking(false);\n\n          forEach(temporaryStyles, function(entry) {\n            var key = entry[0];\n            var value = entry[1];\n            node.style[key] = value;\n          });\n\n          applyAnimationClasses(element, options);\n          $$jqLite.addClass(element, activeClasses);\n\n          if (flags.recalculateTimingStyles) {\n            fullClassName = node.getAttribute('class') + ' ' + preparationClasses;\n            cacheKey = $$animateCache.cacheKey(node, method, options.addClass, options.removeClass);\n\n            timings = computeTimings(node, fullClassName, cacheKey, false);\n            relativeDelay = timings.maxDelay;\n            maxDelay = Math.max(relativeDelay, 0);\n            maxDuration = timings.maxDuration;\n\n            if (maxDuration === 0) {\n              close();\n              return;\n            }\n\n            flags.hasTransitions = timings.transitionDuration > 0;\n            flags.hasAnimations = timings.animationDuration > 0;\n          }\n\n          if (flags.applyAnimationDelay) {\n            relativeDelay = typeof options.delay !== 'boolean' && truthyTimingValue(options.delay)\n                  ? parseFloat(options.delay)\n                  : relativeDelay;\n\n            maxDelay = Math.max(relativeDelay, 0);\n            timings.animationDelay = relativeDelay;\n            delayStyle = getCssDelayStyle(relativeDelay, true);\n            temporaryStyles.push(delayStyle);\n            node.style[delayStyle[0]] = delayStyle[1];\n          }\n\n          maxDelayTime = maxDelay * ONE_SECOND;\n          maxDurationTime = maxDuration * ONE_SECOND;\n\n          if (options.easing) {\n            var easeProp, easeVal = options.easing;\n            if (flags.hasTransitions) {\n              easeProp = TRANSITION_PROP + TIMING_KEY;\n              temporaryStyles.push([easeProp, easeVal]);\n              node.style[easeProp] = easeVal;\n            }\n            if (flags.hasAnimations) {\n              easeProp = ANIMATION_PROP + TIMING_KEY;\n              temporaryStyles.push([easeProp, easeVal]);\n              node.style[easeProp] = easeVal;\n            }\n          }\n\n          if (timings.transitionDuration) {\n            events.push(TRANSITIONEND_EVENT);\n          }\n\n          if (timings.animationDuration) {\n            events.push(ANIMATIONEND_EVENT);\n          }\n\n          startTime = Date.now();\n          var timerTime = maxDelayTime + CLOSING_TIME_BUFFER * maxDurationTime;\n          var endTime = startTime + timerTime;\n\n          var animationsData = element.data(ANIMATE_TIMER_KEY) || [];\n          var setupFallbackTimer = true;\n          if (animationsData.length) {\n            var currentTimerData = animationsData[0];\n            setupFallbackTimer = endTime > currentTimerData.expectedEndTime;\n            if (setupFallbackTimer) {\n              $timeout.cancel(currentTimerData.timer);\n            } else {\n              animationsData.push(close);\n            }\n          }\n\n          if (setupFallbackTimer) {\n            var timer = $timeout(onAnimationExpired, timerTime, false);\n            animationsData[0] = {\n              timer: timer,\n              expectedEndTime: endTime\n            };\n            animationsData.push(close);\n            element.data(ANIMATE_TIMER_KEY, animationsData);\n          }\n\n          if (events.length) {\n            element.on(events.join(' '), onAnimationProgress);\n          }\n\n          if (options.to) {\n            if (options.cleanupStyles) {\n              registerRestorableStyles(restoreStyles, node, Object.keys(options.to));\n            }\n            applyAnimationToStyles(element, options);\n          }\n        }\n\n        function onAnimationExpired() {\n          var animationsData = element.data(ANIMATE_TIMER_KEY);\n\n          // this will be false in the event that the element was\n          // removed from the DOM (via a leave animation or something\n          // similar)\n          if (animationsData) {\n            for (var i = 1; i < animationsData.length; i++) {\n              animationsData[i]();\n            }\n            element.removeData(ANIMATE_TIMER_KEY);\n          }\n        }\n      }\n    };\n  }];\n}];\n\nvar $$AnimateCssDriverProvider = ['$$animationProvider', /** @this */ function($$animationProvider) {\n  $$animationProvider.drivers.push('$$animateCssDriver');\n\n  var NG_ANIMATE_SHIM_CLASS_NAME = 'ng-animate-shim';\n  var NG_ANIMATE_ANCHOR_CLASS_NAME = 'ng-anchor';\n\n  var NG_OUT_ANCHOR_CLASS_NAME = 'ng-anchor-out';\n  var NG_IN_ANCHOR_CLASS_NAME = 'ng-anchor-in';\n\n  function isDocumentFragment(node) {\n    return node.parentNode && node.parentNode.nodeType === 11;\n  }\n\n  this.$get = ['$animateCss', '$rootScope', '$$AnimateRunner', '$rootElement', '$sniffer', '$$jqLite', '$document',\n       function($animateCss,   $rootScope,   $$AnimateRunner,   $rootElement,   $sniffer,   $$jqLite,   $document) {\n\n    // only browsers that support these properties can render animations\n    if (!$sniffer.animations && !$sniffer.transitions) return noop;\n\n    var bodyNode = $document[0].body;\n    var rootNode = getDomNode($rootElement);\n\n    var rootBodyElement = jqLite(\n      // this is to avoid using something that exists outside of the body\n      // we also special case the doc fragment case because our unit test code\n      // appends the $rootElement to the body after the app has been bootstrapped\n      isDocumentFragment(rootNode) || bodyNode.contains(rootNode) ? rootNode : bodyNode\n    );\n\n    return function initDriverFn(animationDetails) {\n      return animationDetails.from && animationDetails.to\n          ? prepareFromToAnchorAnimation(animationDetails.from,\n                                         animationDetails.to,\n                                         animationDetails.classes,\n                                         animationDetails.anchors)\n          : prepareRegularAnimation(animationDetails);\n    };\n\n    function filterCssClasses(classes) {\n      //remove all the `ng-` stuff\n      return classes.replace(/\\bng-\\S+\\b/g, '');\n    }\n\n    function getUniqueValues(a, b) {\n      if (isString(a)) a = a.split(' ');\n      if (isString(b)) b = b.split(' ');\n      return a.filter(function(val) {\n        return b.indexOf(val) === -1;\n      }).join(' ');\n    }\n\n    function prepareAnchoredAnimation(classes, outAnchor, inAnchor) {\n      var clone = jqLite(getDomNode(outAnchor).cloneNode(true));\n      var startingClasses = filterCssClasses(getClassVal(clone));\n\n      outAnchor.addClass(NG_ANIMATE_SHIM_CLASS_NAME);\n      inAnchor.addClass(NG_ANIMATE_SHIM_CLASS_NAME);\n\n      clone.addClass(NG_ANIMATE_ANCHOR_CLASS_NAME);\n\n      rootBodyElement.append(clone);\n\n      var animatorIn, animatorOut = prepareOutAnimation();\n\n      // the user may not end up using the `out` animation and\n      // only making use of the `in` animation or vice-versa.\n      // In either case we should allow this and not assume the\n      // animation is over unless both animations are not used.\n      if (!animatorOut) {\n        animatorIn = prepareInAnimation();\n        if (!animatorIn) {\n          return end();\n        }\n      }\n\n      var startingAnimator = animatorOut || animatorIn;\n\n      return {\n        start: function() {\n          var runner;\n\n          var currentAnimation = startingAnimator.start();\n          currentAnimation.done(function() {\n            currentAnimation = null;\n            if (!animatorIn) {\n              animatorIn = prepareInAnimation();\n              if (animatorIn) {\n                currentAnimation = animatorIn.start();\n                currentAnimation.done(function() {\n                  currentAnimation = null;\n                  end();\n                  runner.complete();\n                });\n                return currentAnimation;\n              }\n            }\n            // in the event that there is no `in` animation\n            end();\n            runner.complete();\n          });\n\n          runner = new $$AnimateRunner({\n            end: endFn,\n            cancel: endFn\n          });\n\n          return runner;\n\n          function endFn() {\n            if (currentAnimation) {\n              currentAnimation.end();\n            }\n          }\n        }\n      };\n\n      function calculateAnchorStyles(anchor) {\n        var styles = {};\n\n        var coords = getDomNode(anchor).getBoundingClientRect();\n\n        // we iterate directly since safari messes up and doesn't return\n        // all the keys for the coords object when iterated\n        forEach(['width','height','top','left'], function(key) {\n          var value = coords[key];\n          switch (key) {\n            case 'top':\n              value += bodyNode.scrollTop;\n              break;\n            case 'left':\n              value += bodyNode.scrollLeft;\n              break;\n          }\n          styles[key] = Math.floor(value) + 'px';\n        });\n        return styles;\n      }\n\n      function prepareOutAnimation() {\n        var animator = $animateCss(clone, {\n          addClass: NG_OUT_ANCHOR_CLASS_NAME,\n          delay: true,\n          from: calculateAnchorStyles(outAnchor)\n        });\n\n        // read the comment within `prepareRegularAnimation` to understand\n        // why this check is necessary\n        return animator.$$willAnimate ? animator : null;\n      }\n\n      function getClassVal(element) {\n        return element.attr('class') || '';\n      }\n\n      function prepareInAnimation() {\n        var endingClasses = filterCssClasses(getClassVal(inAnchor));\n        var toAdd = getUniqueValues(endingClasses, startingClasses);\n        var toRemove = getUniqueValues(startingClasses, endingClasses);\n\n        var animator = $animateCss(clone, {\n          to: calculateAnchorStyles(inAnchor),\n          addClass: NG_IN_ANCHOR_CLASS_NAME + ' ' + toAdd,\n          removeClass: NG_OUT_ANCHOR_CLASS_NAME + ' ' + toRemove,\n          delay: true\n        });\n\n        // read the comment within `prepareRegularAnimation` to understand\n        // why this check is necessary\n        return animator.$$willAnimate ? animator : null;\n      }\n\n      function end() {\n        clone.remove();\n        outAnchor.removeClass(NG_ANIMATE_SHIM_CLASS_NAME);\n        inAnchor.removeClass(NG_ANIMATE_SHIM_CLASS_NAME);\n      }\n    }\n\n    function prepareFromToAnchorAnimation(from, to, classes, anchors) {\n      var fromAnimation = prepareRegularAnimation(from, noop);\n      var toAnimation = prepareRegularAnimation(to, noop);\n\n      var anchorAnimations = [];\n      forEach(anchors, function(anchor) {\n        var outElement = anchor['out'];\n        var inElement = anchor['in'];\n        var animator = prepareAnchoredAnimation(classes, outElement, inElement);\n        if (animator) {\n          anchorAnimations.push(animator);\n        }\n      });\n\n      // no point in doing anything when there are no elements to animate\n      if (!fromAnimation && !toAnimation && anchorAnimations.length === 0) return;\n\n      return {\n        start: function() {\n          var animationRunners = [];\n\n          if (fromAnimation) {\n            animationRunners.push(fromAnimation.start());\n          }\n\n          if (toAnimation) {\n            animationRunners.push(toAnimation.start());\n          }\n\n          forEach(anchorAnimations, function(animation) {\n            animationRunners.push(animation.start());\n          });\n\n          var runner = new $$AnimateRunner({\n            end: endFn,\n            cancel: endFn // CSS-driven animations cannot be cancelled, only ended\n          });\n\n          $$AnimateRunner.all(animationRunners, function(status) {\n            runner.complete(status);\n          });\n\n          return runner;\n\n          function endFn() {\n            forEach(animationRunners, function(runner) {\n              runner.end();\n            });\n          }\n        }\n      };\n    }\n\n    function prepareRegularAnimation(animationDetails) {\n      var element = animationDetails.element;\n      var options = animationDetails.options || {};\n\n      if (animationDetails.structural) {\n        options.event = animationDetails.event;\n        options.structural = true;\n        options.applyClassesEarly = true;\n\n        // we special case the leave animation since we want to ensure that\n        // the element is removed as soon as the animation is over. Otherwise\n        // a flicker might appear or the element may not be removed at all\n        if (animationDetails.event === 'leave') {\n          options.onDone = options.domOperation;\n        }\n      }\n\n      // We assign the preparationClasses as the actual animation event since\n      // the internals of $animateCss will just suffix the event token values\n      // with `-active` to trigger the animation.\n      if (options.preparationClasses) {\n        options.event = concatWithSpace(options.event, options.preparationClasses);\n      }\n\n      var animator = $animateCss(element, options);\n\n      // the driver lookup code inside of $$animation attempts to spawn a\n      // driver one by one until a driver returns a.$$willAnimate animator object.\n      // $animateCss will always return an object, however, it will pass in\n      // a flag as a hint as to whether an animation was detected or not\n      return animator.$$willAnimate ? animator : null;\n    }\n  }];\n}];\n\n// TODO(matsko): use caching here to speed things up for detection\n// TODO(matsko): add documentation\n//  by the time...\n\nvar $$AnimateJsProvider = ['$animateProvider', /** @this */ function($animateProvider) {\n  this.$get = ['$injector', '$$AnimateRunner', '$$jqLite',\n       function($injector,   $$AnimateRunner,   $$jqLite) {\n\n    var applyAnimationClasses = applyAnimationClassesFactory($$jqLite);\n         // $animateJs(element, 'enter');\n    return function(element, event, classes, options) {\n      var animationClosed = false;\n\n      // the `classes` argument is optional and if it is not used\n      // then the classes will be resolved from the element's className\n      // property as well as options.addClass/options.removeClass.\n      if (arguments.length === 3 && isObject(classes)) {\n        options = classes;\n        classes = null;\n      }\n\n      options = prepareAnimationOptions(options);\n      if (!classes) {\n        classes = element.attr('class') || '';\n        if (options.addClass) {\n          classes += ' ' + options.addClass;\n        }\n        if (options.removeClass) {\n          classes += ' ' + options.removeClass;\n        }\n      }\n\n      var classesToAdd = options.addClass;\n      var classesToRemove = options.removeClass;\n\n      // the lookupAnimations function returns a series of animation objects that are\n      // matched up with one or more of the CSS classes. These animation objects are\n      // defined via the module.animation factory function. If nothing is detected then\n      // we don't return anything which then makes $animation query the next driver.\n      var animations = lookupAnimations(classes);\n      var before, after;\n      if (animations.length) {\n        var afterFn, beforeFn;\n        if (event === 'leave') {\n          beforeFn = 'leave';\n          afterFn = 'afterLeave'; // TODO(matsko): get rid of this\n        } else {\n          beforeFn = 'before' + event.charAt(0).toUpperCase() + event.substr(1);\n          afterFn = event;\n        }\n\n        if (event !== 'enter' && event !== 'move') {\n          before = packageAnimations(element, event, options, animations, beforeFn);\n        }\n        after  = packageAnimations(element, event, options, animations, afterFn);\n      }\n\n      // no matching animations\n      if (!before && !after) return;\n\n      function applyOptions() {\n        options.domOperation();\n        applyAnimationClasses(element, options);\n      }\n\n      function close() {\n        animationClosed = true;\n        applyOptions();\n        applyAnimationStyles(element, options);\n      }\n\n      var runner;\n\n      return {\n        $$willAnimate: true,\n        end: function() {\n          if (runner) {\n            runner.end();\n          } else {\n            close();\n            runner = new $$AnimateRunner();\n            runner.complete(true);\n          }\n          return runner;\n        },\n        start: function() {\n          if (runner) {\n            return runner;\n          }\n\n          runner = new $$AnimateRunner();\n          var closeActiveAnimations;\n          var chain = [];\n\n          if (before) {\n            chain.push(function(fn) {\n              closeActiveAnimations = before(fn);\n            });\n          }\n\n          if (chain.length) {\n            chain.push(function(fn) {\n              applyOptions();\n              fn(true);\n            });\n          } else {\n            applyOptions();\n          }\n\n          if (after) {\n            chain.push(function(fn) {\n              closeActiveAnimations = after(fn);\n            });\n          }\n\n          runner.setHost({\n            end: function() {\n              endAnimations();\n            },\n            cancel: function() {\n              endAnimations(true);\n            }\n          });\n\n          $$AnimateRunner.chain(chain, onComplete);\n          return runner;\n\n          function onComplete(success) {\n            close(success);\n            runner.complete(success);\n          }\n\n          function endAnimations(cancelled) {\n            if (!animationClosed) {\n              (closeActiveAnimations || noop)(cancelled);\n              onComplete(cancelled);\n            }\n          }\n        }\n      };\n\n      function executeAnimationFn(fn, element, event, options, onDone) {\n        var args;\n        switch (event) {\n          case 'animate':\n            args = [element, options.from, options.to, onDone];\n            break;\n\n          case 'setClass':\n            args = [element, classesToAdd, classesToRemove, onDone];\n            break;\n\n          case 'addClass':\n            args = [element, classesToAdd, onDone];\n            break;\n\n          case 'removeClass':\n            args = [element, classesToRemove, onDone];\n            break;\n\n          default:\n            args = [element, onDone];\n            break;\n        }\n\n        args.push(options);\n\n        var value = fn.apply(fn, args);\n        if (value) {\n          if (isFunction(value.start)) {\n            value = value.start();\n          }\n\n          if (value instanceof $$AnimateRunner) {\n            value.done(onDone);\n          } else if (isFunction(value)) {\n            // optional onEnd / onCancel callback\n            return value;\n          }\n        }\n\n        return noop;\n      }\n\n      function groupEventedAnimations(element, event, options, animations, fnName) {\n        var operations = [];\n        forEach(animations, function(ani) {\n          var animation = ani[fnName];\n          if (!animation) return;\n\n          // note that all of these animations will run in parallel\n          operations.push(function() {\n            var runner;\n            var endProgressCb;\n\n            var resolved = false;\n            var onAnimationComplete = function(rejected) {\n              if (!resolved) {\n                resolved = true;\n                (endProgressCb || noop)(rejected);\n                runner.complete(!rejected);\n              }\n            };\n\n            runner = new $$AnimateRunner({\n              end: function() {\n                onAnimationComplete();\n              },\n              cancel: function() {\n                onAnimationComplete(true);\n              }\n            });\n\n            endProgressCb = executeAnimationFn(animation, element, event, options, function(result) {\n              var cancelled = result === false;\n              onAnimationComplete(cancelled);\n            });\n\n            return runner;\n          });\n        });\n\n        return operations;\n      }\n\n      function packageAnimations(element, event, options, animations, fnName) {\n        var operations = groupEventedAnimations(element, event, options, animations, fnName);\n        if (operations.length === 0) {\n          var a, b;\n          if (fnName === 'beforeSetClass') {\n            a = groupEventedAnimations(element, 'removeClass', options, animations, 'beforeRemoveClass');\n            b = groupEventedAnimations(element, 'addClass', options, animations, 'beforeAddClass');\n          } else if (fnName === 'setClass') {\n            a = groupEventedAnimations(element, 'removeClass', options, animations, 'removeClass');\n            b = groupEventedAnimations(element, 'addClass', options, animations, 'addClass');\n          }\n\n          if (a) {\n            operations = operations.concat(a);\n          }\n          if (b) {\n            operations = operations.concat(b);\n          }\n        }\n\n        if (operations.length === 0) return;\n\n        // TODO(matsko): add documentation\n        return function startAnimation(callback) {\n          var runners = [];\n          if (operations.length) {\n            forEach(operations, function(animateFn) {\n              runners.push(animateFn());\n            });\n          }\n\n          if (runners.length) {\n            $$AnimateRunner.all(runners, callback);\n          }  else {\n            callback();\n          }\n\n          return function endFn(reject) {\n            forEach(runners, function(runner) {\n              if (reject) {\n                runner.cancel();\n              } else {\n                runner.end();\n              }\n            });\n          };\n        };\n      }\n    };\n\n    function lookupAnimations(classes) {\n      classes = isArray(classes) ? classes : classes.split(' ');\n      var matches = [], flagMap = {};\n      for (var i = 0; i < classes.length; i++) {\n        var klass = classes[i],\n            animationFactory = $animateProvider.$$registeredAnimations[klass];\n        if (animationFactory && !flagMap[klass]) {\n          matches.push($injector.get(animationFactory));\n          flagMap[klass] = true;\n        }\n      }\n      return matches;\n    }\n  }];\n}];\n\nvar $$AnimateJsDriverProvider = ['$$animationProvider', /** @this */ function($$animationProvider) {\n  $$animationProvider.drivers.push('$$animateJsDriver');\n  this.$get = ['$$animateJs', '$$AnimateRunner', function($$animateJs, $$AnimateRunner) {\n    return function initDriverFn(animationDetails) {\n      if (animationDetails.from && animationDetails.to) {\n        var fromAnimation = prepareAnimation(animationDetails.from);\n        var toAnimation = prepareAnimation(animationDetails.to);\n        if (!fromAnimation && !toAnimation) return;\n\n        return {\n          start: function() {\n            var animationRunners = [];\n\n            if (fromAnimation) {\n              animationRunners.push(fromAnimation.start());\n            }\n\n            if (toAnimation) {\n              animationRunners.push(toAnimation.start());\n            }\n\n            $$AnimateRunner.all(animationRunners, done);\n\n            var runner = new $$AnimateRunner({\n              end: endFnFactory(),\n              cancel: endFnFactory()\n            });\n\n            return runner;\n\n            function endFnFactory() {\n              return function() {\n                forEach(animationRunners, function(runner) {\n                  // at this point we cannot cancel animations for groups just yet. 1.5+\n                  runner.end();\n                });\n              };\n            }\n\n            function done(status) {\n              runner.complete(status);\n            }\n          }\n        };\n      } else {\n        return prepareAnimation(animationDetails);\n      }\n    };\n\n    function prepareAnimation(animationDetails) {\n      // TODO(matsko): make sure to check for grouped animations and delegate down to normal animations\n      var element = animationDetails.element;\n      var event = animationDetails.event;\n      var options = animationDetails.options;\n      var classes = animationDetails.classes;\n      return $$animateJs(element, event, classes, options);\n    }\n  }];\n}];\n\nvar NG_ANIMATE_ATTR_NAME = 'data-ng-animate';\nvar NG_ANIMATE_PIN_DATA = '$ngAnimatePin';\nvar $$AnimateQueueProvider = ['$animateProvider', /** @this */ function($animateProvider) {\n  var PRE_DIGEST_STATE = 1;\n  var RUNNING_STATE = 2;\n  var ONE_SPACE = ' ';\n\n  var rules = this.rules = {\n    skip: [],\n    cancel: [],\n    join: []\n  };\n\n  function getEventData(options) {\n    return {\n      addClass: options.addClass,\n      removeClass: options.removeClass,\n      from: options.from,\n      to: options.to\n    };\n  }\n\n  function makeTruthyCssClassMap(classString) {\n    if (!classString) {\n      return null;\n    }\n\n    var keys = classString.split(ONE_SPACE);\n    var map = Object.create(null);\n\n    forEach(keys, function(key) {\n      map[key] = true;\n    });\n    return map;\n  }\n\n  function hasMatchingClasses(newClassString, currentClassString) {\n    if (newClassString && currentClassString) {\n      var currentClassMap = makeTruthyCssClassMap(currentClassString);\n      return newClassString.split(ONE_SPACE).some(function(className) {\n        return currentClassMap[className];\n      });\n    }\n  }\n\n  function isAllowed(ruleType, currentAnimation, previousAnimation) {\n    return rules[ruleType].some(function(fn) {\n      return fn(currentAnimation, previousAnimation);\n    });\n  }\n\n  function hasAnimationClasses(animation, and) {\n    var a = (animation.addClass || '').length > 0;\n    var b = (animation.removeClass || '').length > 0;\n    return and ? a && b : a || b;\n  }\n\n  rules.join.push(function(newAnimation, currentAnimation) {\n    // if the new animation is class-based then we can just tack that on\n    return !newAnimation.structural && hasAnimationClasses(newAnimation);\n  });\n\n  rules.skip.push(function(newAnimation, currentAnimation) {\n    // there is no need to animate anything if no classes are being added and\n    // there is no structural animation that will be triggered\n    return !newAnimation.structural && !hasAnimationClasses(newAnimation);\n  });\n\n  rules.skip.push(function(newAnimation, currentAnimation) {\n    // why should we trigger a new structural animation if the element will\n    // be removed from the DOM anyway?\n    return currentAnimation.event === 'leave' && newAnimation.structural;\n  });\n\n  rules.skip.push(function(newAnimation, currentAnimation) {\n    // if there is an ongoing current animation then don't even bother running the class-based animation\n    return currentAnimation.structural && currentAnimation.state === RUNNING_STATE && !newAnimation.structural;\n  });\n\n  rules.cancel.push(function(newAnimation, currentAnimation) {\n    // there can never be two structural animations running at the same time\n    return currentAnimation.structural && newAnimation.structural;\n  });\n\n  rules.cancel.push(function(newAnimation, currentAnimation) {\n    // if the previous animation is already running, but the new animation will\n    // be triggered, but the new animation is structural\n    return currentAnimation.state === RUNNING_STATE && newAnimation.structural;\n  });\n\n  rules.cancel.push(function(newAnimation, currentAnimation) {\n    // cancel the animation if classes added / removed in both animation cancel each other out,\n    // but only if the current animation isn't structural\n\n    if (currentAnimation.structural) return false;\n\n    var nA = newAnimation.addClass;\n    var nR = newAnimation.removeClass;\n    var cA = currentAnimation.addClass;\n    var cR = currentAnimation.removeClass;\n\n    // early detection to save the global CPU shortage :)\n    if ((isUndefined(nA) && isUndefined(nR)) || (isUndefined(cA) && isUndefined(cR))) {\n      return false;\n    }\n\n    return hasMatchingClasses(nA, cR) || hasMatchingClasses(nR, cA);\n  });\n\n  this.$get = ['$$rAF', '$rootScope', '$rootElement', '$document', '$$Map',\n               '$$animation', '$$AnimateRunner', '$templateRequest', '$$jqLite', '$$forceReflow',\n               '$$isDocumentHidden',\n       function($$rAF,   $rootScope,   $rootElement,   $document,   $$Map,\n                $$animation,   $$AnimateRunner,   $templateRequest,   $$jqLite,   $$forceReflow,\n                $$isDocumentHidden) {\n\n    var activeAnimationsLookup = new $$Map();\n    var disabledElementsLookup = new $$Map();\n    var animationsEnabled = null;\n\n    function removeFromDisabledElementsLookup(evt) {\n      disabledElementsLookup.delete(evt.target);\n    }\n\n    function postDigestTaskFactory() {\n      var postDigestCalled = false;\n      return function(fn) {\n        // we only issue a call to postDigest before\n        // it has first passed. This prevents any callbacks\n        // from not firing once the animation has completed\n        // since it will be out of the digest cycle.\n        if (postDigestCalled) {\n          fn();\n        } else {\n          $rootScope.$$postDigest(function() {\n            postDigestCalled = true;\n            fn();\n          });\n        }\n      };\n    }\n\n    // Wait until all directive and route-related templates are downloaded and\n    // compiled. The $templateRequest.totalPendingRequests variable keeps track of\n    // all of the remote templates being currently downloaded. If there are no\n    // templates currently downloading then the watcher will still fire anyway.\n    var deregisterWatch = $rootScope.$watch(\n      function() { return $templateRequest.totalPendingRequests === 0; },\n      function(isEmpty) {\n        if (!isEmpty) return;\n        deregisterWatch();\n\n        // Now that all templates have been downloaded, $animate will wait until\n        // the post digest queue is empty before enabling animations. By having two\n        // calls to $postDigest calls we can ensure that the flag is enabled at the\n        // very end of the post digest queue. Since all of the animations in $animate\n        // use $postDigest, it's important that the code below executes at the end.\n        // This basically means that the page is fully downloaded and compiled before\n        // any animations are triggered.\n        $rootScope.$$postDigest(function() {\n          $rootScope.$$postDigest(function() {\n            // we check for null directly in the event that the application already called\n            // .enabled() with whatever arguments that it provided it with\n            if (animationsEnabled === null) {\n              animationsEnabled = true;\n            }\n          });\n        });\n      }\n    );\n\n    var callbackRegistry = Object.create(null);\n\n    // remember that the `customFilter`/`classNameFilter` are set during the\n    // provider/config stage therefore we can optimize here and setup helper functions\n    var customFilter = $animateProvider.customFilter();\n    var classNameFilter = $animateProvider.classNameFilter();\n    var returnTrue = function() { return true; };\n\n    var isAnimatableByFilter = customFilter || returnTrue;\n    var isAnimatableClassName = !classNameFilter ? returnTrue : function(node, options) {\n      var className = [node.getAttribute('class'), options.addClass, options.removeClass].join(' ');\n      return classNameFilter.test(className);\n    };\n\n    var applyAnimationClasses = applyAnimationClassesFactory($$jqLite);\n\n    function normalizeAnimationDetails(element, animation) {\n      return mergeAnimationDetails(element, animation, {});\n    }\n\n    // IE9-11 has no method \"contains\" in SVG element and in Node.prototype. Bug #10259.\n    var contains = window.Node.prototype.contains || /** @this */ function(arg) {\n      // eslint-disable-next-line no-bitwise\n      return this === arg || !!(this.compareDocumentPosition(arg) & 16);\n    };\n\n    function findCallbacks(targetParentNode, targetNode, event) {\n      var matches = [];\n      var entries = callbackRegistry[event];\n      if (entries) {\n        forEach(entries, function(entry) {\n          if (contains.call(entry.node, targetNode)) {\n            matches.push(entry.callback);\n          } else if (event === 'leave' && contains.call(entry.node, targetParentNode)) {\n            matches.push(entry.callback);\n          }\n        });\n      }\n\n      return matches;\n    }\n\n    function filterFromRegistry(list, matchContainer, matchCallback) {\n      var containerNode = extractElementNode(matchContainer);\n      return list.filter(function(entry) {\n        var isMatch = entry.node === containerNode &&\n                        (!matchCallback || entry.callback === matchCallback);\n        return !isMatch;\n      });\n    }\n\n    function cleanupEventListeners(phase, node) {\n      if (phase === 'close' && !node.parentNode) {\n        // If the element is not attached to a parentNode, it has been removed by\n        // the domOperation, and we can safely remove the event callbacks\n        $animate.off(node);\n      }\n    }\n\n    var $animate = {\n      on: function(event, container, callback) {\n        var node = extractElementNode(container);\n        callbackRegistry[event] = callbackRegistry[event] || [];\n        callbackRegistry[event].push({\n          node: node,\n          callback: callback\n        });\n\n        // Remove the callback when the element is removed from the DOM\n        jqLite(container).on('$destroy', function() {\n          var animationDetails = activeAnimationsLookup.get(node);\n\n          if (!animationDetails) {\n            // If there's an animation ongoing, the callback calling code will remove\n            // the event listeners. If we'd remove here, the callbacks would be removed\n            // before the animation ends\n            $animate.off(event, container, callback);\n          }\n        });\n      },\n\n      off: function(event, container, callback) {\n        if (arguments.length === 1 && !isString(arguments[0])) {\n          container = arguments[0];\n          for (var eventType in callbackRegistry) {\n            callbackRegistry[eventType] = filterFromRegistry(callbackRegistry[eventType], container);\n          }\n\n          return;\n        }\n\n        var entries = callbackRegistry[event];\n        if (!entries) return;\n\n        callbackRegistry[event] = arguments.length === 1\n            ? null\n            : filterFromRegistry(entries, container, callback);\n      },\n\n      pin: function(element, parentElement) {\n        assertArg(isElement(element), 'element', 'not an element');\n        assertArg(isElement(parentElement), 'parentElement', 'not an element');\n        element.data(NG_ANIMATE_PIN_DATA, parentElement);\n      },\n\n      push: function(element, event, options, domOperation) {\n        options = options || {};\n        options.domOperation = domOperation;\n        return queueAnimation(element, event, options);\n      },\n\n      // this method has four signatures:\n      //  () - global getter\n      //  (bool) - global setter\n      //  (element) - element getter\n      //  (element, bool) - element setter<F37>\n      enabled: function(element, bool) {\n        var argCount = arguments.length;\n\n        if (argCount === 0) {\n          // () - Global getter\n          bool = !!animationsEnabled;\n        } else {\n          var hasElement = isElement(element);\n\n          if (!hasElement) {\n            // (bool) - Global setter\n            bool = animationsEnabled = !!element;\n          } else {\n            var node = getDomNode(element);\n\n            if (argCount === 1) {\n              // (element) - Element getter\n              bool = !disabledElementsLookup.get(node);\n            } else {\n              // (element, bool) - Element setter\n              if (!disabledElementsLookup.has(node)) {\n                // The element is added to the map for the first time.\n                // Create a listener to remove it on `$destroy` (to avoid memory leak).\n                jqLite(element).on('$destroy', removeFromDisabledElementsLookup);\n              }\n              disabledElementsLookup.set(node, !bool);\n            }\n          }\n        }\n\n        return bool;\n      }\n    };\n\n    return $animate;\n\n    function queueAnimation(originalElement, event, initialOptions) {\n      // we always make a copy of the options since\n      // there should never be any side effects on\n      // the input data when running `$animateCss`.\n      var options = copy(initialOptions);\n\n      var element = stripCommentsFromElement(originalElement);\n      var node = getDomNode(element);\n      var parentNode = node && node.parentNode;\n\n      options = prepareAnimationOptions(options);\n\n      // we create a fake runner with a working promise.\n      // These methods will become available after the digest has passed\n      var runner = new $$AnimateRunner();\n\n      // this is used to trigger callbacks in postDigest mode\n      var runInNextPostDigestOrNow = postDigestTaskFactory();\n\n      if (isArray(options.addClass)) {\n        options.addClass = options.addClass.join(' ');\n      }\n\n      if (options.addClass && !isString(options.addClass)) {\n        options.addClass = null;\n      }\n\n      if (isArray(options.removeClass)) {\n        options.removeClass = options.removeClass.join(' ');\n      }\n\n      if (options.removeClass && !isString(options.removeClass)) {\n        options.removeClass = null;\n      }\n\n      if (options.from && !isObject(options.from)) {\n        options.from = null;\n      }\n\n      if (options.to && !isObject(options.to)) {\n        options.to = null;\n      }\n\n      // If animations are hard-disabled for the whole application there is no need to continue.\n      // There are also situations where a directive issues an animation for a jqLite wrapper that\n      // contains only comment nodes. In this case, there is no way we can perform an animation.\n      if (!animationsEnabled ||\n          !node ||\n          !isAnimatableByFilter(node, event, initialOptions) ||\n          !isAnimatableClassName(node, options)) {\n        close();\n        return runner;\n      }\n\n      var isStructural = ['enter', 'move', 'leave'].indexOf(event) >= 0;\n\n      var documentHidden = $$isDocumentHidden();\n\n      // This is a hard disable of all animations the element itself, therefore  there is no need to\n      // continue further past this point if not enabled\n      // Animations are also disabled if the document is currently hidden (page is not visible\n      // to the user), because browsers slow down or do not flush calls to requestAnimationFrame\n      var skipAnimations = documentHidden || disabledElementsLookup.get(node);\n      var existingAnimation = (!skipAnimations && activeAnimationsLookup.get(node)) || {};\n      var hasExistingAnimation = !!existingAnimation.state;\n\n      // there is no point in traversing the same collection of parent ancestors if a followup\n      // animation will be run on the same element that already did all that checking work\n      if (!skipAnimations && (!hasExistingAnimation || existingAnimation.state !== PRE_DIGEST_STATE)) {\n        skipAnimations = !areAnimationsAllowed(node, parentNode, event);\n      }\n\n      if (skipAnimations) {\n        // Callbacks should fire even if the document is hidden (regression fix for issue #14120)\n        if (documentHidden) notifyProgress(runner, event, 'start', getEventData(options));\n        close();\n        if (documentHidden) notifyProgress(runner, event, 'close', getEventData(options));\n        return runner;\n      }\n\n      if (isStructural) {\n        closeChildAnimations(node);\n      }\n\n      var newAnimation = {\n        structural: isStructural,\n        element: element,\n        event: event,\n        addClass: options.addClass,\n        removeClass: options.removeClass,\n        close: close,\n        options: options,\n        runner: runner\n      };\n\n      if (hasExistingAnimation) {\n        var skipAnimationFlag = isAllowed('skip', newAnimation, existingAnimation);\n        if (skipAnimationFlag) {\n          if (existingAnimation.state === RUNNING_STATE) {\n            close();\n            return runner;\n          } else {\n            mergeAnimationDetails(element, existingAnimation, newAnimation);\n            return existingAnimation.runner;\n          }\n        }\n        var cancelAnimationFlag = isAllowed('cancel', newAnimation, existingAnimation);\n        if (cancelAnimationFlag) {\n          if (existingAnimation.state === RUNNING_STATE) {\n            // this will end the animation right away and it is safe\n            // to do so since the animation is already running and the\n            // runner callback code will run in async\n            existingAnimation.runner.end();\n          } else if (existingAnimation.structural) {\n            // this means that the animation is queued into a digest, but\n            // hasn't started yet. Therefore it is safe to run the close\n            // method which will call the runner methods in async.\n            existingAnimation.close();\n          } else {\n            // this will merge the new animation options into existing animation options\n            mergeAnimationDetails(element, existingAnimation, newAnimation);\n\n            return existingAnimation.runner;\n          }\n        } else {\n          // a joined animation means that this animation will take over the existing one\n          // so an example would involve a leave animation taking over an enter. Then when\n          // the postDigest kicks in the enter will be ignored.\n          var joinAnimationFlag = isAllowed('join', newAnimation, existingAnimation);\n          if (joinAnimationFlag) {\n            if (existingAnimation.state === RUNNING_STATE) {\n              normalizeAnimationDetails(element, newAnimation);\n            } else {\n              applyGeneratedPreparationClasses($$jqLite, element, isStructural ? event : null, options);\n\n              event = newAnimation.event = existingAnimation.event;\n              options = mergeAnimationDetails(element, existingAnimation, newAnimation);\n\n              //we return the same runner since only the option values of this animation will\n              //be fed into the `existingAnimation`.\n              return existingAnimation.runner;\n            }\n          }\n        }\n      } else {\n        // normalization in this case means that it removes redundant CSS classes that\n        // already exist (addClass) or do not exist (removeClass) on the element\n        normalizeAnimationDetails(element, newAnimation);\n      }\n\n      // when the options are merged and cleaned up we may end up not having to do\n      // an animation at all, therefore we should check this before issuing a post\n      // digest callback. Structural animations will always run no matter what.\n      var isValidAnimation = newAnimation.structural;\n      if (!isValidAnimation) {\n        // animate (from/to) can be quickly checked first, otherwise we check if any classes are present\n        isValidAnimation = (newAnimation.event === 'animate' && Object.keys(newAnimation.options.to || {}).length > 0)\n                            || hasAnimationClasses(newAnimation);\n      }\n\n      if (!isValidAnimation) {\n        close();\n        clearElementAnimationState(node);\n        return runner;\n      }\n\n      // the counter keeps track of cancelled animations\n      var counter = (existingAnimation.counter || 0) + 1;\n      newAnimation.counter = counter;\n\n      markElementAnimationState(node, PRE_DIGEST_STATE, newAnimation);\n\n      $rootScope.$$postDigest(function() {\n        // It is possible that the DOM nodes inside `originalElement` have been replaced. This can\n        // happen if the animated element is a transcluded clone and also has a `templateUrl`\n        // directive on it. Therefore, we must recreate `element` in order to interact with the\n        // actual DOM nodes.\n        // Note: We still need to use the old `node` for certain things, such as looking up in\n        //       HashMaps where it was used as the key.\n\n        element = stripCommentsFromElement(originalElement);\n\n        var animationDetails = activeAnimationsLookup.get(node);\n        var animationCancelled = !animationDetails;\n        animationDetails = animationDetails || {};\n\n        // if addClass/removeClass is called before something like enter then the\n        // registered parent element may not be present. The code below will ensure\n        // that a final value for parent element is obtained\n        var parentElement = element.parent() || [];\n\n        // animate/structural/class-based animations all have requirements. Otherwise there\n        // is no point in performing an animation. The parent node must also be set.\n        var isValidAnimation = parentElement.length > 0\n                                && (animationDetails.event === 'animate'\n                                    || animationDetails.structural\n                                    || hasAnimationClasses(animationDetails));\n\n        // this means that the previous animation was cancelled\n        // even if the follow-up animation is the same event\n        if (animationCancelled || animationDetails.counter !== counter || !isValidAnimation) {\n          // if another animation did not take over then we need\n          // to make sure that the domOperation and options are\n          // handled accordingly\n          if (animationCancelled) {\n            applyAnimationClasses(element, options);\n            applyAnimationStyles(element, options);\n          }\n\n          // if the event changed from something like enter to leave then we do\n          // it, otherwise if it's the same then the end result will be the same too\n          if (animationCancelled || (isStructural && animationDetails.event !== event)) {\n            options.domOperation();\n            runner.end();\n          }\n\n          // in the event that the element animation was not cancelled or a follow-up animation\n          // isn't allowed to animate from here then we need to clear the state of the element\n          // so that any future animations won't read the expired animation data.\n          if (!isValidAnimation) {\n            clearElementAnimationState(node);\n          }\n\n          return;\n        }\n\n        // this combined multiple class to addClass / removeClass into a setClass event\n        // so long as a structural event did not take over the animation\n        event = !animationDetails.structural && hasAnimationClasses(animationDetails, true)\n            ? 'setClass'\n            : animationDetails.event;\n\n        markElementAnimationState(node, RUNNING_STATE);\n        var realRunner = $$animation(element, event, animationDetails.options);\n\n        // this will update the runner's flow-control events based on\n        // the `realRunner` object.\n        runner.setHost(realRunner);\n        notifyProgress(runner, event, 'start', getEventData(options));\n\n        realRunner.done(function(status) {\n          close(!status);\n          var animationDetails = activeAnimationsLookup.get(node);\n          if (animationDetails && animationDetails.counter === counter) {\n            clearElementAnimationState(node);\n          }\n          notifyProgress(runner, event, 'close', getEventData(options));\n        });\n      });\n\n      return runner;\n\n      function notifyProgress(runner, event, phase, data) {\n        runInNextPostDigestOrNow(function() {\n          var callbacks = findCallbacks(parentNode, node, event);\n          if (callbacks.length) {\n            // do not optimize this call here to RAF because\n            // we don't know how heavy the callback code here will\n            // be and if this code is buffered then this can\n            // lead to a performance regression.\n            $$rAF(function() {\n              forEach(callbacks, function(callback) {\n                callback(element, phase, data);\n              });\n              cleanupEventListeners(phase, node);\n            });\n          } else {\n            cleanupEventListeners(phase, node);\n          }\n        });\n        runner.progress(event, phase, data);\n      }\n\n      function close(reject) {\n        clearGeneratedClasses(element, options);\n        applyAnimationClasses(element, options);\n        applyAnimationStyles(element, options);\n        options.domOperation();\n        runner.complete(!reject);\n      }\n    }\n\n    function closeChildAnimations(node) {\n      var children = node.querySelectorAll('[' + NG_ANIMATE_ATTR_NAME + ']');\n      forEach(children, function(child) {\n        var state = parseInt(child.getAttribute(NG_ANIMATE_ATTR_NAME), 10);\n        var animationDetails = activeAnimationsLookup.get(child);\n        if (animationDetails) {\n          switch (state) {\n            case RUNNING_STATE:\n              animationDetails.runner.end();\n              /* falls through */\n            case PRE_DIGEST_STATE:\n              activeAnimationsLookup.delete(child);\n              break;\n          }\n        }\n      });\n    }\n\n    function clearElementAnimationState(node) {\n      node.removeAttribute(NG_ANIMATE_ATTR_NAME);\n      activeAnimationsLookup.delete(node);\n    }\n\n    /**\n     * This fn returns false if any of the following is true:\n     * a) animations on any parent element are disabled, and animations on the element aren't explicitly allowed\n     * b) a parent element has an ongoing structural animation, and animateChildren is false\n     * c) the element is not a child of the body\n     * d) the element is not a child of the $rootElement\n     */\n    function areAnimationsAllowed(node, parentNode, event) {\n      var bodyNode = $document[0].body;\n      var rootNode = getDomNode($rootElement);\n\n      var bodyNodeDetected = (node === bodyNode) || node.nodeName === 'HTML';\n      var rootNodeDetected = (node === rootNode);\n      var parentAnimationDetected = false;\n      var elementDisabled = disabledElementsLookup.get(node);\n      var animateChildren;\n\n      var parentHost = jqLite.data(node, NG_ANIMATE_PIN_DATA);\n      if (parentHost) {\n        parentNode = getDomNode(parentHost);\n      }\n\n      while (parentNode) {\n        if (!rootNodeDetected) {\n          // AngularJS doesn't want to attempt to animate elements outside of the application\n          // therefore we need to ensure that the rootElement is an ancestor of the current element\n          rootNodeDetected = (parentNode === rootNode);\n        }\n\n        if (parentNode.nodeType !== ELEMENT_NODE) {\n          // no point in inspecting the #document element\n          break;\n        }\n\n        var details = activeAnimationsLookup.get(parentNode) || {};\n        // either an enter, leave or move animation will commence\n        // therefore we can't allow any animations to take place\n        // but if a parent animation is class-based then that's ok\n        if (!parentAnimationDetected) {\n          var parentNodeDisabled = disabledElementsLookup.get(parentNode);\n\n          if (parentNodeDisabled === true && elementDisabled !== false) {\n            // disable animations if the user hasn't explicitly enabled animations on the\n            // current element\n            elementDisabled = true;\n            // element is disabled via parent element, no need to check anything else\n            break;\n          } else if (parentNodeDisabled === false) {\n            elementDisabled = false;\n          }\n          parentAnimationDetected = details.structural;\n        }\n\n        if (isUndefined(animateChildren) || animateChildren === true) {\n          var value = jqLite.data(parentNode, NG_ANIMATE_CHILDREN_DATA);\n          if (isDefined(value)) {\n            animateChildren = value;\n          }\n        }\n\n        // there is no need to continue traversing at this point\n        if (parentAnimationDetected && animateChildren === false) break;\n\n        if (!bodyNodeDetected) {\n          // we also need to ensure that the element is or will be a part of the body element\n          // otherwise it is pointless to even issue an animation to be rendered\n          bodyNodeDetected = (parentNode === bodyNode);\n        }\n\n        if (bodyNodeDetected && rootNodeDetected) {\n          // If both body and root have been found, any other checks are pointless,\n          // as no animation data should live outside the application\n          break;\n        }\n\n        if (!rootNodeDetected) {\n          // If `rootNode` is not detected, check if `parentNode` is pinned to another element\n          parentHost = jqLite.data(parentNode, NG_ANIMATE_PIN_DATA);\n          if (parentHost) {\n            // The pin target element becomes the next parent element\n            parentNode = getDomNode(parentHost);\n            continue;\n          }\n        }\n\n        parentNode = parentNode.parentNode;\n      }\n\n      var allowAnimation = (!parentAnimationDetected || animateChildren) && elementDisabled !== true;\n      return allowAnimation && rootNodeDetected && bodyNodeDetected;\n    }\n\n    function markElementAnimationState(node, state, details) {\n      details = details || {};\n      details.state = state;\n\n      node.setAttribute(NG_ANIMATE_ATTR_NAME, state);\n\n      var oldValue = activeAnimationsLookup.get(node);\n      var newValue = oldValue\n          ? extend(oldValue, details)\n          : details;\n      activeAnimationsLookup.set(node, newValue);\n    }\n  }];\n}];\n\n/** @this */\nvar $$AnimateCacheProvider = function() {\n\n  var KEY = '$$ngAnimateParentKey';\n  var parentCounter = 0;\n  var cache = Object.create(null);\n\n  this.$get = [function() {\n    return {\n      cacheKey: function(node, method, addClass, removeClass) {\n        var parentNode = node.parentNode;\n        var parentID = parentNode[KEY] || (parentNode[KEY] = ++parentCounter);\n        var parts = [parentID, method, node.getAttribute('class')];\n        if (addClass) {\n          parts.push(addClass);\n        }\n        if (removeClass) {\n          parts.push(removeClass);\n        }\n        return parts.join(' ');\n      },\n\n      containsCachedAnimationWithoutDuration: function(key) {\n        var entry = cache[key];\n\n        // nothing cached, so go ahead and animate\n        // otherwise it should be a valid animation\n        return (entry && !entry.isValid) || false;\n      },\n\n      flush: function() {\n        cache = Object.create(null);\n      },\n\n      count: function(key) {\n        var entry = cache[key];\n        return entry ? entry.total : 0;\n      },\n\n      get: function(key) {\n        var entry = cache[key];\n        return entry && entry.value;\n      },\n\n      put: function(key, value, isValid) {\n        if (!cache[key]) {\n          cache[key] = { total: 1, value: value, isValid: isValid };\n        } else {\n          cache[key].total++;\n          cache[key].value = value;\n        }\n      }\n    };\n  }];\n};\n\n/* exported $$AnimationProvider */\n\nvar $$AnimationProvider = ['$animateProvider', /** @this */ function($animateProvider) {\n  var NG_ANIMATE_REF_ATTR = 'ng-animate-ref';\n\n  var drivers = this.drivers = [];\n\n  var RUNNER_STORAGE_KEY = '$$animationRunner';\n  var PREPARE_CLASSES_KEY = '$$animatePrepareClasses';\n\n  function setRunner(element, runner) {\n    element.data(RUNNER_STORAGE_KEY, runner);\n  }\n\n  function removeRunner(element) {\n    element.removeData(RUNNER_STORAGE_KEY);\n  }\n\n  function getRunner(element) {\n    return element.data(RUNNER_STORAGE_KEY);\n  }\n\n  this.$get = ['$$jqLite', '$rootScope', '$injector', '$$AnimateRunner', '$$Map', '$$rAFScheduler', '$$animateCache',\n       function($$jqLite,   $rootScope,   $injector,   $$AnimateRunner,   $$Map,   $$rAFScheduler, $$animateCache) {\n\n    var animationQueue = [];\n    var applyAnimationClasses = applyAnimationClassesFactory($$jqLite);\n\n    function sortAnimations(animations) {\n      var tree = { children: [] };\n      var i, lookup = new $$Map();\n\n      // this is done first beforehand so that the map\n      // is filled with a list of the elements that will be animated\n      for (i = 0; i < animations.length; i++) {\n        var animation = animations[i];\n        lookup.set(animation.domNode, animations[i] = {\n          domNode: animation.domNode,\n          element: animation.element,\n          fn: animation.fn,\n          children: []\n        });\n      }\n\n      for (i = 0; i < animations.length; i++) {\n        processNode(animations[i]);\n      }\n\n      return flatten(tree);\n\n      function processNode(entry) {\n        if (entry.processed) return entry;\n        entry.processed = true;\n\n        var elementNode = entry.domNode;\n        var parentNode = elementNode.parentNode;\n        lookup.set(elementNode, entry);\n\n        var parentEntry;\n        while (parentNode) {\n          parentEntry = lookup.get(parentNode);\n          if (parentEntry) {\n            if (!parentEntry.processed) {\n              parentEntry = processNode(parentEntry);\n            }\n            break;\n          }\n          parentNode = parentNode.parentNode;\n        }\n\n        (parentEntry || tree).children.push(entry);\n        return entry;\n      }\n\n      function flatten(tree) {\n        var result = [];\n        var queue = [];\n        var i;\n\n        for (i = 0; i < tree.children.length; i++) {\n          queue.push(tree.children[i]);\n        }\n\n        var remainingLevelEntries = queue.length;\n        var nextLevelEntries = 0;\n        var row = [];\n\n        for (i = 0; i < queue.length; i++) {\n          var entry = queue[i];\n          if (remainingLevelEntries <= 0) {\n            remainingLevelEntries = nextLevelEntries;\n            nextLevelEntries = 0;\n            result.push(row);\n            row = [];\n          }\n          row.push(entry);\n          entry.children.forEach(function(childEntry) {\n            nextLevelEntries++;\n            queue.push(childEntry);\n          });\n          remainingLevelEntries--;\n        }\n\n        if (row.length) {\n          result.push(row);\n        }\n\n        return result;\n      }\n    }\n\n    // TODO(matsko): document the signature in a better way\n    return function(element, event, options) {\n      options = prepareAnimationOptions(options);\n      var isStructural = ['enter', 'move', 'leave'].indexOf(event) >= 0;\n\n      // there is no animation at the current moment, however\n      // these runner methods will get later updated with the\n      // methods leading into the driver's end/cancel methods\n      // for now they just stop the animation from starting\n      var runner = new $$AnimateRunner({\n        end: function() { close(); },\n        cancel: function() { close(true); }\n      });\n\n      if (!drivers.length) {\n        close();\n        return runner;\n      }\n\n      var classes = mergeClasses(element.attr('class'), mergeClasses(options.addClass, options.removeClass));\n      var tempClasses = options.tempClasses;\n      if (tempClasses) {\n        classes += ' ' + tempClasses;\n        options.tempClasses = null;\n      }\n\n      if (isStructural) {\n        element.data(PREPARE_CLASSES_KEY, 'ng-' + event + PREPARE_CLASS_SUFFIX);\n      }\n\n      setRunner(element, runner);\n\n      animationQueue.push({\n        // this data is used by the postDigest code and passed into\n        // the driver step function\n        element: element,\n        classes: classes,\n        event: event,\n        structural: isStructural,\n        options: options,\n        beforeStart: beforeStart,\n        close: close\n      });\n\n      element.on('$destroy', handleDestroyedElement);\n\n      // we only want there to be one function called within the post digest\n      // block. This way we can group animations for all the animations that\n      // were apart of the same postDigest flush call.\n      if (animationQueue.length > 1) return runner;\n\n      $rootScope.$$postDigest(function() {\n        var animations = [];\n        forEach(animationQueue, function(entry) {\n          // the element was destroyed early on which removed the runner\n          // form its storage. This means we can't animate this element\n          // at all and it already has been closed due to destruction.\n          if (getRunner(entry.element)) {\n            animations.push(entry);\n          } else {\n            entry.close();\n          }\n        });\n\n        // now any future animations will be in another postDigest\n        animationQueue.length = 0;\n\n        var groupedAnimations = groupAnimations(animations);\n        var toBeSortedAnimations = [];\n\n        forEach(groupedAnimations, function(animationEntry) {\n          var element = animationEntry.from ? animationEntry.from.element : animationEntry.element;\n          var extraClasses = options.addClass;\n\n          extraClasses = (extraClasses ? (extraClasses + ' ') : '') + NG_ANIMATE_CLASSNAME;\n          var cacheKey = $$animateCache.cacheKey(element[0], animationEntry.event, extraClasses, options.removeClass);\n\n          toBeSortedAnimations.push({\n            element: element,\n            domNode: getDomNode(element),\n            fn: function triggerAnimationStart() {\n              var startAnimationFn, closeFn = animationEntry.close;\n\n              // in the event that we've cached the animation status for this element\n              // and it's in fact an invalid animation (something that has duration = 0)\n              // then we should skip all the heavy work from here on\n              if ($$animateCache.containsCachedAnimationWithoutDuration(cacheKey)) {\n                closeFn();\n                return;\n              }\n\n              // it's important that we apply the `ng-animate` CSS class and the\n              // temporary classes before we do any driver invoking since these\n              // CSS classes may be required for proper CSS detection.\n              animationEntry.beforeStart();\n\n              // in the event that the element was removed before the digest runs or\n              // during the RAF sequencing then we should not trigger the animation.\n              var targetElement = animationEntry.anchors\n                  ? (animationEntry.from.element || animationEntry.to.element)\n                  : animationEntry.element;\n\n              if (getRunner(targetElement)) {\n                var operation = invokeFirstDriver(animationEntry);\n                if (operation) {\n                  startAnimationFn = operation.start;\n                }\n              }\n\n              if (!startAnimationFn) {\n                closeFn();\n              } else {\n                var animationRunner = startAnimationFn();\n                animationRunner.done(function(status) {\n                  closeFn(!status);\n                });\n                updateAnimationRunners(animationEntry, animationRunner);\n              }\n            }\n          });\n        });\n\n        // we need to sort each of the animations in order of parent to child\n        // relationships. This ensures that the child classes are applied at the\n        // right time.\n        var finalAnimations = sortAnimations(toBeSortedAnimations);\n        for (var i = 0; i < finalAnimations.length; i++) {\n          var innerArray = finalAnimations[i];\n          for (var j = 0; j < innerArray.length; j++) {\n            var entry = innerArray[j];\n            var element = entry.element;\n\n            // the RAFScheduler code only uses functions\n            finalAnimations[i][j] = entry.fn;\n\n            // the first row of elements shouldn't have a prepare-class added to them\n            // since the elements are at the top of the animation hierarchy and they\n            // will be applied without a RAF having to pass...\n            if (i === 0) {\n              element.removeData(PREPARE_CLASSES_KEY);\n              continue;\n            }\n\n            var prepareClassName = element.data(PREPARE_CLASSES_KEY);\n            if (prepareClassName) {\n              $$jqLite.addClass(element, prepareClassName);\n            }\n          }\n        }\n\n        $$rAFScheduler(finalAnimations);\n      });\n\n      return runner;\n\n      // TODO(matsko): change to reference nodes\n      function getAnchorNodes(node) {\n        var SELECTOR = '[' + NG_ANIMATE_REF_ATTR + ']';\n        var items = node.hasAttribute(NG_ANIMATE_REF_ATTR)\n              ? [node]\n              : node.querySelectorAll(SELECTOR);\n        var anchors = [];\n        forEach(items, function(node) {\n          var attr = node.getAttribute(NG_ANIMATE_REF_ATTR);\n          if (attr && attr.length) {\n            anchors.push(node);\n          }\n        });\n        return anchors;\n      }\n\n      function groupAnimations(animations) {\n        var preparedAnimations = [];\n        var refLookup = {};\n        forEach(animations, function(animation, index) {\n          var element = animation.element;\n          var node = getDomNode(element);\n          var event = animation.event;\n          var enterOrMove = ['enter', 'move'].indexOf(event) >= 0;\n          var anchorNodes = animation.structural ? getAnchorNodes(node) : [];\n\n          if (anchorNodes.length) {\n            var direction = enterOrMove ? 'to' : 'from';\n\n            forEach(anchorNodes, function(anchor) {\n              var key = anchor.getAttribute(NG_ANIMATE_REF_ATTR);\n              refLookup[key] = refLookup[key] || {};\n              refLookup[key][direction] = {\n                animationID: index,\n                element: jqLite(anchor)\n              };\n            });\n          } else {\n            preparedAnimations.push(animation);\n          }\n        });\n\n        var usedIndicesLookup = {};\n        var anchorGroups = {};\n        forEach(refLookup, function(operations, key) {\n          var from = operations.from;\n          var to = operations.to;\n\n          if (!from || !to) {\n            // only one of these is set therefore we can't have an\n            // anchor animation since all three pieces are required\n            var index = from ? from.animationID : to.animationID;\n            var indexKey = index.toString();\n            if (!usedIndicesLookup[indexKey]) {\n              usedIndicesLookup[indexKey] = true;\n              preparedAnimations.push(animations[index]);\n            }\n            return;\n          }\n\n          var fromAnimation = animations[from.animationID];\n          var toAnimation = animations[to.animationID];\n          var lookupKey = from.animationID.toString();\n          if (!anchorGroups[lookupKey]) {\n            var group = anchorGroups[lookupKey] = {\n              structural: true,\n              beforeStart: function() {\n                fromAnimation.beforeStart();\n                toAnimation.beforeStart();\n              },\n              close: function() {\n                fromAnimation.close();\n                toAnimation.close();\n              },\n              classes: cssClassesIntersection(fromAnimation.classes, toAnimation.classes),\n              from: fromAnimation,\n              to: toAnimation,\n              anchors: [] // TODO(matsko): change to reference nodes\n            };\n\n            // the anchor animations require that the from and to elements both have at least\n            // one shared CSS class which effectively marries the two elements together to use\n            // the same animation driver and to properly sequence the anchor animation.\n            if (group.classes.length) {\n              preparedAnimations.push(group);\n            } else {\n              preparedAnimations.push(fromAnimation);\n              preparedAnimations.push(toAnimation);\n            }\n          }\n\n          anchorGroups[lookupKey].anchors.push({\n            'out': from.element, 'in': to.element\n          });\n        });\n\n        return preparedAnimations;\n      }\n\n      function cssClassesIntersection(a,b) {\n        a = a.split(' ');\n        b = b.split(' ');\n        var matches = [];\n\n        for (var i = 0; i < a.length; i++) {\n          var aa = a[i];\n          if (aa.substring(0,3) === 'ng-') continue;\n\n          for (var j = 0; j < b.length; j++) {\n            if (aa === b[j]) {\n              matches.push(aa);\n              break;\n            }\n          }\n        }\n\n        return matches.join(' ');\n      }\n\n      function invokeFirstDriver(animationDetails) {\n        // we loop in reverse order since the more general drivers (like CSS and JS)\n        // may attempt more elements, but custom drivers are more particular\n        for (var i = drivers.length - 1; i >= 0; i--) {\n          var driverName = drivers[i];\n          var factory = $injector.get(driverName);\n          var driver = factory(animationDetails);\n          if (driver) {\n            return driver;\n          }\n        }\n      }\n\n      function beforeStart() {\n        tempClasses = (tempClasses ? (tempClasses + ' ') : '') + NG_ANIMATE_CLASSNAME;\n        $$jqLite.addClass(element, tempClasses);\n\n        var prepareClassName = element.data(PREPARE_CLASSES_KEY);\n        if (prepareClassName) {\n          $$jqLite.removeClass(element, prepareClassName);\n          prepareClassName = null;\n        }\n      }\n\n      function updateAnimationRunners(animation, newRunner) {\n        if (animation.from && animation.to) {\n          update(animation.from.element);\n          update(animation.to.element);\n        } else {\n          update(animation.element);\n        }\n\n        function update(element) {\n          var runner = getRunner(element);\n          if (runner) runner.setHost(newRunner);\n        }\n      }\n\n      function handleDestroyedElement() {\n        var runner = getRunner(element);\n        if (runner && (event !== 'leave' || !options.$$domOperationFired)) {\n          runner.end();\n        }\n      }\n\n      function close(rejected) {\n        element.off('$destroy', handleDestroyedElement);\n        removeRunner(element);\n\n        applyAnimationClasses(element, options);\n        applyAnimationStyles(element, options);\n        options.domOperation();\n\n        if (tempClasses) {\n          $$jqLite.removeClass(element, tempClasses);\n        }\n\n        runner.complete(!rejected);\n      }\n    };\n  }];\n}];\n\n/**\n * @ngdoc directive\n * @name ngAnimateSwap\n * @restrict A\n * @scope\n *\n * @description\n *\n * ngAnimateSwap is a animation-oriented directive that allows for the container to\n * be removed and entered in whenever the associated expression changes. A\n * common usecase for this directive is a rotating banner or slider component which\n * contains one image being present at a time. When the active image changes\n * then the old image will perform a `leave` animation and the new element\n * will be inserted via an `enter` animation.\n *\n * @animations\n * | Animation                        | Occurs                               |\n * |----------------------------------|--------------------------------------|\n * | {@link ng.$animate#enter enter}  | when the new element is inserted to the DOM  |\n * | {@link ng.$animate#leave leave}  | when the old element is removed from the DOM |\n *\n * @example\n * <example name=\"ngAnimateSwap-directive\" module=\"ngAnimateSwapExample\"\n *          deps=\"angular-animate.js\"\n *          animations=\"true\" fixBase=\"true\">\n *   <file name=\"index.html\">\n *     <div class=\"container\" ng-controller=\"AppCtrl\">\n *       <div ng-animate-swap=\"number\" class=\"cell swap-animation\" ng-class=\"colorClass(number)\">\n *         {{ number }}\n *       </div>\n *     </div>\n *   </file>\n *   <file name=\"script.js\">\n *     angular.module('ngAnimateSwapExample', ['ngAnimate'])\n *       .controller('AppCtrl', ['$scope', '$interval', function($scope, $interval) {\n *         $scope.number = 0;\n *         $interval(function() {\n *           $scope.number++;\n *         }, 1000);\n *\n *         var colors = ['red','blue','green','yellow','orange'];\n *         $scope.colorClass = function(number) {\n *           return colors[number % colors.length];\n *         };\n *       }]);\n *   </file>\n *  <file name=\"animations.css\">\n *  .container {\n *    height:250px;\n *    width:250px;\n *    position:relative;\n *    overflow:hidden;\n *    border:2px solid black;\n *  }\n *  .container .cell {\n *    font-size:150px;\n *    text-align:center;\n *    line-height:250px;\n *    position:absolute;\n *    top:0;\n *    left:0;\n *    right:0;\n *    border-bottom:2px solid black;\n *  }\n *  .swap-animation.ng-enter, .swap-animation.ng-leave {\n *    transition:0.5s linear all;\n *  }\n *  .swap-animation.ng-enter {\n *    top:-250px;\n *  }\n *  .swap-animation.ng-enter-active {\n *    top:0px;\n *  }\n *  .swap-animation.ng-leave {\n *    top:0px;\n *  }\n *  .swap-animation.ng-leave-active {\n *    top:250px;\n *  }\n *  .red { background:red; }\n *  .green { background:green; }\n *  .blue { background:blue; }\n *  .yellow { background:yellow; }\n *  .orange { background:orange; }\n *  </file>\n * </example>\n */\nvar ngAnimateSwapDirective = ['$animate', function($animate) {\n  return {\n    restrict: 'A',\n    transclude: 'element',\n    terminal: true,\n    priority: 550, // We use 550 here to ensure that the directive is caught before others,\n                   // but after `ngIf` (at priority 600).\n    link: function(scope, $element, attrs, ctrl, $transclude) {\n      var previousElement, previousScope;\n      scope.$watchCollection(attrs.ngAnimateSwap || attrs['for'], function(value) {\n        if (previousElement) {\n          $animate.leave(previousElement);\n        }\n        if (previousScope) {\n          previousScope.$destroy();\n          previousScope = null;\n        }\n        if (value || value === 0) {\n          $transclude(function(clone, childScope) {\n            previousElement = clone;\n            previousScope = childScope;\n            $animate.enter(clone, null, $element);\n          });\n        }\n      });\n    }\n  };\n}];\n\n/**\n * @ngdoc module\n * @name ngAnimate\n * @description\n *\n * The `ngAnimate` module provides support for CSS-based animations (keyframes and transitions) as well as JavaScript-based animations via\n * callback hooks. Animations are not enabled by default, however, by including `ngAnimate` the animation hooks are enabled for an AngularJS app.\n *\n * ## Usage\n * Simply put, there are two ways to make use of animations when ngAnimate is used: by using **CSS** and **JavaScript**. The former works purely based\n * using CSS (by using matching CSS selectors/styles) and the latter triggers animations that are registered via `module.animation()`. For\n * both CSS and JS animations the sole requirement is to have a matching `CSS class` that exists both in the registered animation and within\n * the HTML element that the animation will be triggered on.\n *\n * ## Directive Support\n * The following directives are \"animation aware\":\n *\n * | Directive                                                                     | Supported Animations                                                      |\n * |-------------------------------------------------------------------------------|---------------------------------------------------------------------------|\n * | {@link ng.directive:form#animations form / ngForm}                            | add and remove ({@link ng.directive:form#css-classes various classes})    |\n * | {@link ngAnimate.directive:ngAnimateSwap#animations ngAnimateSwap}            | enter and leave                                                           |\n * | {@link ng.directive:ngClass#animations ngClass / {{class&#125;&#8203;&#125;}  | add and remove                                                            |\n * | {@link ng.directive:ngClassEven#animations ngClassEven}                       | add and remove                                                            |\n * | {@link ng.directive:ngClassOdd#animations ngClassOdd}                         | add and remove                                                            |\n * | {@link ng.directive:ngHide#animations ngHide}                                 | add and remove (the `ng-hide` class)                                      |\n * | {@link ng.directive:ngIf#animations ngIf}                                     | enter and leave                                                           |\n * | {@link ng.directive:ngInclude#animations ngInclude}                           | enter and leave                                                           |\n * | {@link module:ngMessages#animations ngMessage / ngMessageExp}                 | enter and leave                                                           |\n * | {@link module:ngMessages#animations ngMessages}                               | add and remove (the `ng-active`/`ng-inactive` classes)                    |\n * | {@link ng.directive:ngModel#animations ngModel}                               | add and remove ({@link ng.directive:ngModel#css-classes various classes}) |\n * | {@link ng.directive:ngRepeat#animations ngRepeat}                             | enter, leave, and move                                                    |\n * | {@link ng.directive:ngShow#animations ngShow}                                 | add and remove (the `ng-hide` class)                                      |\n * | {@link ng.directive:ngSwitch#animations ngSwitch}                             | enter and leave                                                           |\n * | {@link ngRoute.directive:ngView#animations ngView}                            | enter and leave                                                           |\n *\n * (More information can be found by visiting the documentation associated with each directive.)\n *\n * For a full breakdown of the steps involved during each animation event, refer to the\n * {@link ng.$animate `$animate` API docs}.\n *\n * ## CSS-based Animations\n *\n * CSS-based animations with ngAnimate are unique since they require no JavaScript code at all. By using a CSS class that we reference between our HTML\n * and CSS code we can create an animation that will be picked up by AngularJS when an underlying directive performs an operation.\n *\n * The example below shows how an `enter` animation can be made possible on an element using `ng-if`:\n *\n * ```html\n * <div ng-if=\"bool\" class=\"fade\">\n *    Fade me in out\n * </div>\n * <button ng-click=\"bool=true\">Fade In!</button>\n * <button ng-click=\"bool=false\">Fade Out!</button>\n * ```\n *\n * Notice the CSS class **fade**? We can now create the CSS transition code that references this class:\n *\n * ```css\n * /&#42; The starting CSS styles for the enter animation &#42;/\n * .fade.ng-enter {\n *   transition:0.5s linear all;\n *   opacity:0;\n * }\n *\n * /&#42; The finishing CSS styles for the enter animation &#42;/\n * .fade.ng-enter.ng-enter-active {\n *   opacity:1;\n * }\n * ```\n *\n * The key thing to remember here is that, depending on the animation event (which each of the directives above trigger depending on what's going on) two\n * generated CSS classes will be applied to the element; in the example above we have `.ng-enter` and `.ng-enter-active`. For CSS transitions, the transition\n * code **must** be defined within the starting CSS class (in this case `.ng-enter`). The destination class is what the transition will animate towards.\n *\n * If for example we wanted to create animations for `leave` and `move` (ngRepeat triggers move) then we can do so using the same CSS naming conventions:\n *\n * ```css\n * /&#42; now the element will fade out before it is removed from the DOM &#42;/\n * .fade.ng-leave {\n *   transition:0.5s linear all;\n *   opacity:1;\n * }\n * .fade.ng-leave.ng-leave-active {\n *   opacity:0;\n * }\n * ```\n *\n * We can also make use of **CSS Keyframes** by referencing the keyframe animation within the starting CSS class:\n *\n * ```css\n * /&#42; there is no need to define anything inside of the destination\n * CSS class since the keyframe will take charge of the animation &#42;/\n * .fade.ng-leave {\n *   animation: my_fade_animation 0.5s linear;\n *   -webkit-animation: my_fade_animation 0.5s linear;\n * }\n *\n * @keyframes my_fade_animation {\n *   from { opacity:1; }\n *   to { opacity:0; }\n * }\n *\n * @-webkit-keyframes my_fade_animation {\n *   from { opacity:1; }\n *   to { opacity:0; }\n * }\n * ```\n *\n * Feel free also mix transitions and keyframes together as well as any other CSS classes on the same element.\n *\n * ### CSS Class-based Animations\n *\n * Class-based animations (animations that are triggered via `ngClass`, `ngShow`, `ngHide` and some other directives) have a slightly different\n * naming convention. Class-based animations are basic enough that a standard transition or keyframe can be referenced on the class being added\n * and removed.\n *\n * For example if we wanted to do a CSS animation for `ngHide` then we place an animation on the `.ng-hide` CSS class:\n *\n * ```html\n * <div ng-show=\"bool\" class=\"fade\">\n *   Show and hide me\n * </div>\n * <button ng-click=\"bool=!bool\">Toggle</button>\n *\n * <style>\n * .fade.ng-hide {\n *   transition:0.5s linear all;\n *   opacity:0;\n * }\n * </style>\n * ```\n *\n * All that is going on here with ngShow/ngHide behind the scenes is the `.ng-hide` class is added/removed (when the hidden state is valid). Since\n * ngShow and ngHide are animation aware then we can match up a transition and ngAnimate handles the rest.\n *\n * In addition the addition and removal of the CSS class, ngAnimate also provides two helper methods that we can use to further decorate the animation\n * with CSS styles.\n *\n * ```html\n * <div ng-class=\"{on:onOff}\" class=\"highlight\">\n *   Highlight this box\n * </div>\n * <button ng-click=\"onOff=!onOff\">Toggle</button>\n *\n * <style>\n * .highlight {\n *   transition:0.5s linear all;\n * }\n * .highlight.on-add {\n *   background:white;\n * }\n * .highlight.on {\n *   background:yellow;\n * }\n * .highlight.on-remove {\n *   background:black;\n * }\n * </style>\n * ```\n *\n * We can also make use of CSS keyframes by placing them within the CSS classes.\n *\n *\n * ### CSS Staggering Animations\n * A Staggering animation is a collection of animations that are issued with a slight delay in between each successive operation resulting in a\n * curtain-like effect. The ngAnimate module (versions >=1.2) supports staggering animations and the stagger effect can be\n * performed by creating a **ng-EVENT-stagger** CSS class and attaching that class to the base CSS class used for\n * the animation. The style property expected within the stagger class can either be a **transition-delay** or an\n * **animation-delay** property (or both if your animation contains both transitions and keyframe animations).\n *\n * ```css\n * .my-animation.ng-enter {\n *   /&#42; standard transition code &#42;/\n *   transition: 1s linear all;\n *   opacity:0;\n * }\n * .my-animation.ng-enter-stagger {\n *   /&#42; this will have a 100ms delay between each successive leave animation &#42;/\n *   transition-delay: 0.1s;\n *\n *   /&#42; As of 1.4.4, this must always be set: it signals ngAnimate\n *     to not accidentally inherit a delay property from another CSS class &#42;/\n *   transition-duration: 0s;\n *\n *   /&#42; if you are using animations instead of transitions you should configure as follows:\n *     animation-delay: 0.1s;\n *     animation-duration: 0s; &#42;/\n * }\n * .my-animation.ng-enter.ng-enter-active {\n *   /&#42; standard transition styles &#42;/\n *   opacity:1;\n * }\n * ```\n *\n * Staggering animations work by default in ngRepeat (so long as the CSS class is defined). Outside of ngRepeat, to use staggering animations\n * on your own, they can be triggered by firing multiple calls to the same event on $animate. However, the restrictions surrounding this\n * are that each of the elements must have the same CSS className value as well as the same parent element. A stagger operation\n * will also be reset if one or more animation frames have passed since the multiple calls to `$animate` were fired.\n *\n * The following code will issue the **ng-leave-stagger** event on the element provided:\n *\n * ```js\n * var kids = parent.children();\n *\n * $animate.leave(kids[0]); //stagger index=0\n * $animate.leave(kids[1]); //stagger index=1\n * $animate.leave(kids[2]); //stagger index=2\n * $animate.leave(kids[3]); //stagger index=3\n * $animate.leave(kids[4]); //stagger index=4\n *\n * window.requestAnimationFrame(function() {\n *   //stagger has reset itself\n *   $animate.leave(kids[5]); //stagger index=0\n *   $animate.leave(kids[6]); //stagger index=1\n *\n *   $scope.$digest();\n * });\n * ```\n *\n * Stagger animations are currently only supported within CSS-defined animations.\n *\n * ### The `ng-animate` CSS class\n *\n * When ngAnimate is animating an element it will apply the `ng-animate` CSS class to the element for the duration of the animation.\n * This is a temporary CSS class and it will be removed once the animation is over (for both JavaScript and CSS-based animations).\n *\n * Therefore, animations can be applied to an element using this temporary class directly via CSS.\n *\n * ```css\n * .zipper.ng-animate {\n *   transition:0.5s linear all;\n * }\n * .zipper.ng-enter {\n *   opacity:0;\n * }\n * .zipper.ng-enter.ng-enter-active {\n *   opacity:1;\n * }\n * .zipper.ng-leave {\n *   opacity:1;\n * }\n * .zipper.ng-leave.ng-leave-active {\n *   opacity:0;\n * }\n * ```\n *\n * (Note that the `ng-animate` CSS class is reserved and it cannot be applied on an element directly since ngAnimate will always remove\n * the CSS class once an animation has completed.)\n *\n *\n * ### The `ng-[event]-prepare` class\n *\n * This is a special class that can be used to prevent unwanted flickering / flash of content before\n * the actual animation starts. The class is added as soon as an animation is initialized, but removed\n * before the actual animation starts (after waiting for a $digest).\n * It is also only added for *structural* animations (`enter`, `move`, and `leave`).\n *\n * In practice, flickering can appear when nesting elements with structural animations such as `ngIf`\n * into elements that have class-based animations such as `ngClass`.\n *\n * ```html\n * <div ng-class=\"{red: myProp}\">\n *   <div ng-class=\"{blue: myProp}\">\n *     <div class=\"message\" ng-if=\"myProp\"></div>\n *   </div>\n * </div>\n * ```\n *\n * It is possible that during the `enter` animation, the `.message` div will be briefly visible before it starts animating.\n * In that case, you can add styles to the CSS that make sure the element stays hidden before the animation starts:\n *\n * ```css\n * .message.ng-enter-prepare {\n *   opacity: 0;\n * }\n * ```\n *\n * ### Animating between value changes\n *\n * Sometimes you need to animate between different expression states, whose values\n * don't necessary need to be known or referenced in CSS styles.\n * Unless possible with another {@link ngAnimate#directive-support \"animation aware\" directive},\n * that specific use case can always be covered with {@link ngAnimate.directive:ngAnimateSwap} as\n * can be seen in {@link ngAnimate.directive:ngAnimateSwap#examples this example}.\n *\n * Note that {@link ngAnimate.directive:ngAnimateSwap} is a *structural directive*, which means it\n * creates a new instance of the element (including any other/child directives it may have) and\n * links it to a new scope every time *swap* happens. In some cases this might not be desirable\n * (e.g. for performance reasons, or when you wish to retain internal state on the original\n * element instance).\n *\n * ## JavaScript-based Animations\n *\n * ngAnimate also allows for animations to be consumed by JavaScript code. The approach is similar to CSS-based animations (where there is a shared\n * CSS class that is referenced in our HTML code) but in addition we need to register the JavaScript animation on the module. By making use of the\n * `module.animation()` module function we can register the animation.\n *\n * Let's see an example of a enter/leave animation using `ngRepeat`:\n *\n * ```html\n * <div ng-repeat=\"item in items\" class=\"slide\">\n *   {{ item }}\n * </div>\n * ```\n *\n * See the **slide** CSS class? Let's use that class to define an animation that we'll structure in our module code by using `module.animation`:\n *\n * ```js\n * myModule.animation('.slide', [function() {\n *   return {\n *     // make note that other events (like addClass/removeClass)\n *     // have different function input parameters\n *     enter: function(element, doneFn) {\n *       jQuery(element).fadeIn(1000, doneFn);\n *\n *       // remember to call doneFn so that AngularJS\n *       // knows that the animation has concluded\n *     },\n *\n *     move: function(element, doneFn) {\n *       jQuery(element).fadeIn(1000, doneFn);\n *     },\n *\n *     leave: function(element, doneFn) {\n *       jQuery(element).fadeOut(1000, doneFn);\n *     }\n *   }\n * }]);\n * ```\n *\n * The nice thing about JS-based animations is that we can inject other services and make use of advanced animation libraries such as\n * greensock.js and velocity.js.\n *\n * If our animation code class-based (meaning that something like `ngClass`, `ngHide` and `ngShow` triggers it) then we can still define\n * our animations inside of the same registered animation, however, the function input arguments are a bit different:\n *\n * ```html\n * <div ng-class=\"color\" class=\"colorful\">\n *   this box is moody\n * </div>\n * <button ng-click=\"color='red'\">Change to red</button>\n * <button ng-click=\"color='blue'\">Change to blue</button>\n * <button ng-click=\"color='green'\">Change to green</button>\n * ```\n *\n * ```js\n * myModule.animation('.colorful', [function() {\n *   return {\n *     addClass: function(element, className, doneFn) {\n *       // do some cool animation and call the doneFn\n *     },\n *     removeClass: function(element, className, doneFn) {\n *       // do some cool animation and call the doneFn\n *     },\n *     setClass: function(element, addedClass, removedClass, doneFn) {\n *       // do some cool animation and call the doneFn\n *     }\n *   }\n * }]);\n * ```\n *\n * ## CSS + JS Animations Together\n *\n * AngularJS 1.4 and higher has taken steps to make the amalgamation of CSS and JS animations more flexible. However, unlike earlier versions of AngularJS,\n * defining CSS and JS animations to work off of the same CSS class will not work anymore. Therefore the example below will only result in **JS animations taking\n * charge of the animation**:\n *\n * ```html\n * <div ng-if=\"bool\" class=\"slide\">\n *   Slide in and out\n * </div>\n * ```\n *\n * ```js\n * myModule.animation('.slide', [function() {\n *   return {\n *     enter: function(element, doneFn) {\n *       jQuery(element).slideIn(1000, doneFn);\n *     }\n *   }\n * }]);\n * ```\n *\n * ```css\n * .slide.ng-enter {\n *   transition:0.5s linear all;\n *   transform:translateY(-100px);\n * }\n * .slide.ng-enter.ng-enter-active {\n *   transform:translateY(0);\n * }\n * ```\n *\n * Does this mean that CSS and JS animations cannot be used together? Do JS-based animations always have higher priority? We can make up for the\n * lack of CSS animations by using the `$animateCss` service to trigger our own tweaked-out, CSS-based animations directly from\n * our own JS-based animation code:\n *\n * ```js\n * myModule.animation('.slide', ['$animateCss', function($animateCss) {\n *   return {\n *     enter: function(element) {\n*        // this will trigger `.slide.ng-enter` and `.slide.ng-enter-active`.\n *       return $animateCss(element, {\n *         event: 'enter',\n *         structural: true\n *       });\n *     }\n *   }\n * }]);\n * ```\n *\n * The nice thing here is that we can save bandwidth by sticking to our CSS-based animation code and we don't need to rely on a 3rd-party animation framework.\n *\n * The `$animateCss` service is very powerful since we can feed in all kinds of extra properties that will be evaluated and fed into a CSS transition or\n * keyframe animation. For example if we wanted to animate the height of an element while adding and removing classes then we can do so by providing that\n * data into `$animateCss` directly:\n *\n * ```js\n * myModule.animation('.slide', ['$animateCss', function($animateCss) {\n *   return {\n *     enter: function(element) {\n *       return $animateCss(element, {\n *         event: 'enter',\n *         structural: true,\n *         addClass: 'maroon-setting',\n *         from: { height:0 },\n *         to: { height: 200 }\n *       });\n *     }\n *   }\n * }]);\n * ```\n *\n * Now we can fill in the rest via our transition CSS code:\n *\n * ```css\n * /&#42; the transition tells ngAnimate to make the animation happen &#42;/\n * .slide.ng-enter { transition:0.5s linear all; }\n *\n * /&#42; this extra CSS class will be absorbed into the transition\n * since the $animateCss code is adding the class &#42;/\n * .maroon-setting { background:red; }\n * ```\n *\n * And `$animateCss` will figure out the rest. Just make sure to have the `done()` callback fire the `doneFn` function to signal when the animation is over.\n *\n * To learn more about what's possible be sure to visit the {@link ngAnimate.$animateCss $animateCss service}.\n *\n * ## Animation Anchoring (via `ng-animate-ref`)\n *\n * ngAnimate in AngularJS 1.4 comes packed with the ability to cross-animate elements between\n * structural areas of an application (like views) by pairing up elements using an attribute\n * called `ng-animate-ref`.\n *\n * Let's say for example we have two views that are managed by `ng-view` and we want to show\n * that there is a relationship between two components situated in within these views. By using the\n * `ng-animate-ref` attribute we can identify that the two components are paired together and we\n * can then attach an animation, which is triggered when the view changes.\n *\n * Say for example we have the following template code:\n *\n * ```html\n * <!-- index.html -->\n * <div ng-view class=\"view-animation\">\n * </div>\n *\n * <!-- home.html -->\n * <a href=\"#/banner-page\">\n *   <img src=\"./banner.jpg\" class=\"banner\" ng-animate-ref=\"banner\">\n * </a>\n *\n * <!-- banner-page.html -->\n * <img src=\"./banner.jpg\" class=\"banner\" ng-animate-ref=\"banner\">\n * ```\n *\n * Now, when the view changes (once the link is clicked), ngAnimate will examine the\n * HTML contents to see if there is a match reference between any components in the view\n * that is leaving and the view that is entering. It will scan both the view which is being\n * removed (leave) and inserted (enter) to see if there are any paired DOM elements that\n * contain a matching ref value.\n *\n * The two images match since they share the same ref value. ngAnimate will now create a\n * transport element (which is a clone of the first image element) and it will then attempt\n * to animate to the position of the second image element in the next view. For the animation to\n * work a special CSS class called `ng-anchor` will be added to the transported element.\n *\n * We can now attach a transition onto the `.banner.ng-anchor` CSS class and then\n * ngAnimate will handle the entire transition for us as well as the addition and removal of\n * any changes of CSS classes between the elements:\n *\n * ```css\n * .banner.ng-anchor {\n *   /&#42; this animation will last for 1 second since there are\n *          two phases to the animation (an `in` and an `out` phase) &#42;/\n *   transition:0.5s linear all;\n * }\n * ```\n *\n * We also **must** include animations for the views that are being entered and removed\n * (otherwise anchoring wouldn't be possible since the new view would be inserted right away).\n *\n * ```css\n * .view-animation.ng-enter, .view-animation.ng-leave {\n *   transition:0.5s linear all;\n *   position:fixed;\n *   left:0;\n *   top:0;\n *   width:100%;\n * }\n * .view-animation.ng-enter {\n *   transform:translateX(100%);\n * }\n * .view-animation.ng-leave,\n * .view-animation.ng-enter.ng-enter-active {\n *   transform:translateX(0%);\n * }\n * .view-animation.ng-leave.ng-leave-active {\n *   transform:translateX(-100%);\n * }\n * ```\n *\n * Now we can jump back to the anchor animation. When the animation happens, there are two stages that occur:\n * an `out` and an `in` stage. The `out` stage happens first and that is when the element is animated away\n * from its origin. Once that animation is over then the `in` stage occurs which animates the\n * element to its destination. The reason why there are two animations is to give enough time\n * for the enter animation on the new element to be ready.\n *\n * The example above sets up a transition for both the in and out phases, but we can also target the out or\n * in phases directly via `ng-anchor-out` and `ng-anchor-in`.\n *\n * ```css\n * .banner.ng-anchor-out {\n *   transition: 0.5s linear all;\n *\n *   /&#42; the scale will be applied during the out animation,\n *          but will be animated away when the in animation runs &#42;/\n *   transform: scale(1.2);\n * }\n *\n * .banner.ng-anchor-in {\n *   transition: 1s linear all;\n * }\n * ```\n *\n *\n *\n *\n * ### Anchoring Demo\n *\n  <example module=\"anchoringExample\"\n           name=\"anchoringExample\"\n           id=\"anchoringExample\"\n           deps=\"angular-animate.js;angular-route.js\"\n           animations=\"true\">\n    <file name=\"index.html\">\n      <a href=\"#!/\">Home</a>\n      <hr />\n      <div class=\"view-container\">\n        <div ng-view class=\"view\"></div>\n      </div>\n    </file>\n    <file name=\"script.js\">\n      angular.module('anchoringExample', ['ngAnimate', 'ngRoute'])\n        .config(['$routeProvider', function($routeProvider) {\n          $routeProvider.when('/', {\n            templateUrl: 'home.html',\n            controller: 'HomeController as home'\n          });\n          $routeProvider.when('/profile/:id', {\n            templateUrl: 'profile.html',\n            controller: 'ProfileController as profile'\n          });\n        }])\n        .run(['$rootScope', function($rootScope) {\n          $rootScope.records = [\n            { id: 1, title: 'Miss Beulah Roob' },\n            { id: 2, title: 'Trent Morissette' },\n            { id: 3, title: 'Miss Ava Pouros' },\n            { id: 4, title: 'Rod Pouros' },\n            { id: 5, title: 'Abdul Rice' },\n            { id: 6, title: 'Laurie Rutherford Sr.' },\n            { id: 7, title: 'Nakia McLaughlin' },\n            { id: 8, title: 'Jordon Blanda DVM' },\n            { id: 9, title: 'Rhoda Hand' },\n            { id: 10, title: 'Alexandrea Sauer' }\n          ];\n        }])\n        .controller('HomeController', [function() {\n          //empty\n        }])\n        .controller('ProfileController', ['$rootScope', '$routeParams',\n            function ProfileController($rootScope, $routeParams) {\n          var index = parseInt($routeParams.id, 10);\n          var record = $rootScope.records[index - 1];\n\n          this.title = record.title;\n          this.id = record.id;\n        }]);\n    </file>\n    <file name=\"home.html\">\n      <h2>Welcome to the home page</h1>\n      <p>Please click on an element</p>\n      <a class=\"record\"\n         ng-href=\"#!/profile/{{ record.id }}\"\n         ng-animate-ref=\"{{ record.id }}\"\n         ng-repeat=\"record in records\">\n        {{ record.title }}\n      </a>\n    </file>\n    <file name=\"profile.html\">\n      <div class=\"profile record\" ng-animate-ref=\"{{ profile.id }}\">\n        {{ profile.title }}\n      </div>\n    </file>\n    <file name=\"animations.css\">\n      .record {\n        display:block;\n        font-size:20px;\n      }\n      .profile {\n        background:black;\n        color:white;\n        font-size:100px;\n      }\n      .view-container {\n        position:relative;\n      }\n      .view-container > .view.ng-animate {\n        position:absolute;\n        top:0;\n        left:0;\n        width:100%;\n        min-height:500px;\n      }\n      .view.ng-enter, .view.ng-leave,\n      .record.ng-anchor {\n        transition:0.5s linear all;\n      }\n      .view.ng-enter {\n        transform:translateX(100%);\n      }\n      .view.ng-enter.ng-enter-active, .view.ng-leave {\n        transform:translateX(0%);\n      }\n      .view.ng-leave.ng-leave-active {\n        transform:translateX(-100%);\n      }\n      .record.ng-anchor-out {\n        background:red;\n      }\n    </file>\n  </example>\n *\n * ### How is the element transported?\n *\n * When an anchor animation occurs, ngAnimate will clone the starting element and position it exactly where the starting\n * element is located on screen via absolute positioning. The cloned element will be placed inside of the root element\n * of the application (where ng-app was defined) and all of the CSS classes of the starting element will be applied. The\n * element will then animate into the `out` and `in` animations and will eventually reach the coordinates and match\n * the dimensions of the destination element. During the entire animation a CSS class of `.ng-animate-shim` will be applied\n * to both the starting and destination elements in order to hide them from being visible (the CSS styling for the class\n * is: `visibility:hidden`). Once the anchor reaches its destination then it will be removed and the destination element\n * will become visible since the shim class will be removed.\n *\n * ### How is the morphing handled?\n *\n * CSS Anchoring relies on transitions and keyframes and the internal code is intelligent enough to figure out\n * what CSS classes differ between the starting element and the destination element. These different CSS classes\n * will be added/removed on the anchor element and a transition will be applied (the transition that is provided\n * in the anchor class). Long story short, ngAnimate will figure out what classes to add and remove which will\n * make the transition of the element as smooth and automatic as possible. Be sure to use simple CSS classes that\n * do not rely on DOM nesting structure so that the anchor element appears the same as the starting element (since\n * the cloned element is placed inside of root element which is likely close to the body element).\n *\n * Note that if the root element is on the `<html>` element then the cloned node will be placed inside of body.\n *\n *\n * ## Using $animate in your directive code\n *\n * So far we've explored how to feed in animations into an AngularJS application, but how do we trigger animations within our own directives in our application?\n * By injecting the `$animate` service into our directive code, we can trigger structural and class-based hooks which can then be consumed by animations. Let's\n * imagine we have a greeting box that shows and hides itself when the data changes\n *\n * ```html\n * <greeting-box active=\"onOrOff\">Hi there</greeting-box>\n * ```\n *\n * ```js\n * ngModule.directive('greetingBox', ['$animate', function($animate) {\n *   return function(scope, element, attrs) {\n *     attrs.$observe('active', function(value) {\n *       value ? $animate.addClass(element, 'on') : $animate.removeClass(element, 'on');\n *     });\n *   });\n * }]);\n * ```\n *\n * Now the `on` CSS class is added and removed on the greeting box component. Now if we add a CSS class on top of the greeting box element\n * in our HTML code then we can trigger a CSS or JS animation to happen.\n *\n * ```css\n * /&#42; normally we would create a CSS class to reference on the element &#42;/\n * greeting-box.on { transition:0.5s linear all; background:green; color:white; }\n * ```\n *\n * The `$animate` service contains a variety of other methods like `enter`, `leave`, `animate` and `setClass`. To learn more about what's\n * possible be sure to visit the {@link ng.$animate $animate service API page}.\n *\n *\n * ## Callbacks and Promises\n *\n * When `$animate` is called it returns a promise that can be used to capture when the animation has ended. Therefore if we were to trigger\n * an animation (within our directive code) then we can continue performing directive and scope related activities after the animation has\n * ended by chaining onto the returned promise that animation method returns.\n *\n * ```js\n * // somewhere within the depths of the directive\n * $animate.enter(element, parent).then(function() {\n *   //the animation has completed\n * });\n * ```\n *\n * (Note that earlier versions of AngularJS prior to v1.4 required the promise code to be wrapped using `$scope.$apply(...)`. This is not the case\n * anymore.)\n *\n * In addition to the animation promise, we can also make use of animation-related callbacks within our directives and controller code by registering\n * an event listener using the `$animate` service. Let's say for example that an animation was triggered on our view\n * routing controller to hook into that:\n *\n * ```js\n * ngModule.controller('HomePageController', ['$animate', function($animate) {\n *   $animate.on('enter', ngViewElement, function(element) {\n *     // the animation for this route has completed\n *   }]);\n * }])\n * ```\n *\n * (Note that you will need to trigger a digest within the callback to get AngularJS to notice any scope-related changes.)\n */\n\nvar copy;\nvar extend;\nvar forEach;\nvar isArray;\nvar isDefined;\nvar isElement;\nvar isFunction;\nvar isObject;\nvar isString;\nvar isUndefined;\nvar jqLite;\nvar noop;\n\n/**\n * @ngdoc service\n * @name $animate\n * @kind object\n *\n * @description\n * The ngAnimate `$animate` service documentation is the same for the core `$animate` service.\n *\n * Click here {@link ng.$animate to learn more about animations with `$animate`}.\n */\nangular.module('ngAnimate', [], function initAngularHelpers() {\n  // Access helpers from AngularJS core.\n  // Do it inside a `config` block to ensure `window.angular` is available.\n  noop        = angular.noop;\n  copy        = angular.copy;\n  extend      = angular.extend;\n  jqLite      = angular.element;\n  forEach     = angular.forEach;\n  isArray     = angular.isArray;\n  isString    = angular.isString;\n  isObject    = angular.isObject;\n  isUndefined = angular.isUndefined;\n  isDefined   = angular.isDefined;\n  isFunction  = angular.isFunction;\n  isElement   = angular.isElement;\n})\n  .info({ angularVersion: '1.8.0' })\n  .directive('ngAnimateSwap', ngAnimateSwapDirective)\n\n  .directive('ngAnimateChildren', $$AnimateChildrenDirective)\n  .factory('$$rAFScheduler', $$rAFSchedulerFactory)\n\n  .provider('$$animateQueue', $$AnimateQueueProvider)\n  .provider('$$animateCache', $$AnimateCacheProvider)\n  .provider('$$animation', $$AnimationProvider)\n\n  .provider('$animateCss', $AnimateCssProvider)\n  .provider('$$animateCssDriver', $$AnimateCssDriverProvider)\n\n  .provider('$$animateJs', $$AnimateJsProvider)\n  .provider('$$animateJsDriver', $$AnimateJsDriverProvider);\n\n\n})(window, window.angular);\n","require('./angular-animate');\nmodule.exports = 'ngAnimate';\n","module.exports = __WEBPACK_EXTERNAL_MODULE__734__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","/*\n * Twitter Bootstrap 4 plugin for AngularJS.\n * Copyright (c) 2016-2021 Rodziu <mateusz.rohde@gmail.com>\n * License: MIT\n */\nimport {IDirective} from 'angular';\n\n/**\n * @ngInject\n */\nclass BsCarouselItemDirectiveController {\n    private $element: JQLite;\n\n    constructor($element: JQLite) {\n        this.$element = $element;\n    }\n\n    $onInit() {\n        this.$element.addClass('carousel-item');\n    }\n}\n\nexport function bsCarouselItemDirective(): IDirective {\n    return {\n        restrict: 'A',\n        require: '^bsCarousel',\n        link: function(scope, element, attrs, ctrl) {\n            ctrl.register(element);\n        },\n        controller: BsCarouselItemDirectiveController\n    };\n}\n","/*\n * Twitter Bootstrap 4 plugin for AngularJS.\n * Copyright (c) 2016-2021 Rodziu <mateusz.rohde@gmail.com>\n * License: MIT\n */\n\nimport {IAttributes, IDirective, IIntervalService, IScope} from 'angular';\nimport {ICarouselOptions} from './carousel.provider';\nimport * as angular from 'angular';\n\ntype direction = 'left' | 'right';\n\n/**\n * @ngInject\n */\nclass BsCarouselDirectiveController {\n    private $scope: IScope;\n    private $element: JQLite;\n    private readonly $attrs: IAttributes;\n    private readonly $interval: IIntervalService;\n    private Carousel: ICarouselOptions;\n    private carouselInterval = null;\n    private slides = [];\n    private currentSlide = -1;\n    private sliding = false;\n    private wrap: boolean;\n    private keyboard: boolean;\n\n    constructor(\n        $scope: IScope, $element: JQLite, $attrs: IAttributes, $interval: IIntervalService,\n        Carousel: ICarouselOptions\n    ) {\n        this.$scope = $scope;\n        this.$element = $element;\n        this.$attrs = $attrs;\n        this.$interval = $interval;\n        this.Carousel = Carousel;\n\n        this.$element.on('keydown', (e) => {\n            if (\n                !this.keyboard\n                || (e.key !== 'ArrowLeft' && e.key !== 'ArrowRight')\n                || /input|textarea/i.test(e.target.tagName)\n            ) {\n                return;\n            }\n            if (e.key === 'ArrowLeft') {\n                this.prevNextSlide(false);\n            } else {\n                this.prevNextSlide(true);\n            }\n            $scope.$digest();\n            e.preventDefault();\n        });\n    }\n\n    $onInit(): void {\n        const interval = 'interval' in this.$attrs ? parseInt(this.$attrs['interval']) : this.Carousel.interval,\n            pause = 'pause' in this.$attrs ? this.$attrs['pause'] === 'hover' : this.Carousel.pause;\n        if (interval) {\n            const cycle = () => {\n                this.carouselInterval = this.$interval(() => {\n                    this.prevNextSlide(true);\n                }, interval);\n            };\n            if (pause) {\n                this.$element.on('mouseenter', () => {\n                    this.$interval.cancel(this.carouselInterval);\n                });\n                this.$element.on('mouseleave', cycle);\n            }\n            cycle();\n        }\n    }\n\n    $onChanges(): void {\n        if (angular.isUndefined(this.wrap)) {\n            this.wrap = this.Carousel.wrap;\n        }\n        if (angular.isUndefined(this.keyboard)) {\n            this.keyboard = this.Carousel.keyboard;\n        }\n    }\n\n    $onDestroy() {\n        if (this.carouselInterval !== null) {\n            this.$interval.cancel(this.carouselInterval);\n        }\n    }\n\n    register($element: JQLite): void {\n        this.slides.push($element);\n        if ($element.hasClass('active')) {\n            if (~this.currentSlide) {\n                this.slides[this.currentSlide].removeClass('active');\n            }\n            this.currentSlide = this.slides.length - 1;\n        } else if (!~this.currentSlide) {\n            $element.addClass('active');\n            this.currentSlide = this.slides.length - 1;\n        }\n    }\n\n    unregister($element: JQLite): void {\n        this.slides.splice(this.slides.indexOf($element, 1));\n    }\n\n    prevNextSlide(isNext: boolean): void {\n        const nextIndex = isNext ? this.currentSlide + 1 : this.currentSlide - 1;\n        if (\n            (nextIndex >= this.slides.length || nextIndex < 0)\n            && !this.wrap\n        ) {\n            return;\n        }\n        this.slideTo(nextIndex, isNext ? 'left' : 'right');\n    }\n\n    slideTo(index: number, direction: direction): void {\n        if (index < 0) {\n            index = this.slides.length - 1;\n        } else if (index >= this.slides.length) {\n            index = 0;\n        }\n        this.changeSlide(index, direction);\n    }\n\n    private changeSlide(nextSlide: number, direction?: direction) {\n        if (nextSlide !== this.currentSlide && !this.sliding) {\n            this.sliding = true;\n            if (angular.isUndefined(direction)) {\n                direction = nextSlide > this.currentSlide ? 'left' : 'right';\n            }\n            const next = this.slides[nextSlide],\n                active = this.slides[this.currentSlide],\n                transition = () => {\n                    active[0].removeEventListener('transitionend', transition);\n                    next.removeClass(\n                        'carousel-item-next carousel-item-prev carousel-item-' + direction)\n                        .addClass('active');\n                    active.removeClass('active carousel-item-' + direction);\n                    this.sliding = false;\n                };\n            next.addClass(direction === 'left' ? 'carousel-item-next' : 'carousel-item-prev');\n            next[0].offsetWidth; // force reflow\n            active.addClass('carousel-item-' + direction);\n            next.addClass('carousel-item-' + direction);\n            active[0].addEventListener('transitionend', transition);\n            this.currentSlide = nextSlide;\n        }\n    }\n}\n\nexport function bsCarouselDirective(): IDirective {\n    /**\n     * @ngdoc directive\n     * @name bsCarousel\n     *\n     * @param interval\n     * @param pause\n     * @param {expression|boolean} wrap\n     * @param {expression|boolean} keyboard\n     */\n    return {\n        restrict: 'A',\n        bindToController: {\n            wrap: '<?',\n            keyboard: '<?'\n        },\n        controller: BsCarouselDirectiveController\n    };\n}\n","/*\n * Twitter Bootstrap 4 plugin for AngularJS.\n * Copyright (c) 2016-2021 Rodziu <mateusz.rohde@gmail.com>\n * License: MIT\n */\nimport * as angular from 'angular';\nimport {CarouselProvider} from './carousel.provider';\nimport {bsCarouselIndicatorsComponent} from './bs-carousel-indicators.component';\nimport {bsCarouselItemDirective} from './bs-carousel-item.directive';\nimport {bsCarouselNavDirective} from './bs-carousel-nav.directive';\nimport {bsCarouselDirective} from './bs-carousel.directive';\n\nconst carouselModule = angular.module('angularBS.carousel', [])\n    .provider('Carousel', CarouselProvider)\n    .component('bsCarouselIndicators', bsCarouselIndicatorsComponent)\n    .directive('bsCarouselItem', bsCarouselItemDirective)\n    .directive('bsCarouselNav', bsCarouselNavDirective)\n    .directive('bsCarousel', bsCarouselDirective);\n\nexport const angularBSCarousel = carouselModule.name;\n","/*\n * Twitter Bootstrap 4 plugin for AngularJS.\n * Copyright (c) 2016-2021 Rodziu <mateusz.rohde@gmail.com>\n * License: MIT\n */\n\nexport interface ICarouselOptions {\n    interval: number,\n    pause: 'hover' | null,\n    wrap: boolean,\n    keyboard: boolean\n}\n\nexport class CarouselProvider {\n    public config: ICarouselOptions = {\n        interval: 5000,\n        pause: 'hover',\n        wrap: true,\n        keyboard: true\n    };\n\n    $get(): ICarouselOptions {\n        return this.config;\n    }\n}\n","/*\n * Twitter Bootstrap 4 plugin for AngularJS.\n * Copyright (c) 2016-2021 Rodziu <mateusz.rohde@gmail.com>\n * License: MIT\n */\n\nimport {IComponentOptions} from 'angular';\n\nexport const bsCarouselIndicatorsComponent: IComponentOptions = {\n    template: '<ol class=\"carousel-indicators\">'\n        + '<li ng-repeat=\"s in ctrl.carousel.slides\" ng-click=\"ctrl.carousel.slideTo($index)\" '\n        + 'ng-class=\"{active: $index === ctrl.carousel.currentSlide}\"></li>'\n        + '</ol>',\n    require: {\n        carousel: '^bsCarousel'\n    },\n    controllerAs: 'ctrl'\n};\n","/*\n * Twitter Bootstrap 4 plugin for AngularJS.\n * Copyright (c) 2016-2021 Rodziu <mateusz.rohde@gmail.com>\n * License: MIT\n */\nimport {IDirective} from 'angular';\n\nexport function bsCarouselNavDirective(): IDirective {\n    return {\n        restrict: 'A',\n        require: '^bsCarousel',\n        link: function(scope, element, attrs, ctrl) {\n            element.on('click', function() {\n                ctrl.prevNextSlide(attrs['bsCarouselNav'] === 'right');\n                scope.$digest();\n            });\n        }\n    };\n}\n","/*\n * Twitter Bootstrap 4 plugin for AngularJS.\n * Copyright (c) 2016-2021 Rodziu <mateusz.rohde@gmail.com>\n * License: MIT\n */\n\nimport {IDirective, IScope} from 'angular';\nimport * as angular from 'angular';\nimport 'angular-animate';\nimport {BsCollapseGroupDirectiveController} from './bs-collapse-group.directive';\n\n/**\n * @ngInject\n */\nexport class BsCollapseDirectiveController {\n    private $scope: IScope;\n    private $element: JQLite;\n    private readonly $animateCss: angular.animate.IAnimateCssService;\n    private bsCollapse: boolean;\n    private group: BsCollapseGroupDirectiveController;\n\n    constructor($scope: IScope, $element: JQLite, $animateCss: angular.animate.IAnimateCssService) {\n        this.$scope = $scope;\n        this.$element = $element;\n        this.$animateCss = $animateCss;\n\n        $scope.$watch(() => {\n            return this.bsCollapse;\n        }, (nV) => {\n            this.bsCollapse = !!nV;\n            if (this.bsCollapse) {\n                this.collapse();\n            } else {\n                this.expand();\n                if (this.group) {\n                    this.group.expand(this);\n                }\n            }\n        })\n    }\n\n    $onInit(): void {\n        if (this.bsCollapse) {\n            this.$element.removeClass('show collapsing').addClass('collapse');\n            this.$element.css({height: null});\n        } else {\n            this.$element.removeClass('collapsing').addClass('collapse show');\n        }\n    }\n\n\n    private expand(): void {\n        if (!this.$element.hasClass('show')) {\n            this.$element.removeClass('collapse').addClass('collapsing');\n            if (this.$animateCss) {\n                this.$animateCss(this.$element, {\n                    addClass: 'show',\n                    easing: 'ease',\n                    to: {\n                        height: this.$element[0].scrollHeight + 'px'\n                    }\n                }).start()['finally'](() => {\n                    this.$element.removeClass('collapsing').addClass('collapse').css({height: 'auto'});\n                });\n            }\n        }\n    }\n    private collapse(): void {\n        if (this.$element.hasClass('show')) {\n            this.$element.css({\n                height: this.$element[0].scrollHeight + 'px'\n            }).removeClass('collapse').addClass('collapsing');\n            this.$animateCss(this.$element, {\n                removeClass: 'show',\n                to: {height: '0'}\n            }).start()['finally'](() => {\n                this.$element.css({height: null});\n                this.$element.removeClass('collapsing').addClass('collapse');\n            });\n        }\n    }\n}\n\nexport function bsCollapseDirective(): IDirective {\n    /**\n     * @ngdoc directive\n     * @name bsCollapse\n     *\n     * @param {expression|boolean} bsCollapse\n     */\n    return {\n        restrict: 'A',\n        bindToController: {\n            bsCollapse: '=?'\n        },\n        require: ['bsCollapse', '?^bsCollapseGroup'],\n        link: function(scope, element, attrs, ctrl) {\n            if (ctrl[1] !== null) {\n                ctrl[1].register(ctrl[0]);\n                ctrl[0].group = ctrl[1];\n                scope.$on('destroy', () => {\n                    ctrl[1].unregister(ctrl[0]);\n                });\n            }\n        },\n        controller: BsCollapseDirectiveController\n    };\n}\n","/*\n * Twitter Bootstrap 4 plugin for AngularJS.\n * Copyright (c) 2016-2021 Rodziu <mateusz.rohde@gmail.com>\n * License: MIT\n */\n\nimport {IDirective} from 'angular';\nimport {BsCollapseDirectiveController} from './bs-collapse.directive';\n\n/**\n * @ngInject\n */\nexport class BsCollapseGroupDirectiveController {\n    private children = [];\n\n    register(bsCollapseCtrl: BsCollapseDirectiveController): void {\n        this.children.push(bsCollapseCtrl);\n    }\n\n    unregister(bsCollapseCtrl: BsCollapseDirectiveController): void {\n        this.children.splice(this.children.indexOf(bsCollapseCtrl), 1);\n    }\n\n    expand(invokingCtrl: BsCollapseDirectiveController): void {\n        for (let c = 0; c < this.children.length; c++) {\n            if (this.children[c] !== invokingCtrl) {\n                this.children[c].bsCollapse = true;\n            }\n        }\n    }\n}\n\nexport function bsCollapseGroupDirective(): IDirective {\n    return {\n        restrict: 'A',\n        controller: BsCollapseGroupDirectiveController\n    };\n}\n","/*\n * Twitter Bootstrap 4 plugin for AngularJS.\n * Copyright (c) 2016-2021 Rodziu <mateusz.rohde@gmail.com>\n * License: MIT\n */\nimport * as angular from 'angular';\nimport {bsCollapseDirective} from './bs-collapse.directive';\nimport {bsCollapseGroupDirective} from './bs-collapse-group.directive';\n\nconst collapseModule = angular.module('angularBS.collapse', [])\n    .directive('bsCollapse', bsCollapseDirective)\n    .directive('bsCollapseGroup', bsCollapseGroupDirective);\n\nexport const angularBSCollapse = collapseModule.name;\n","/*\n * Twitter Bootstrap 4 plugin for AngularJS.\n * Copyright (c) 2016-2021 Rodziu <mateusz.rohde@gmail.com>\n * License: MIT\n */\nimport * as angular from 'angular';\nimport {AngularBSService} from './angularBS.service';\n\nconst helpersModule = angular.module('angularBS.helpers', [])\n    .factory('angularBS', AngularBSService);\n\nexport const helpers = helpersModule.name;\n","/*\n * Twitter Bootstrap 4 plugin for AngularJS.\n * Copyright (c) 2016-2021 Rodziu <mateusz.rohde@gmail.com>\n * License: MIT\n */\n\nimport * as angular from 'angular';\n\nexport interface IElementOffset {\n    width: number,\n    height: number,\n    top: number,\n    left: number\n}\n\nexport type placement = 'top' | 'left' | 'right' | 'bottom' | string;\n\nexport class AngularBSService {\n    /**\n     * Get element width, height, position from top and left of document/window,\n     */\n    offset(element: HTMLElement): IElementOffset {\n        const elemBCR = element.getBoundingClientRect(),\n            elemStyle = element['currentStyle'] || window.getComputedStyle(element);\n        return {\n            width: Math.ceil(angular.isNumber(elemBCR.width) ? elemBCR.width : element.offsetWidth)\n                + parseInt(elemStyle.getPropertyValue('margin-left'))\n                + parseInt(elemStyle.getPropertyValue('margin-right')),\n            height: Math.ceil(angular.isNumber(elemBCR.height) ? elemBCR.height : element.offsetHeight)\n                + parseInt(elemStyle.getPropertyValue('margin-top'))\n                + parseInt(elemStyle.getPropertyValue('margin-bottom')),\n            top: Math.ceil(elemBCR.top + (window.pageYOffset || document.documentElement.scrollTop)),\n            left: Math.ceil(elemBCR.left + (window.pageXOffset || document.documentElement.scrollLeft)),\n        };\n    }\n\n    /**\n     * Removes all placement classes on given element\n     */\n    setPlacementCSS(element: JQLite, prefix: string, placement: placement): void {\n        const placements = ['top', 'left', 'right', 'bottom'];\n        for (let p = 0; p < placements.length; p++) {\n            element.removeClass(prefix + placements[p]);\n        }\n        element.addClass(prefix + placement);\n    }\n\n    /**\n     * Position element aside of positionTo on given side (placement)\n     * @param element\n     * @param positionTo\n     * @param placement\n     * @param [boundaryElement] - defaults to document|window\n     * @param cssPrefix\n     * @returns {{top: number, left: number, position: string}}\n     */\n    positionElement(\n        element: JQLite,\n        positionTo: JQLite,\n        placement: placement,\n        boundaryElement?: JQLite,\n        cssPrefix?: string\n    ): void {\n        const splitPlacement = placement.split(' ');\n        let top = 0, left = 0,\n            arrowTop = '50%',\n            realPlacement: placement = 'left',\n            offset = this.offset(element[0]);\n        const offsetTo = this.offset(positionTo[0]),\n            placements: placement[] = ['right', 'top', 'bottom'],\n            auto = !!~splitPlacement.indexOf('auto'),\n            calcPosition = () => {\n                switch (realPlacement) {\n                    case 'bottom':\n                        top = (offsetTo.top + offsetTo.height);\n                        left = ((offsetTo.left + (offsetTo.width / 2)) - (offset.width / 2));\n                        break;\n                    case 'top':\n                        top = (offsetTo.top - offset.height);\n                        left = ((offsetTo.left + (offsetTo.width / 2)) - (offset.width / 2));\n                        break;\n                    case 'left':\n                        top = (offsetTo.top + ((offsetTo.height - offset.height) / 2));\n                        left = (offsetTo.left - offset.width);\n                        break;\n                    case 'right':\n                        top = (offsetTo.top + ((offsetTo.height - offset.height) / 2));\n                        left = (offsetTo.left + offsetTo.width);\n                        break;\n                }\n                this.setPlacementCSS(element, cssPrefix, realPlacement);\n                // check to see if element has been resized after adding the placement\n                const newOffset = this.offset(element[0]);\n                if (newOffset.height !== offset.height || newOffset.width !== offset.width) {\n                    offset = newOffset;\n                    calcPosition();\n                }\n            };\n        for (let p = 0; p < placements.length; p++) {\n            if (~splitPlacement.indexOf(placements[p])) {\n                realPlacement = placements[p];\n                break;\n            }\n        }\n        calcPosition();\n        // get boundary offset\n        const bo = angular.isDefined(boundaryElement) ? this.offset(boundaryElement[0]) : {\n            top: window.pageYOffset || document.documentElement.scrollTop,\n            left: 0,\n            width: Math.max(window.innerWidth, document.body.clientWidth),\n            height: Math.max(window.innerHeight, document.body.clientHeight)\n        };\n        // change side if element would be outside of given viewport\n        if (auto) {\n            let newPlacement = realPlacement;\n            switch (realPlacement) {\n                case 'left':\n                    if (left < bo.left) {\n                        newPlacement = 'right';\n                    }\n                    break;\n                case 'right':\n                    if (left + offset.width + 10 > bo.left + bo.width) {\n                        newPlacement = 'left';\n                    }\n                    break;\n                case 'bottom':\n                    if (top + offset.height + 10 > bo.top + bo.height) {\n                        newPlacement = 'top';\n                    }\n                    break;\n                case 'top':\n                    if (top < bo.top) {\n                        newPlacement = 'bottom';\n                    }\n                    break;\n            }\n            if (newPlacement !== realPlacement) {\n                realPlacement = newPlacement;\n                calcPosition();\n            }\n        }\n        // adjust arrow position\n        const arrow = angular.element(element[0].querySelector('.arrow'));\n        if (angular.isDefined(arrow)) {\n            switch (realPlacement) {\n                case 'left':\n                case 'right':\n                    if (top < bo.top) {\n                        top = bo.top;\n                        arrowTop = (offsetTo.top + offsetTo.height / 2) + 'px';\n                    } else if (top + offset.height > bo.top + bo.height) {\n                        top = bo.top + bo.height - offset.height;\n                        let arrowTopN = offsetTo.top + offsetTo.height / 2 - top;\n                        if (arrowTopN > offset.height - 15) {\n                            arrowTopN = offset.height - 15;\n                        }\n                        arrowTop = arrowTopN + 'px';\n                    }\n                    arrow.css('top', arrowTop);\n                    break;\n                case 'bottom':\n                    arrow.css('top', '');\n                    break;\n                case 'top':\n                    arrow.css('top', 'auto');\n                    break;\n            }\n        }\n        this.adjustArrow(element, realPlacement);\n        // apply element position\n        element.css({\n            top: '0px',\n            left: '0px',\n            transform: 'translate3d(' + left + 'px, ' + top + 'px, 0px)'\n        });\n    }\n\n    /**\n     * Properly set arrow position of tooltip/popover element\n     */\n    adjustArrow(element: JQLite, placement: placement): void {\n        const arrow = angular.element(element[0].querySelector('.arrow'));\n        if (angular.isDefined(arrow)) {\n            switch (placement) {\n                case 'top':\n                case 'bottom':\n                    arrow.css('left', 'calc(50% - ' + (this.offset(arrow[0]).width / 2 + 'px)'));\n                    break;\n                case 'left':\n                case 'right':\n                    arrow.css('top', 'calc(50% - ' + (this.offset(arrow[0]).height / 2 + 'px)'));\n                    break;\n            }\n        }\n    }\n}\n","/*\n * Twitter Bootstrap 4 plugin for AngularJS.\n * Copyright (c) 2016-2021 Rodziu <mateusz.rohde@gmail.com>\n * License: MIT\n */\nimport {IDirective} from 'angular';\n\n/**\n * @ngInject\n */\nexport class BsDropdownBoundaryDirectiveController {\n    public $element: JQLite;\n\n    constructor($element: JQLite) {\n        this.$element = $element;\n    }\n}\n\nexport function bsDropdownBoundaryDirective(): IDirective {\n    return {\n        restrict: 'A',\n        controller: BsDropdownBoundaryDirectiveController\n    };\n}\n","/*\n * Twitter Bootstrap 4 plugin for AngularJS.\n * Copyright (c) 2016-2021 Rodziu <mateusz.rohde@gmail.com>\n * License: MIT\n */\nimport {IDirective, IDocumentService, IScope} from 'angular';\nimport {AngularBSService} from '../helpers/angularBS.service';\nimport {BsDropdownBoundaryDirectiveController} from './bs-dropdown-boundary.directive';\nimport * as angular from 'angular';\n\n/**\n * @ngInject\n */\nclass BSDropdownDirectiveController {\n    private $scope: IScope;\n    private $element: JQLite;\n    private $document: IDocumentService;\n    private angularBS: AngularBSService;\n    private bsDropdown: boolean;\n    private _bsDropdown: boolean;\n    private boundary: BsDropdownBoundaryDirectiveController;\n    private boundaryElement: JQLite;\n\n    constructor($scope: IScope, $element: JQLite, $document: IDocumentService, angularBS: AngularBSService) {\n        this.$scope = $scope;\n        this.$element = $element;\n        this.$document = $document;\n        this.angularBS = angularBS;\n    }\n\n    $onInit(): void {\n        this.bsDropdown = !!this.bsDropdown;\n        this.$element.addClass('dropdown');\n        this.$document.on('click', this._onClick.bind(this));\n        this.$element.on('keydown', this._keydown.bind(this));\n    }\n\n    $doCheck(): void {\n        if (this._bsDropdown !== this.bsDropdown) {\n            this._bsDropdown = this.bsDropdown;\n            if (this.bsDropdown) {\n                this.$element.addClass('show');\n                angular.element(this.$element[0].querySelectorAll('.dropdown-menu')).addClass('show');\n                if (this.boundary || this.boundaryElement) {\n                    this.reposition();\n                }\n            } else {\n                if (this.boundary || this.boundaryElement) {\n                    this.$element.removeClass('dropup');\n                }\n                this.$element.removeClass('show');\n                angular.element(this.$element[0].querySelectorAll('.dropdown-menu')).removeClass('show');\n            }\n        }\n    }\n\n    $onDestroy(): void {\n        this.$document.off('click', this._onClick.bind(this));\n        this.$element.off('keydown', this._keydown.bind(this));\n    }\n\n    _onClick(e: JQueryMouseEventObject): void {\n        if (this.bsDropdown && !this.$element[0].contains(e.target)) {\n            this.$scope.$apply(() => {\n                this.bsDropdown = false;\n            });\n        }\n    }\n\n    _keydown(e: JQueryKeyEventObject): void {\n        if (this.bsDropdown && e.key === 'Escape') {\n            this.$scope.$apply(() => {\n                this.bsDropdown = false;\n            });\n            return;\n        }\n        if (e.key === 'ArrowUp' || e.key === 'ArrowDown') {\n            const items = this.$element[0].querySelectorAll<HTMLAnchorElement>(\n                '.dropdown-menu a:not(.disabled)'\n            );\n            let idx = -1;\n            for (let i = 0; i < items.length; i++) {\n                if (items[i].contains(e.target)) {\n                    idx = i;\n                    break;\n                }\n            }\n            if (e.key === 'ArrowUp' && idx > 0) {\n                idx--;\n            } else if (e.key === 'ArrowDown' && idx < items.length - 1) {\n                idx++;\n            }\n            if (!~idx) {\n                idx = 0;\n            }\n            items[idx].focus();\n        }\n    }\n\n    reposition(): void {\n        const boundaryElement = this.boundary ? this.boundary.$element[0] : this.boundaryElement[0],\n            boundaryOffset = this.angularBS.offset(boundaryElement),\n            menuOffset = this.angularBS.offset(this.$element[0].querySelector('.dropdown-menu'));\n        if (menuOffset.height + menuOffset.top > boundaryOffset.height + boundaryOffset.top) {\n            this.$element.addClass('dropup');\n        } else {\n            this.$element.removeClass('dropup');\n        }\n    }\n}\n\nexport function bsDropdownDirective(): IDirective {\n    /**\n     * @ngdoc directive\n     * @name bsDropdown\n     * @property {expression|boolean} bsDropdown\n     */\n    return {\n        restrict: 'A',\n        require: {\n            boundary: '?^bsDropdownBoundary'\n        },\n        bindToController: {\n            bsDropdown: '=?',\n            boundaryElement: '<?'\n        },\n        controller: BSDropdownDirectiveController\n    };\n}\n","/*\n * Twitter Bootstrap 4 plugin for AngularJS.\n * Copyright (c) 2016-2021 Rodziu <mateusz.rohde@gmail.com>\n * License: MIT\n */\nimport * as angular from 'angular';\nimport {helpers} from '../helpers/helpers.module';\nimport {bsDropdownBoundaryDirective} from './bs-dropdown-boundary.directive';\nimport {bsDropdownDirective} from './bs-dropdown.directive';\nimport {bsDropdownToggleDirective} from './bs-dropdown-toggle.directive';\n\nconst dropdownModule = angular.module('angularBS.dropdown', [helpers])\n    .directive('bsDropdownBoundary', bsDropdownBoundaryDirective)\n    .directive('bsDropdown', bsDropdownDirective)\n    .directive('bsDropdownToggle', bsDropdownToggleDirective);\n\nexport const angularBSDropdown = dropdownModule.name;\n","/*\n * Twitter Bootstrap 4 plugin for AngularJS.\n * Copyright (c) 2016-2021 Rodziu <mateusz.rohde@gmail.com>\n * License: MIT\n */\n\nimport {IDirective} from 'angular';\n\nexport function bsDropdownToggleDirective(): IDirective {\n    return {\n        restrict: 'A',\n        require: '^bsDropdown',\n        link: function(scope, element, attrs, dropdownCtrl) {\n            element.on('click', () => {\n                scope.$apply(() => {\n                    dropdownCtrl.bsDropdown = !dropdownCtrl.bsDropdown;\n                });\n            });\n        }\n    };\n}\n","/*\n * Twitter Bootstrap 4 plugin for AngularJS.\n * Copyright (c) 2016-2021 Rodziu <mateusz.rohde@gmail.com>\n * License: MIT\n */\nimport {ICompileService, IDeferred, IDocumentService, IPromise, IQService, IRootScopeService, IScope} from 'angular';\nimport * as angular from 'angular';\nimport {BSModalBackdropController} from './bs-modal-backdrop.component';\n\ninterface IBackdropScope extends IScope {\n    isVisible: () => boolean\n}\n\n/**\n * @ngInject\n */\nexport class ModalBackdropFactory {\n    private $q: IQService;\n    private _isVisible = false;\n    private _isAnimated = false;\n    private _backDropPromise: IDeferred<void>;\n    private _openModals = 0;\n    private _bodyElement: JQLite;\n    public backdropController: BSModalBackdropController;\n\n    constructor($document: IDocumentService, $compile: ICompileService, $rootScope: IRootScopeService, $q: IQService) {\n        this.$q = $q;\n\n        this._bodyElement = $document.find('body');\n        const backdropElement = angular.element('<bs-modal-backdrop ng-if=\"isVisible()\"></bs-modal-backdrop>'),\n            backdropScope = $rootScope.$new(true) as IBackdropScope;\n        // create backdrop element in body\n        backdropScope.isVisible = this.isVisible.bind(this);\n        $compile(backdropElement)(backdropScope);\n        this._bodyElement.append(backdropElement);\n    }\n\n    isVisible(): boolean {\n        return this._isVisible;\n    }\n\n    isAnimated(): boolean {\n        return this._isAnimated;\n    }\n\n    show(backdrop: boolean, animate: boolean): IPromise<void> {\n        this._openModals++;\n        this._backDropPromise = this.$q.defer<void>();\n        this._isAnimated = !!animate;\n        this._bodyElement.addClass('modal-open');\n        if (backdrop && !this._isVisible) {\n            this._isVisible = true;\n        } else {\n            this._backDropPromise.resolve();\n        }\n        return this._backDropPromise.promise;\n    }\n\n    shown(): void {\n        this._backDropPromise.resolve();\n    }\n\n    hide(): void {\n        this._openModals--;\n        if (this._openModals < 0) {\n            this._openModals = 0;\n        }\n        if (this._openModals === 0) {\n            if (angular.isDefined(this.backdropController)) {\n                this.backdropController.hide().then(this._doHide);\n            } else {\n                this._doHide();\n            }\n        }\n    }\n\n    private _doHide = () => {\n        this._isVisible = false;\n        this._bodyElement.removeClass('modal-open');\n    }\n}\n","/*\n * Twitter Bootstrap 4 plugin for AngularJS.\n * Copyright (c) 2016-2021 Rodziu <mateusz.rohde@gmail.com>\n * License: MIT\n */\n\nimport {IComponentOptions, IPromise, IQService, ITimeoutService} from 'angular';\nimport {ModalBackdropFactory} from './modal-backdrop.factory';\n\nexport class BSModalBackdropController {\n    private $element: JQLite;\n    private $q: IQService;\n    private readonly $timeout: ITimeoutService;\n    private ModalBackdrop: ModalBackdropFactory;\n    private isAnimated: () => boolean;\n    /**\n     * @ngInject\n     */\n    constructor($element: JQLite, $q: IQService, $timeout: ITimeoutService, ModalBackdrop: ModalBackdropFactory) {\n        this.$element = $element;\n        this.$q = $q;\n        this.$timeout = $timeout;\n        this.ModalBackdrop = ModalBackdrop;\n    }\n\n    $onInit(): void {\n        this.ModalBackdrop.backdropController = this;\n        this.isAnimated = this.ModalBackdrop.isAnimated.bind(this.ModalBackdrop);\n    }\n\n    $postLink(): void {\n        // wait until 'fade' class is added, we don't use $timeout cause we don't need a digest cycle here\n        setTimeout(() => {\n            this.$element.children()[0].offsetWidth; // force reflow\n            this.$element.children().addClass('show');\n            this.ModalBackdrop.shown();\n        });\n    }\n\n    hide(): IPromise<void> {\n        const defered = this.$q.defer<void>(),\n            backdropElement = this.$element.children();\n        backdropElement.removeClass('show');\n        if (this.isAnimated()) {\n            let transitionFinished = false;\n            const transition = function() {\n                if (!transitionFinished) {\n                    defered.resolve();\n                    transitionFinished = true;\n                }\n            };\n            backdropElement[0].addEventListener('transitionend', transition);\n            this.$timeout(transition, 150);\n        } else {\n            defered.resolve();\n        }\n        return defered.promise;\n    }\n}\n\nexport const bsModalBackdropComponent: IComponentOptions = {\n    template: '<div class=\"modal-backdrop\" ng-class=\"{\\'fade\\': vm.isAnimated()}\"></div>',\n    controllerAs: 'vm',\n    controller: BSModalBackdropController\n};\n","/*\n * Twitter Bootstrap 4 plugin for AngularJS.\n * Copyright (c) 2016-2021 Rodziu <mateusz.rohde@gmail.com>\n * License: MIT\n */\n\n\nimport {IDirective, IDocumentService, IScope, ITimeoutService} from 'angular';\nimport IInjectorService = angular.auto.IInjectorService;\nimport {ModalBackdropFactory} from './modal-backdrop.factory';\nimport {ModalProvider} from './modal.provider';\nimport * as angular from 'angular';\n\n/**\n * @ngInject\n */\nexport class BSModalController {\n    private readonly $timeout: ITimeoutService;\n    private $document: IDocumentService;\n    private $injector: IInjectorService;\n    private Modal: ModalProvider;\n    private ModalBackdrop: ModalBackdropFactory;\n    private _keydownHandler: (JQueryEventObject) => void;\n    private _bsModal: boolean;\n    private onBeforeChange: () => boolean;\n    public $scope: IScope;\n    public $element: JQLite;\n    public backdrop: 'static' | boolean;\n    public keyboard: boolean;\n    public bsModal: boolean;\n\n    constructor(\n        $scope: IScope,\n        $element: JQLite,\n        $timeout: ITimeoutService,\n        $document: IDocumentService,\n        $injector: IInjectorService,\n        Modal: ModalProvider,\n        ModalBackdrop: ModalBackdropFactory\n    ) {\n        this.$scope = $scope;\n        this.$element = $element;\n        this.$timeout = $timeout;\n        this.$document = $document;\n        this.$injector = $injector;\n        this.Modal = Modal;\n        this.ModalBackdrop = ModalBackdrop;\n    }\n\n\n    $onInit(): void {\n        if (angular.isUndefined(this.keyboard)) {\n            this.keyboard = this.Modal.config.keyboard;\n        }\n        if (angular.isUndefined(this.backdrop)) {\n            this.backdrop = this.Modal.config.backdrop;\n        }\n        // backdrop click\n        this.$element.on('click', (e) => {\n            if (window.getSelection().type === 'Range') {\n                return;\n            }\n            if (this.backdrop === true && e.target === this.$element[0]) { // .modal covers whole page\n                this.$scope.$apply(() => {\n                    this.hide();\n                });\n            }\n        });\n        // keyboard esc\n        this._keydownHandler = (e) => this._onKeydown(e);\n        this.$document.on('keydown', this._keydownHandler);\n    }\n\n    $doCheck(): void {\n        if (this._bsModal !== this.bsModal) {\n            this._bsModal = this.bsModal;\n            if (this.bsModal) {\n                this._doShow();\n            } else {\n                this._doHide();\n            }\n        }\n    }\n\n    $onDestroy(): void {\n        if (this.bsModal) {\n            this._doHide();\n        }\n        this.$document.off('keydown', this._keydownHandler);\n    }\n\n    _onKeydown(e: JQueryKeyEventObject): void {\n        if (this.keyboard && e.key === 'Escape') {\n            this.$scope.$apply(() => {\n                this.hide();\n            });\n        }\n    }\n\n    _doShow(): void {\n        if (!this.$element.hasClass('show')) {\n            this.$element.css({display: 'block'});\n            this.$element[0].offsetWidth; // force reflow\n            this.ModalBackdrop\n                .show(!!this.backdrop, this.$element.hasClass('fade'))\n                .then(() => {\n                    this.$element.addClass('show');\n                });\n        }\n    }\n\n    _doHide(): void {\n        if (this.$element.hasClass('show')) {\n            this.$element.removeClass('show');\n            let transitionEnded = false;\n            const callback = () => {\n                    this.ModalBackdrop.hide();\n                    this.$element.css({display: ''});\n                },\n                transition = () => {\n                    if (!transitionEnded) {\n                        this.$element[0].removeEventListener('transitionend', transition);\n                        callback();\n                        transitionEnded = true;\n                    }\n                };\n            if (this.$element.hasClass('fade')) {\n                this.$element[0].addEventListener('transitionend', transition);\n                this.$timeout(transition, 300);\n            } else {\n                callback();\n            }\n        }\n    }\n\n    _shouldChange(): boolean {\n        let ret = this.onBeforeChange();\n        if (ret !== false) {\n            ret = this.$injector.invoke(this.Modal.config.onBeforeChange, this);\n        }\n        return ret !== false;\n    }\n\n    show(): void {\n        if (this.bsModal) {\n            return;\n        }\n        if (this._shouldChange()) {\n            this.bsModal = this._bsModal = true;\n            this._doShow();\n        }\n    }\n\n    hide(): void {\n        if (!this.bsModal) {\n            return;\n        }\n        if (this._shouldChange()) {\n            this.bsModal = this._bsModal = false;\n            this._doHide();\n        }\n    }\n}\n\nexport function bsModalDirective(): IDirective {\n    /**\n     * @ngdoc directive\n     * @name bsModal\n     *\n     * @param {expression} bsModal\n     * @param {string|boolean} backdrop\n     * @param {boolean} keyboard\n     * @param {Function} onBeforeChange\n     */\n    return {\n        restrict: 'A',\n        scope: true,\n        bindToController: {\n            bsModal: '=',\n            keyboard: '<?',\n            backdrop: '<?',\n            onBeforeChange: '&'\n        },\n        controller: BSModalController,\n        controllerAs: 'bsModal'\n    };\n}\n","/*\n * Twitter Bootstrap 4 plugin for AngularJS.\n * Copyright (c) 2016-2021 Rodziu <mateusz.rohde@gmail.com>\n * License: MIT\n */\nimport * as angular from 'angular';\nimport {ModalProvider} from './modal.provider';\nimport {ModalBackdropFactory} from './modal-backdrop.factory';\nimport {bsModalBackdropComponent} from './bs-modal-backdrop.component';\nimport {bsModalDirective} from './bs-modal.directive';\nimport {dismissDirective} from './dismiss.directive';\n\nconst modalModule = angular.module('angularBS.modal', [])\n    .provider('Modal', ModalProvider)\n    .factory('ModalBackdrop', ModalBackdropFactory)\n    .component('bsModalBackdrop', bsModalBackdropComponent)\n    .directive('bsModal', bsModalDirective)\n    .directive('dismiss', dismissDirective);\n\nexport const angularBSModal = modalModule.name;\n","/*\n * Twitter Bootstrap 4 plugin for AngularJS.\n * Copyright (c) 2016-2021 Rodziu <mateusz.rohde@gmail.com>\n * License: MIT\n */\n\nimport {Injectable} from 'angular';\nimport {BSModalController} from './bs-modal.directive';\n\ninterface IModalOptions {\n    backdrop: 'static' | boolean,\n    keyboard: boolean,\n    transitionDuration: number,\n    backdropTransitionDuration: number,\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    onBeforeChange: Injectable<(this: BSModalController, ...args: any[]) => boolean>\n}\n\nexport class ModalProvider {\n    public config: IModalOptions = {\n        backdrop: 'static',\n        keyboard: true,\n        transitionDuration: 300,\n        backdropTransitionDuration: 150,\n        onBeforeChange: () => true\n    }\n\n    public backdropController = null;\n\n    $get(): this {\n        return this;\n    }\n}\n","/*\n * Twitter Bootstrap 4 plugin for AngularJS.\n * Copyright (c) 2016-2021 Rodziu <mateusz.rohde@gmail.com>\n * License: MIT\n */\n\n\nimport {IDirective} from 'angular';\n\nexport function dismissDirective(): IDirective {\n    return {\n        restrict: 'A',\n        require: '^bsModal',\n        link: function(scope, element, attrs, bsModal) {\n            element.on('click', function() {\n                scope.$apply(() => {\n                    bsModal.hide();\n                });\n            });\n        }\n    };\n}\n","/*\n * Twitter Bootstrap 4 plugin for AngularJS.\n * Copyright (c) 2016-2021 Rodziu <mateusz.rohde@gmail.com>\n * License: MIT\n */\nimport {IDirective} from 'angular';\n\n/**\n * @ngInject\n */\nexport class BsPopoverBoundaryDirectiveController {\n    private $element: JQLite;\n\n    constructor($element: JQLite) {\n        this.$element = $element;\n    }\n}\n\nexport function bsPopoverBoundaryDirective(): IDirective {\n    return {\n        restrict: 'A',\n        controller: BsPopoverBoundaryDirectiveController\n    };\n}\n","/*\n * Twitter Bootstrap 4 plugin for AngularJS.\n * Copyright (c) 2016-2021 Rodziu <mateusz.rohde@gmail.com>\n * License: MIT\n */\n\nimport {\n    IAttributes,\n    IComponentOptions,\n    IOnChangesObject,\n    IPromise,\n    IScope,\n    ITimeoutService\n} from 'angular';\nimport {IPopoverOptions, popoverDelay} from './popover.provider';\nimport {AngularBSService, placement} from '../helpers/angularBS.service';\nimport * as angular from 'angular';\n\n/**\n * @ngInject\n */\nclass BsPopoverComponentController {\n    private $scope: IScope;\n    private $element: JQLite;\n    private $attrs: IAttributes;\n    private readonly $timeout: ITimeoutService;\n    private Popover: IPopoverOptions;\n    private angularBS: AngularBSService;\n    private titleVisible: boolean;\n    private contentVisible: boolean;\n    private animation: boolean;\n    private delay: popoverDelay;\n    private placement: placement;\n    private defaultTitle: string;\n    private defaultContent: string;\n    private _delay: popoverDelay;\n    private visible: boolean;\n    private timeout: null | IPromise<void>;\n    private parentElement: JQLite;\n    private boundary: JQLite;\n    private fadeIn: boolean;\n\n    constructor(\n        $scope: IScope,\n        $element: JQLite,\n        $attrs: IAttributes,\n        $timeout: ITimeoutService,\n        Popover: IPopoverOptions,\n        angularBS: AngularBSService\n    ) {\n        this.$scope = $scope;\n        this.$element = $element;\n        this.$attrs = $attrs;\n        this.$timeout = $timeout;\n        this.Popover = Popover;\n        this.angularBS = angularBS;\n\n        //\n        $attrs.$observe('placement', (value) => {\n            this.placement = value as string;\n        });\n        // check if title & content are not empty\n        const title = angular.element($element[0].querySelector('.popover-header')),\n            content = angular.element($element[0].querySelector('.popover-body'));\n\n        $scope.$watch(() => {\n            return title.text().trim();\n        }, (nV) => {\n            this.titleVisible = nV !== '';\n        });\n\n        $scope.$watch(() => {\n            return content.text().trim();\n        }, (nV) => {\n            this.contentVisible = nV !== '';\n        });\n    }\n\n    $onInit(): void {\n        if (angular.isUndefined(this.animation)) {\n            this.animation = this.Popover.animation;\n        }\n        if (angular.isUndefined(this.delay)) {\n            this.delay = this.Popover.delay;\n        }\n        this.placement = this.Popover.placement;\n        this.defaultTitle = this.Popover.title;\n        this.defaultContent = this.Popover.content;\n    }\n\n    $onChanges(changes: IOnChangesObject): void {\n        if (angular.isDefined(changes.delay)) {\n            this._delay = angular.isDefined(changes.delay.currentValue)\n                ? changes.delay.currentValue : this.Popover.delay;\n        }\n        if (\n            angular.isDefined(changes.visible)\n            && changes.visible.previousValue !== changes.visible.currentValue\n        ) {\n            this.visible = changes.visible.currentValue !== false;\n            let delay: number;\n            if (angular.isObject(this._delay)) {\n                delay = this._delay[this.visible ? 'show' : 'hide'] || this.Popover.delay;\n            } else {\n                delay = this._delay;\n            }\n            if (this.timeout !== null) {\n                this.$timeout.cancel(this.timeout);\n            }\n            this.timeout = this.$timeout(() => {\n                this.timeout = null;\n                if (this.visible) {\n                    if (this.parentElement) {\n                        this.angularBS.positionElement(\n                            this.$element.children(), this.parentElement, this.placement,\n                            this.boundary !== null ? this.boundary : undefined,\n                            'bs-popover-'\n                        );\n                    } else { // static popover\n                        this.angularBS.setPlacementCSS(this.$element.children(), 'bs-popover-', this.placement);\n                        this.angularBS.adjustArrow(this.$element.children(), this.placement);\n                    }\n                    this.fadeIn = this.visible;\n                } else if (this.animation && !changes.visible.isFirstChange()) {\n                    // properly display fade out animation\n                    this.visible = true;\n                    this.fadeIn = false;\n                    const transition = () => {\n                        this.visible = false;\n                        this.$element.children()[0].removeEventListener('transitionend', transition);\n                        this.$scope.$digest();\n                    };\n                    this.$element.children()[0].addEventListener('transitionend', transition);\n                } else {\n                    this.fadeIn = false;\n                }\n            }, delay);\n        }\n    }\n}\n\n/**\n * @ngdoc component\n * @name bsPopoverTitle\n * @description contents of this element would be transcluded to .popover-title element\n */\n/**\n * @ngdoc component\n * @name bsPopoverContent\n * @description contents of this element would be transcluded to .popover-content element\n */\n\n/**\n * @ngdoc component\n * @name bsPopover\n *\n * @param {expression|boolean} visible\n * @param {expression|boolean} animation\n * @param {expression|number} delay\n * @param {expression} parentElement\n * @param {expression} boundary\n * @param {string} placement\n */\nexport const bsPopoverComponent: IComponentOptions = {\n    template: '<div class=\"popover\" '\n        + 'ng-class=\"{\\'fade\\': bsPpCtrl.animation, \\'show\\': bsPpCtrl.fadeIn}\" '\n        + 'style=\"display: {{bsPpCtrl.visible || bsPpCtrl.fadeIn ? \\'block\\' : \\'none\\'}}\" '\n        + 'ng-show=\"bsPpCtrl.visible || bsPpCtrl.fadeIn\">'\n        + '<div class=\"arrow\"></div>'\n        + '<div class=\"popover-header\" ng-transclude=\"title\" ng-show=\"bsPpCtrl.titleVisible\">'\n        + '{{bsPpCtrl.defaultTitle}}'\n        + '</div>'\n        + '<div class=\"popover-body\" ng-transclude=\"content\" ng-show=\"bsPpCtrl.contentVisible\">'\n        + '{{bsPpCtrl.defaultContent}}'\n        + '</div>'\n        + '</div>',\n    controllerAs: 'bsPpCtrl',\n    bindings: {\n        visible: '<',\n        animation: '<',\n        delay: '<',\n        parentElement: '<',\n        boundary: '<'\n    },\n    transclude: {\n        title: '?bsPopoverTitle',\n        content: '?bsPopoverContent'\n    },\n    controller: BsPopoverComponentController\n};\n","/*\n * Twitter Bootstrap 4 plugin for AngularJS.\n * Copyright (c) 2016-2021 Rodziu <mateusz.rohde@gmail.com>\n * License: MIT\n */\n\n\nimport {\n    IAttributes,\n    ICompileService,\n    IDirective,\n    IDocumentService,\n    ISCEService,\n    IScope,\n    ITimeoutService\n} from 'angular';\nimport {IPopoverOptions} from './popover.provider';\nimport * as angular from 'angular';\nimport {placement} from '../helpers/angularBS.service';\n\ninterface IBSPopoverElementScope extends IScope {\n    bsPpCtrl: BsPopoverToggleDirectiveController\n}\n\n/**\n * @ngInject\n */\nclass BsPopoverToggleDirectiveController {\n    private $scope: IScope;\n    private $element: JQLite;\n    private $attrs: IAttributes;\n    private readonly $compile: ICompileService;\n    private $timeout: ITimeoutService;\n    private $document: IDocumentService;\n    private $sce: ISCEService;\n    private Popover: IPopoverOptions;\n    private bsPopoverToggle: boolean;\n    private placement: placement;\n    private title: string;\n    private content: string;\n    private readonly documentClick: (JQueryEventObject) => void;\n    private html: string;\n    private popoverElement: JQLite = null;\n\n    constructor(\n        $scope: IScope,\n        $element: JQLite,\n        $attrs: IAttributes,\n        $compile: ICompileService,\n        $timeout: ITimeoutService,\n        $document: IDocumentService,\n        $sce: ISCEService,\n        Popover: IPopoverOptions\n    ) {\n        this.$scope = $scope;\n        this.$element = $element;\n        this.$attrs = $attrs;\n        this.$compile = $compile;\n        this.$timeout = $timeout;\n        this.$document = $document;\n        this.$sce = $sce;\n        this.Popover = Popover;\n\n        this.documentClick = (e: JQueryMouseEventObject) => {\n            if (!$element[0].contains(e.target)) {\n                this.bsPopoverToggle = false;\n                this.$scope.$digest();\n            }\n        };\n\n        ['title', 'content'].forEach((attr) => {\n            $attrs.$observe(attr, (value) => {\n                if (!(angular.isDefined(this.html) && this.html) || Popover.html) {\n                    value = (value as string).replace(/[\\u00A0-\\u9999<>&'\"]/gim, function(i) {\n                        return '&#' + i.charCodeAt(0) + ';'\n                    });\n                }\n                this[attr] = $sce.trustAsHtml(value);\n                if (attr === 'title') {\n                    $element.attr('title', '');\n                }\n            });\n        });\n\n        const watcher = this.$scope.$watch(() => {\n            return this.bsPopoverToggle;\n        }, (nV) => {\n            if (nV) {\n                this.bsPopoverToggle = false;\n                this.$compile(\n                    '<bs-popover visible=\"bsPpCtrl.bsPopoverToggle\" animation=\"bsPpCtrl.animation\" '\n                    + 'delay=\"bsPpCtrl.delay\" placement=\"{{bsPpCtrl.placement}}\" '\n                    + 'parent-element=\"bsPpCtrl.$element\" '\n                    + 'boundary=\"bsPpCtrl.boundary\">'\n                    + '<bs-popover-title ng-bind-html=\"bsPpCtrl.title\"></bs-popover-title>'\n                    + '<bs-popover-content ng-bind-html=\"bsPpCtrl.content\"></bs-popover-content>'\n                    + '</bs-popover>'\n                )(this.$scope.$new(), (newElement, newScope: IBSPopoverElementScope) => {\n                    newScope.bsPpCtrl = this;\n                    $document.find('body').append(newElement);\n                    this.popoverElement = newElement;\n                    // we delay popover display a little, to properly calculate its dimensions after its created\n                    $timeout(() => {\n                        this.bsPopoverToggle = true;\n                    }, 50);\n                });\n                watcher(); // create popover element once and leave it be\n            }\n        });\n    }\n\n    $onInit(): void {\n        if (angular.isUndefined(this.bsPopoverToggle)) {\n            this.bsPopoverToggle = false;\n        }\n        const triggers = (angular.isUndefined(this.$attrs.trigger) ? this.Popover.trigger : this.$attrs.trigger)\n                .split(' '),\n            open = () => {\n                this.bsPopoverToggle = true;\n                this.$scope.$digest();\n            },\n            close = () => {\n                this.bsPopoverToggle = false;\n                this.$scope.$digest();\n            };\n        if (~triggers.indexOf('hover')) {\n            this.$element.on('mouseenter', open);\n            this.$element.on('mouseleave', close);\n        }\n        if (~triggers.indexOf('focus')) {\n            this.$element.on('click', open);\n            this.$document.on('click', this.documentClick);\n        }\n        if (~triggers.indexOf('click')) {\n            this.$element.on('click', () => {\n                this.bsPopoverToggle = !this.bsPopoverToggle;\n                this.$scope.$digest();\n            });\n        }\n        this.placement = angular.isUndefined(this.$attrs.placement) ? this.Popover.placement : this.$attrs.placement;\n        this.title = this.$sce.trustAsHtml(this.Popover.title);\n        this.content = this.$sce.trustAsHtml(this.Popover.content);\n    }\n\n    $onDestroy(): void {\n        if (this.popoverElement !== null) {\n            this.popoverElement.remove();\n        }\n        this.$document.off('click', this.documentClick);\n    }\n}\n\nexport function bsPopoverToggleDirective(): IDirective {\n    /**\n     * @ngdoc directive\n     * @name bsPopoverToggle\n     *\n     * @param {expression|boolean} bsPopoverToggle\n     * @param {expression|boolean} animation\n     * @param {expression|number} delay\n     * @param {expression|boolean} html\n     * @param placement\n     * @param title\n     * @param trigger\n     */\n    return {\n        restrict: 'A',\n        bindToController: {\n            bsPopoverToggle: '=?',\n            animation: '<?',\n            delay: '<?',\n            html: '<?'\n        },\n        require: ['?^bsPopoverBoundary', 'bsPopoverToggle'],\n        controllerAs: 'bsPpCtrl',\n        link: function(scope, element, attrs, ctrl) {\n            ctrl[1].boundary = ctrl[0] === null ? null : ctrl[0].$element;\n        },\n        controller: BsPopoverToggleDirectiveController\n    };\n}\n","/*\n * Twitter Bootstrap 4 plugin for AngularJS.\n * Copyright (c) 2016-2021 Rodziu <mateusz.rohde@gmail.com>\n * License: MIT\n */\nimport * as angular from 'angular';\nimport {helpers} from '../helpers/helpers.module';\nimport {PopoverProvider} from './popover.provider';\nimport {bsPopoverBoundaryDirective} from './bs-popover-boundary.directive';\nimport {bsPopoverComponent} from './bs-popover.component';\nimport {bsPopoverToggleDirective} from './bs-popover-toggle.directive';\n\nconst popoverModule = angular.module('angularBS.popover', [helpers])\n    .provider('Popover', PopoverProvider)\n    .directive('bsPopoverBoundary', bsPopoverBoundaryDirective)\n    .component('bsPopover', bsPopoverComponent)\n    .directive('bsPopoverToggle', bsPopoverToggleDirective);\n\nexport const angularBSPopover = popoverModule.name;\n","/*\n * Twitter Bootstrap 4 plugin for AngularJS.\n * Copyright (c) 2016-2021 Rodziu <mateusz.rohde@gmail.com>\n * License: MIT\n */\n\nimport {placement} from '../helpers/angularBS.service';\n\nexport type popoverDelay = number | {show: number, hide: number};\n\nexport interface IPopoverOptions {\n    animation: boolean,\n    delay: popoverDelay,\n    html: boolean,\n    placement: placement,\n    title: string,\n    content: string,\n    trigger: 'click' | 'hover' | 'focus' | string\n}\n\nexport class PopoverProvider {\n    public config: IPopoverOptions ={\n        animation: true,\n        delay: 0,\n        html: false,\n        placement: 'right',\n        title: '',\n        content: '',\n        trigger: 'click'\n    }\n\n    $get(): IPopoverOptions {\n        return this.config;\n    }\n}\n","/*\n * Twitter Bootstrap 4 plugin for AngularJS.\n * Copyright (c) 2016-2021 Rodziu <mateusz.rohde@gmail.com>\n * License: MIT\n */\nimport {ICompileService, IComponentOptions, IOnChangesObject, IScope, ITranscludeFunction} from 'angular';\nimport {IToastsOptions} from './toasts.provider';\nimport * as angular from 'angular';\n\n/**\n * @ngInject\n */\nclass BsToastComponentController {\n    private $scope: IScope;\n    private $element: JQLite;\n    private $compile: ICompileService;\n    private Toasts: IToastsOptions;\n    private animation: boolean;\n    private visible: boolean;\n    private fadeIn: boolean;\n\n    constructor(\n        $scope: IScope,\n        $element: JQLite,\n        $transclude: ITranscludeFunction,\n        $compile: ICompileService,\n        Toasts: IToastsOptions\n    ) {\n        this.$scope = $scope;\n        this.$element = $element;\n        this.$compile = $compile;\n        this.Toasts = Toasts;\n\n        $transclude((elements, scope) => {\n            let header, body;\n            for (let i = 0; i < elements.length; i++) {\n                if (elements[i].tagName === 'BS-TOAST-HEADER') {\n                    header = elements[i];\n                } else if (elements[i].tagName === 'BS-TOAST-BODY') {\n                    body = elements[i];\n                }\n            }\n            if (header) {\n                header = angular.element(header);\n                header.addClass('toast-header');\n                $element.children().append($compile(header)(scope))\n            }\n            if (body) {\n                body = angular.element(body);\n                body.addClass('toast-body d-block');\n                $element.children().append($compile(body)(scope))\n            }\n        });\n    }\n\n    $onInit(): void {\n        if (angular.isUndefined(this.animation)) {\n            this.animation = this.Toasts.animation;\n        }\n    }\n\n    $onChanges(changes: IOnChangesObject): void {\n        if (\n            angular.isDefined(changes.visible)\n            && changes.visible.previousValue !== changes.visible.currentValue\n        ) {\n            this.visible = !!changes.visible.currentValue;\n            if (this.animation && !this.visible && !changes.visible.isFirstChange()) {\n                // properly display fade out animation\n                this.visible = true;\n                this.fadeIn = false;\n                const transition = () => {\n                    this.visible = false;\n                    this.$element.children()[0].removeEventListener('transitionend', transition);\n                    this.$scope.$digest();\n                };\n                this.$element.children()[0].addEventListener('transitionend', transition);\n            } else {\n                this.fadeIn = this.visible;\n            }\n        }\n    }\n}\n\n/**\n * @ngdoc component\n * @name bsToastHeader\n * @description contents of this element would be transcluded to .toast-header element\n */\n/**\n * @ngdoc component\n * @name bsToastBody\n * @description contents of this element would be transcluded to .toast-body element\n */\n/**\n * @ngdoc component\n * @name bsToast\n *\n * @param {expression|boolean} visible\n * @param {expression|boolean} animation\n */\nexport const bsToastComponent: IComponentOptions = {\n    template: '<div class=\"toast\" '\n        + 'ng-class=\"{\\'fade\\': vm.animation, \\'show\\': vm.fadeIn}\" '\n        + 'style=\"display: {{vm.visible || vm.fadeIn ? \\'block\\' : \\'none\\'}}\">'\n        + '</div>',\n    controllerAs: 'vm',\n    bindings: {\n        visible: '<',\n        animation: '<'\n    },\n    transclude: true,\n    controller: BsToastComponentController\n};\n","/*\n * Twitter Bootstrap 4 plugin for AngularJS.\n * Copyright (c) 2016-2021 Rodziu <mateusz.rohde@gmail.com>\n * License: MIT\n */\nimport * as angular from 'angular';\nimport {ToastsProvider} from './toasts.provider';\nimport {bsToastComponent} from './bs-toast.component';\n\nconst toastsModule = angular.module('angularBS.toasts', [])\n    .provider('Toasts', ToastsProvider)\n    .component('bsToast', bsToastComponent);\n\nexport const angularBSToasts = toastsModule.name;\n","/*\n * Twitter Bootstrap 4 plugin for AngularJS.\n * Copyright (c) 2016-2021 Rodziu <mateusz.rohde@gmail.com>\n * License: MIT\n */\n\nexport interface IToastsOptions {\n    animation: boolean\n}\n\nexport class ToastsProvider {\n    public config: IToastsOptions = {\n        animation: true\n    }\n\n    $get(): IToastsOptions {\n        return this.config;\n    }\n}\n","/*\n * Twitter Bootstrap 4 plugin for AngularJS.\n * Copyright (c) 2016-2021 Rodziu <mateusz.rohde@gmail.com>\n * License: MIT\n */\nimport {IDirective} from 'angular';\n\n/**\n * @ngInject\n */\nclass BsTooltipBoundaryDirectiveController {\n    private $element: JQLite;\n\n    constructor($element: JQLite) {\n        this.$element = $element;\n    }\n}\n\nexport function bsTooltipBoundaryDirective(): IDirective {\n    return {\n        restrict: 'A',\n        controller: BsTooltipBoundaryDirectiveController\n    };\n}\n","/*\n * Twitter Bootstrap 4 plugin for AngularJS.\n * Copyright (c) 2016-2021 Rodziu <mateusz.rohde@gmail.com>\n * License: MIT\n */\n\nimport IInjectorService = angular.auto.IInjectorService;\nimport {IDirective} from 'angular';\nimport {BsTooltipToggleDirectiveController} from './bs-tooltip-toggle.directive';\n\n/**\n * @ngInject\n */\nexport class BsTooltipFactory {\n    private $injector: IInjectorService;\n\n    constructor($injector: IInjectorService) {\n        this.$injector = $injector;\n    }\n\n    customBindingDirective(): IDirective {\n        return {\n            restrict: 'A',\n            require: '?^bsTooltipBoundary',\n            compile: (element, attrs) => {\n                if (!('bsTooltipToggle' in attrs) && !('bsPopoverToggle' in attrs)) {\n                    return (scope, element, attrs, ctrl) => {\n                        const directive = this.$injector.get('bsTooltipToggleDirective')[0],\n                            bsTooltipToggleCtrl = this.$injector.instantiate(directive.controller, {\n                                '$scope': scope,\n                                '$element': element,\n                                '$attrs': attrs\n                            }) as BsTooltipToggleDirectiveController;\n                        directive.compile(\n                            element, scope, attrs, [ctrl, bsTooltipToggleCtrl]\n                        )(\n                            scope, element, attrs, [ctrl, bsTooltipToggleCtrl]\n                        );\n                        bsTooltipToggleCtrl.$onInit();\n                        element.on('$destroy', function() {\n                            bsTooltipToggleCtrl.$onDestroy();\n                        });\n                    }\n                }\n            }\n        }\n    }\n}\n","/*\n * Twitter Bootstrap 4 plugin for AngularJS.\n * Copyright (c) 2016-2021 Rodziu <mateusz.rohde@gmail.com>\n * License: MIT\n */\n\nimport {IAttributes, ICompileService, IDirective, IDocumentService, ISCEService, IScope} from 'angular';\nimport {ITooltipOptions} from './tooltip.provider';\nimport * as angular from 'angular';\nimport {placement} from '../helpers/angularBS.service';\n\ninterface IBSTooltipScope extends IScope {\n    bsTpCtrl: BsTooltipToggleDirectiveController\n}\n\n/**\n * @ngInject\n */\nexport class BsTooltipToggleDirectiveController {\n    private $scope: IScope;\n    private $element: JQLite;\n    private $attrs: IAttributes;\n    private $document: IDocumentService;\n    private $sce: ISCEService;\n    private Tooltip: ITooltipOptions;\n    private _tooltipElement: JQLite = null;\n    private html: boolean;\n    private title: string;\n    private bsTooltipToggle: boolean;\n    private placement: placement;\n\n    constructor(\n        $scope: IScope,\n        $element: JQLite,\n        $attrs: IAttributes,\n        $compile: ICompileService,\n        $document: IDocumentService,\n        $sce: ISCEService,\n        Tooltip: ITooltipOptions\n    ) {\n        this.$scope = $scope;\n        this.$element = $element;\n        this.$attrs = $attrs;\n        this.$document = $document;\n        this.$sce = $sce;\n        this.Tooltip = Tooltip;\n\n        $attrs.$observe('title', (value) => {\n            if (!(angular.isDefined(this.html) && this.html) || Tooltip.html) {\n                value = (value as string).replace(/[\\u00A0-\\u9999<>&'\"]/gim, (i) => {\n                    return '&#' + i.charCodeAt(0) + ';'\n                });\n            }\n            this.title = $sce.trustAsHtml(value);\n            $element.attr('title', '');\n        });\n\n        const watcher = $scope.$watch(() => {\n            return this.bsTooltipToggle;\n        }, (nV) => {\n            if (nV) {\n                $compile(\n                    '<bs-tooltip visible=\"bsTpCtrl.bsTooltipToggle\" animation=\"bsTpCtrl.animation\" '\n                    + 'delay=\"bsTpCtrl.delay\" placement=\"{{bsTpCtrl.placement}}\" '\n                    + 'parent-element=\"bsTpCtrl.$element\" '\n                    + 'boundary=\"bsTpCtrl.boundary\">'\n                    + '<span ng-bind-html=\"bsTpCtrl.title\"></span></bs-tooltip>'\n                )($scope.$new(), (newElement, newScope: IBSTooltipScope) => {\n                    newScope.bsTpCtrl = this;\n                    $document.find('body').append(newElement);\n                    this._tooltipElement = newElement;\n                });\n                watcher(); // create tooltip element once and leave it be\n            }\n        });\n    }\n\n    $onInit(): void {\n        if (angular.isUndefined(this.bsTooltipToggle)) {\n            this.bsTooltipToggle = false;\n        }\n        const triggers = (angular.isUndefined(this.$attrs.trigger) ? this.Tooltip.trigger : this.$attrs.trigger)\n                .split(' '),\n            open = () => {\n                this.bsTooltipToggle = true;\n                this.$scope.$digest();\n            },\n            close = () => {\n                this.bsTooltipToggle = false;\n                this.$scope.$digest();\n            };\n        if (~triggers.indexOf('hover')) {\n            this.$element.on('mouseenter', open);\n            this.$element.on('mouseleave', close);\n        }\n        if (~triggers.indexOf('focus')) {\n            this.$element.on('focus', open);\n            this.$element.on('blur', close);\n        }\n        if (~triggers.indexOf('click')) {\n            this.$element.on('click', () => {\n                this.bsTooltipToggle = !this.bsTooltipToggle;\n                this.$scope.$digest();\n            });\n        }\n        this.placement = angular.isUndefined(this.$attrs.placement) ? this.Tooltip.placement : this.$attrs.placement;\n        this.title = this.$sce.trustAsHtml(this.Tooltip.title);\n    }\n\n    $onDestroy(): void {\n        if (this._tooltipElement !== null) {\n            this._tooltipElement.remove();\n        }\n    }\n}\n\nexport function bsTooltipToggleDirective(): IDirective {\n    /**\n     * @ngdoc directive\n     * @name bsTooltipToggle\n     *\n     * @param {expression|boolean} bsTooltipToggle\n     * @param {expression|boolean} animation\n     * @param {expression|number} delay\n     * @param {expression|boolean} html\n     * @param placement\n     * @param title\n     * @param trigger\n     */\n    return {\n        restrict: 'A',\n        bindToController: {\n            bsTooltipToggle: '=?',\n            animation: '<?',\n            delay: '<?',\n            html: '<?'\n        },\n        require: ['?^bsTooltipBoundary', 'bsTooltipToggle'],\n        controllerAs: 'bsTpCtrl',\n        link: function(scope, element, attrs, ctrl) {\n            ctrl[1].boundary = ctrl[0] === null ? null : ctrl[0].$element;\n        },\n        controller: BsTooltipToggleDirectiveController\n    };\n}\n","/*\n * Twitter Bootstrap 4 plugin for AngularJS.\n * Copyright (c) 2016-2021 Rodziu <mateusz.rohde@gmail.com>\n * License: MIT\n */\n\nimport {IAttributes, IComponentOptions, IOnChangesObject, IPromise, IScope, ITimeoutService} from 'angular';\nimport {ITooltipOptions, tooltipDelay} from './tooltip.provider';\nimport {AngularBSService, placement} from '../helpers/angularBS.service';\nimport * as angular from 'angular';\n\n/**\n * @ngInject\n */\nclass BsTooltipComponentController {\n    private $scope: IScope;\n    private $element: JQLite;\n    private $attrs: IAttributes;\n    private readonly $timeout: ITimeoutService;\n    private Tooltip: ITooltipOptions;\n    private angularBS: AngularBSService;\n    private _delay: tooltipDelay;\n    private _timeout: IPromise<void> = null;\n    private placement: placement;\n    private titleVisible: boolean;\n    private animation: boolean;\n    private delay: tooltipDelay;\n    private defaultTitle: string;\n    private visible: boolean;\n    private parentElement: JQLite;\n    private boundary: JQLite;\n    private fadeIn: boolean;\n\n    constructor(\n        $scope: IScope,\n        $element: JQLite,\n        $attrs: IAttributes,\n        $timeout: ITimeoutService,\n        Tooltip: ITooltipOptions,\n        angularBS: AngularBSService\n    ) {\n        this.$scope = $scope;\n        this.$element = $element;\n        this.$attrs = $attrs;\n        this.$timeout = $timeout;\n        this.Tooltip = Tooltip;\n        this.angularBS = angularBS;\n\n        $attrs.$observe('placement', (value) => {\n            this.placement = value as string;\n        });\n        // check if title is not empty\n        const title = angular.element($element[0].querySelector('.tooltip-inner'));\n        $scope.$watch(() => {\n            return title.text().trim();\n        }, (nV) => {\n            this.titleVisible = nV !== '';\n        });\n    }\n\n    $onInit(): void {\n        if (angular.isUndefined(this.animation)) {\n            this.animation = this.Tooltip.animation;\n        }\n        if (angular.isUndefined(this.delay)) {\n            this.delay = this.Tooltip.delay;\n        }\n        this.placement = this.Tooltip.placement;\n        this.defaultTitle = this.Tooltip.title;\n        this.$element.children().css({top: 0});\n    }\n\n    $onChanges(changes: IOnChangesObject): void {\n        if (angular.isDefined(changes.delay)) {\n            this._delay = angular.isDefined(changes.delay.currentValue)\n                ? changes.delay.currentValue : this.Tooltip.delay;\n        }\n        if (\n            angular.isDefined(changes.visible)\n            && changes.visible.previousValue !== changes.visible.currentValue\n        ) {\n            this.visible = changes.visible.currentValue !== false;\n            let delay: number;\n            if (angular.isObject(this._delay)) {\n                delay = this._delay[this.visible ? 'show' : 'hide'] || this.Tooltip.delay;\n            } else {\n                delay = this._delay;\n            }\n            if (this._timeout !== null) {\n                this.$timeout.cancel(this._timeout);\n            }\n            this._timeout = this.$timeout(() => {\n                this._timeout = null;\n                if (this.visible) {\n                    if (this.parentElement) {\n                        this.angularBS.positionElement(\n                            this.$element.children(), this.parentElement, this.placement,\n                            this.boundary !== null ? this.boundary : undefined,\n                            'bs-tooltip-'\n                        );\n                    } else { // static tooltip\n                        this.angularBS.setPlacementCSS(this.$element.children(), 'bs-tooltip-', this.placement);\n                        this.angularBS.adjustArrow(this.$element.children(), this.placement);\n                    }\n                    this.fadeIn = this.visible;\n                } else {\n                    // properly display fade out animation\n                    this.visible = true;\n                    this.fadeIn = false;\n                    const transition = () => {\n                        this.visible = false;\n                        this.$element.children()[0].removeEventListener('transitionend', transition);\n                        this.$scope.$digest();\n                    };\n                    this.$element.children()[0].addEventListener('transitionend', transition);\n                }\n            }, delay);\n        }\n    }\n}\n\n/**\n * @ngdoc component\n * @name bsTooltip\n *\n * @param {expression|boolean} visible\n * @param {expression|boolean} animation\n * @param {expression|number} delay\n * @param {expression} parentElement\n * @param {expression} boundary\n * @param placement\n */\nexport const bsTooltipComponent: IComponentOptions = {\n    template: '<div class=\"tooltip\" '\n        + 'ng-class=\"{\\'fade\\': bsTpCtrl.animation, \\'show\\': bsTpCtrl.fadeIn}\" '\n        + 'ng-show=\"bsTpCtrl.visible || bsTpCtrl.fadeIn\">'\n        + '<div class=\"arrow\" ng-show=\"bsTpCtrl.titleVisible\"></div>'\n        + '<div class=\"tooltip-inner\" ng-transclude ng-show=\"bsTpCtrl.titleVisible\">{{bsTpCtrl.defaultTitle}}</div>'\n        + '</div>',\n    controllerAs: 'bsTpCtrl',\n    bindings: {\n        visible: '<',\n        animation: '<',\n        delay: '<',\n        parentElement: '<',\n        boundary: '<'\n    },\n    transclude: true,\n    controller: BsTooltipComponentController\n};\n","/*\n * Twitter Bootstrap 4 plugin for AngularJS.\n * Copyright (c) 2016-2021 Rodziu <mateusz.rohde@gmail.com>\n * License: MIT\n */\nimport {helpers} from '../helpers/helpers.module';\nimport * as angular from 'angular';\nimport {TooltipProvider} from './tooltip.provider';\nimport {bsTooltipBoundaryDirective} from './bs-tooltip-boundary.directive';\nimport {BsTooltipFactory} from './bs-tooltip.factory';\nimport {bsTooltipToggleDirective} from './bs-tooltip-toggle.directive';\nimport {bsTooltipComponent} from './bs-tooltip.component';\n\nconst tooltipModule = angular.module('angularBS.tooltip', [helpers])\n    .provider('Tooltip', TooltipProvider)\n    .factory('bsTooltipFactory',  BsTooltipFactory)\n    .directive('bsTooltipBoundary', bsTooltipBoundaryDirective)\n    .directive('bsTooltipToggle', bsTooltipToggleDirective)\n    .component('bsTooltip', bsTooltipComponent);\n\nexport const angularBSTooltip = tooltipModule.name;\n","/*\n * Twitter Bootstrap 4 plugin for AngularJS.\n * Copyright (c) 2016-2021 Rodziu <mateusz.rohde@gmail.com>\n * License: MIT\n */\nimport {placement} from '../helpers/angularBS.service';\n\nexport type tooltipDelay = number | { show: number, hide: number };\n\nexport interface ITooltipOptions {\n    animation: boolean,\n    delay: tooltipDelay,\n    placement: placement,\n    html: boolean,\n    title: string,\n    trigger: 'click' | 'hover' | 'focus' | string\n}\n\nexport class TooltipProvider {\n    public config: ITooltipOptions = {\n        animation: true,\n        delay: 0,\n        placement: 'bottom',\n        html: false,\n        title: '',\n        trigger: 'hover focus'\n    }\n\n    $get(): ITooltipOptions {\n        return this.config;\n    }\n}\n","/*\n * Twitter Bootstrap 4 plugin for AngularJS.\n * Copyright (c) 2016-2021 Rodziu <mateusz.rohde@gmail.com>\n * License: MIT\n */\nimport {angularBS} from './lib/angularBS.module';\nexport * from './lib/carousel/carousel.provider';\nexport * from './lib/helpers/angularBS.service';\nexport * from './lib/modal/modal.provider';\nexport {BSModalController} from './lib/modal/bs-modal.directive';\nexport * from './lib/popover/popover.provider';\nexport * from './lib/toasts/toasts.provider';\nexport * from './lib/tooltip/tooltip.provider';\n\nexport default angularBS;\n","/*\n * Twitter Bootstrap 4 plugin for AngularJS.\n * Copyright (c) 2016-2021 Rodziu <mateusz.rohde@gmail.com>\n * License: MIT\n */\nimport * as angular from 'angular';\nimport {angularBSCarousel} from './carousel/carousel.module';\nimport {angularBSCollapse} from './collapse/collapse.module';\nimport {angularBSDropdown} from './dropdown/dropdown.module';\nimport {angularBSModal} from './modal/modal.module';\nimport {angularBSPopover} from './popover/popover.module';\nimport {angularBSToasts} from './toasts/toasts.module';\nimport {angularBSTooltip} from './tooltip/tooltip.module';\n\nconst angularBSModule = angular.module('angularBS', [\n    angularBSModal, angularBSDropdown, angularBSTooltip, angularBSPopover, angularBSCollapse,\n    angularBSCarousel, angularBSToasts\n]);\n\nexport const angularBS = angularBSModule.name;\n"],"sourceRoot":""}