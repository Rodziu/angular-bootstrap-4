{"version":3,"sources":["./projects/angular-bootstrap4/src/lib/modal/bs-modal-config.service.ts","./projects/angular-bootstrap4/src/lib/modal/backdrop/bs-modal-backdrop.component.ts","./projects/angular-bootstrap4/src/lib/modal/backdrop/bs-modal-backdrop.service.ts","./projects/angular-bootstrap4/src/lib/modal/bs-modal.directive.ts","./projects/angular-bootstrap4/src/lib/modal/dismiss.directive.ts","./projects/angular-bootstrap4/src/lib/modal/bs-modal.module.ts","./projects/angular-bootstrap4/src/lib/angular-bootstrap4.module.ts","./projects/angular-bootstrap4/src/public-api.ts","./projects/angular-bootstrap4-demo/src/app/app.component.html","./projects/angular-bootstrap4-demo/src/app/app.component.ts","./projects/angular-bootstrap4-demo/src/app/app.module.ts","./projects/angular-bootstrap4-demo/src/app/section.directive.ts","./projects/angular-bootstrap4-demo/src/environments/environment.ts","./projects/angular-bootstrap4-demo/src/main.ts","./projects/angular-bootstrap4-demo/$_lazy_route_resources|lazy|groupOptions: {}|namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import {Injectable} from '@angular/core';\nimport {BsModalDirective} from './bs-modal.directive';\n\nexport interface IBsModalOptions {\n    backdrop: 'static' | boolean,\n    keyboard: boolean,\n    transitionDuration: number,\n    backdropTransitionDuration: number,\n    onBeforeChange: (instance: BsModalDirective) => boolean;\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class BsModalConfigService implements IBsModalOptions {\n    backdrop: 'static' | boolean = 'static';\n    keyboard = true;\n    transitionDuration = 300;\n    backdropTransitionDuration = 150;\n    onBeforeChange: IBsModalOptions['onBeforeChange'] = (): boolean => true;\n}\n","import {Component, ElementRef} from '@angular/core';\nimport {BsModalBackdropService} from './bs-modal-backdrop.service';\n\n@Component({\n    template: '<div class=\"modal-backdrop\" [ngClass]=\"{\\'fade\\': service.isAnimated}\"></div>',\n    selector: 'bs-modal-backdrop'\n})\nexport class BsModalBackdropComponent {\n    constructor(\n        public service: BsModalBackdropService,\n        public elementRef: ElementRef<HTMLElement>\n    ) {\n    }\n\n    private getBackdropElement(): HTMLElement {\n        return this.elementRef.nativeElement.children[0] as HTMLElement;\n    }\n\n    show(): void {\n        const backdropElement = this.getBackdropElement();\n        backdropElement.offsetWidth; // force reflow\n        backdropElement.classList.add('show');\n        backdropElement.style.display = '';\n    }\n\n    hide(): Promise<void> {\n        return new Promise((resolve) => {\n            const backdropElement = this.getBackdropElement();\n            backdropElement.classList.remove('show');\n            if (this.service.isAnimated) {\n                let transitionFinished = false;\n                const transition = function() {\n                    if (!transitionFinished) {\n                        resolve();\n                        transitionFinished = true;\n                        backdropElement.removeEventListener('transitionend', transition);\n                        backdropElement.style.display = 'none';\n                    }\n                };\n                backdropElement.addEventListener('transitionend', transition);\n                setTimeout(transition, 150);\n            } else {\n                resolve();\n            }\n        });\n    }\n}\n","import {\n    ApplicationRef,\n    ComponentFactoryResolver,\n    ComponentRef,\n    EmbeddedViewRef,\n    Injectable,\n    Injector\n} from '@angular/core';\nimport {BsModalBackdropComponent} from './bs-modal-backdrop.component';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class BsModalBackdropService {\n    private backdropRef?: ComponentRef<BsModalBackdropComponent>;\n    private openModals = 0;\n    private _isAnimated = false;\n    get isAnimated(): boolean {\n        return this._isAnimated;\n    }\n\n    constructor(\n        private componentFactoryResolver: ComponentFactoryResolver,\n        private appRef: ApplicationRef,\n        private injector: Injector\n    ) {\n    }\n\n    show(backdrop: boolean, animate: boolean): Promise<void> {\n        return new Promise<void>((resolve) => {\n            this.createBackdropComponent();\n            this.openModals++;\n            this._isAnimated = animate;\n            document.body.classList.add('modal-open');\n            if (backdrop) {\n                setTimeout(() => { // wait for backdrop element to be fully drawn\n                    this.backdropRef?.instance.show();\n                    resolve();\n                });\n            } else {\n                resolve();\n            }\n        });\n    }\n\n    private createBackdropComponent(): void {\n        if (typeof this.backdropRef !== 'undefined') {\n            return;\n        }\n        const componentRef = this.componentFactoryResolver\n            .resolveComponentFactory(BsModalBackdropComponent)\n            .create(this.injector);\n\n        this.appRef.attachView(componentRef.hostView);\n\n        document.body.appendChild(\n            (componentRef.hostView as EmbeddedViewRef<BsModalBackdropComponent>)\n                .rootNodes[0] as HTMLElement\n        );\n        this.backdropRef = componentRef;\n    }\n\n    hide(): void {\n        this.openModals--;\n        if (this.openModals < 0) {\n            this.openModals = 0;\n        }\n        if (this.openModals === 0) {\n            const callback = () => {\n                document.body.classList.remove('modal-open');\n            }\n            if (this.backdropRef) {\n                this.backdropRef.instance.hide().then(callback);\n            } else {\n                callback();\n            }\n        }\n    }\n}\n","import {Directive, ElementRef, HostListener, Input, OnInit, Output} from '@angular/core';\nimport {BsModalConfigService, IBsModalOptions} from './bs-modal-config.service';\nimport {BsModalBackdropService} from './backdrop/bs-modal-backdrop.service';\nimport {EventEmitter} from '@angular/core';\n\n@Directive({\n    selector: '[bsModal]',\n    exportAs: 'bsModal'\n})\nexport class BsModalDirective implements OnInit {\n    @Input() get bsModal(): boolean {\n        return this._bsModal;\n    }\n\n    set bsModal(bsModal: boolean) {\n        if (bsModal === this._bsModal) {\n            return;\n        }\n\n        const result = bsModal ? this.show() : this.hide();\n        if (!result) { // not shown, prevented by shouldChange\n            setTimeout(() => {\n                this.bsModalChange.emit(!bsModal);\n            })\n            this._bsModal = !bsModal;\n        }\n    }\n\n    private _bsModal = false;\n    @Output() readonly bsModalChange = new EventEmitter<boolean>();\n\n    @Input() backdrop?: IBsModalOptions['backdrop'];\n    @Input() keyboard?: IBsModalOptions['keyboard'];\n    @Input() onBeforeChange?: IBsModalOptions['onBeforeChange'];\n\n    constructor(\n        private config: BsModalConfigService,\n        private backdropService: BsModalBackdropService,\n        private elementRef: ElementRef<HTMLElement>\n    ) {\n    }\n\n    @HostListener('click', ['$event.target']) click(target: HTMLElement): void {\n        if (window.getSelection()?.type === 'Range') {\n            return;\n        }\n        if (this.backdrop === true && target === this.elementRef.nativeElement) { // .modal covers whole page\n            this.hide();\n        }\n    }\n\n    @HostListener('document:keydown.escape') keydown(): void {\n        if (this.keyboard) {\n            this.hide();\n        }\n    }\n\n    ngOnInit(): void {\n        if (typeof this.backdrop === 'undefined') {\n            this.backdrop = this.config.backdrop;\n        }\n        if (typeof this.keyboard === 'undefined') {\n            this.keyboard = this.config.keyboard;\n        }\n    }\n\n    show(): boolean {\n        if (this._bsModal) {\n            return true;\n        }\n        if (this.shouldChange()) {\n            this._bsModal = true;\n            this.bsModalChange.emit(true);\n            this.doShow();\n            return true;\n        }\n        return false;\n    }\n\n    hide(): boolean {\n        if (!this._bsModal) {\n            return true;\n        }\n        if (this.shouldChange()) {\n            this._bsModal = false;\n            this.bsModalChange.emit(false);\n            this.doHide();\n            return true;\n        }\n        return false;\n    }\n\n    private shouldChange(): boolean {\n        let ret = typeof this.onBeforeChange !== 'undefined' ? this.onBeforeChange(this) : true;\n        if (ret) {\n            ret = this.config.onBeforeChange(this);\n        }\n        return ret;\n    }\n\n    private doShow(): void {\n        if (!this.elementRef.nativeElement.classList.contains('show')) {\n            this.elementRef.nativeElement.style.display = 'block';\n            this.elementRef.nativeElement.offsetWidth; // force reflow\n            this.backdropService\n                .show(!!this.backdrop, this.elementRef.nativeElement.classList.contains('fade'))\n                .then(() => {\n                    this.elementRef.nativeElement.classList.add('show');\n                });\n        }\n    }\n\n    private doHide(): void {\n        if (this.elementRef.nativeElement.classList.contains('show')) {\n            this.elementRef.nativeElement.classList.remove('show');\n            let transitionEnded = false;\n            const callback = () => {\n                    this.backdropService.hide();\n                    this.elementRef.nativeElement.style.display = '';\n                },\n                transition = () => {\n                    if (!transitionEnded) {\n                        this.elementRef.nativeElement.removeEventListener('transitionend', transition);\n                        callback();\n                        transitionEnded = true;\n                    }\n                };\n            if (this.elementRef.nativeElement.classList.contains('fade')) {\n                this.elementRef.nativeElement.addEventListener('transitionend', transition);\n                setTimeout(transition, 300);\n            } else {\n                callback();\n            }\n        }\n    }\n}\n\n/*\n * TODO dismiss directive + komentarze?\n */\n","import {Directive, Host, HostListener} from '@angular/core';\nimport {BsModalDirective} from './bs-modal.directive';\n\n@Directive({\n    selector: '[dismiss]'\n})\nexport class DismissDirective {\n    constructor(\n        @Host() private bsModal: BsModalDirective\n    ) {\n    }\n\n    @HostListener('click') click(): void {\n        this.bsModal.hide();\n    }\n}\n","import {NgModule} from '@angular/core';\nimport {BsModalDirective} from './bs-modal.directive';\nimport {CommonModule} from '@angular/common';\nimport {BsModalBackdropComponent} from './backdrop/bs-modal-backdrop.component';\nimport {DismissDirective} from './dismiss.directive';\n\n@NgModule({\n    declarations: [\n        BsModalBackdropComponent,\n        BsModalDirective,\n        DismissDirective\n    ],\n    imports: [\n        CommonModule\n    ],\n    exports: [\n        BsModalDirective,\n        DismissDirective\n    ]\n})\nexport class BsModalModule {\n}\n","import {NgModule} from '@angular/core';\nimport {BsModalModule} from './modal/bs-modal.module';\n\n@NgModule({\n    declarations: [],\n    imports: [\n        BsModalModule\n    ],\n    exports: [\n        BsModalModule\n    ]\n})\nexport class AngularBootstrap4Module {\n}\n","/*\n * Public API Surface of angular-bootstrap4\n */\nexport * from './lib/modal/bs-modal.module';\nexport * from './lib/modal/bs-modal-config.service';\nexport * from './lib/modal/bs-modal.directive';\nexport * from './lib/modal/dismiss.directive';\nexport * from './lib/angular-bootstrap4.module';\n","<nav class=\"navbar fixed-top navbar-expand-lg navbar-light bg-light\">\n    <div class=\"container\">\n        <a class=\"navbar-brand\" href=\"#\">AngularJS Bootstrap</a>\n        <button class=\"navbar-toggler\" type=\"button\" (click)=\"navbar=!navbar\">\n            <span class=\"navbar-toggler-icon\"></span>\n        </button>\n\n        <div class=\"collapse navbar-collapse\" bs-collapse=\"navbar\">\n            <ul class=\"navbar-nav mr-auto\">\n                <li class=\"nav-item\" *ngFor=\"let n of nav\">\n                    <a class=\"nav-link\" href=\"#{{n}}\">{{n}}</a>\n                </li>\n            </ul>\n        </div>\n    </div>\n</nav>\n<div class=\"container\">\n    <section id=\"Modal\">\n        <h3 class=\"page-header border-bottom\">Modal</h3>\n        <div class=\"row\">\n            <div class=\"col-md-4\">\n                <button class=\"btn btn-outline-primary btn-lg\"\n                        (click)=\"modal.exampleModal = !modal.exampleModal\">Launch demo modal\n                </button>\n                <br/><br/>\n                <div class=\"radio\">\n                    <label>\n                        <input type=\"radio\" [(ngModel)]=\"modal.backdrop\" value=\"static\"/> 'static' backdrop\n                    </label>\n                </div>\n                <div class=\"radio\">\n                    <label>\n                        <input type=\"radio\" [(ngModel)]=\"modal.backdrop\" [value]=\"true\"/> clickable backdrop\n                    </label>\n                </div>\n                <div class=\"radio\">\n                    <label>\n                        <input type=\"radio\" [(ngModel)]=\"modal.backdrop\" [value]=\"false\"/> no backdrop\n                    </label>\n                </div>\n                <div class=\"checkbox\">\n                    <label>\n                        <input type=\"checkbox\" [(ngModel)]=\"modal.keyboard\"/> keyboard\n                    </label>\n                </div>\n                <div class=\"checkbox\">\n                    <label>\n                        <input type=\"checkbox\" [(ngModel)]=\"modal.preventModalOpen\"/> preventModalOpen\n                    </label>\n                </div>\n                <div class=\"modal fade\" [(bsModal)]=\"modal.exampleModal\" [backdrop]=\"modal.backdrop\"\n                     [keyboard]=\"modal.keyboard\" [onBeforeChange]=\"modal.beforeChange\" #bsModalApi=bsModal>\n                    <div class=\"modal-dialog\">\n                        <div class=\"modal-content\">\n                            <div class=\"modal-header\">\n                                <h5 class=\"modal-title\">ExampleModal</h5>\n                                <button type=\"button\" class=\"close\" dismiss=\"modal\" aria-label=\"Close\">\n                                    <span aria-hidden=\"true\">&times;</span>\n                                </button>\n                            </div>\n                            <div class=\"modal-body\">\n                                <button type=\"button\" class=\"btn btn-primary btn-large\"\n                                        (click)=\"modal.nestedModal=true\">\n                                    Show nested modal\n                                </button>\n                            </div>\n                            <div class=\"modal-footer\">\n                                <button type=\"button\" class=\"btn btn-danger\" (click)=\"bsModalApi.hide()\">\n                                    Dismiss\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"modal fade\" [(bsModal)]=\"modal.nestedModal\">\n                    <div class=\"modal-dialog\">\n                        <div class=\"modal-content\">\n                            <div class=\"modal-header\">\n                                <h5 class=\"modal-title\">Nested modal</h5>\n                                <button type=\"button\" class=\"close\" dismiss=\"modal\" aria-label=\"Close\"><span\n                                        aria-hidden=\"true\">&times;</span></button>\n                            </div>\n                            <div class=\"modal-body\">\n                            </div>\n                            <div class=\"modal-footer\">\n                                <button type=\"button\" class=\"btn btn-danger\" dismiss=\"modal\">Dismiss</button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"col-md-8\">\n                <table class=\"table table-bordered table-striped js-options-table\">\n                    <thead>\n                        <tr>\n                            <th>Name</th>\n                            <th>type</th>\n                            <th>default</th>\n                            <th>description</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <td>backdrop</td>\n                            <td>boolean or the string <code>'static'</code></td>\n                            <td>'static'</td>\n                            <td>Includes a modal-backdrop element. Alternatively, specify <code>static</code> for a\n                                backdrop\n                                which doesn't close the modal on click.\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>keyboard</td>\n                            <td>boolean</td>\n                            <td>true</td>\n                            <td>Closes the modal when escape key is pressed</td>\n                        </tr>\n                        <tr>\n                            <td>onBeforeChange</td>\n                            <td>function</td>\n                            <td>undefined</td>\n                            <td>Function that gets called before every change of modal state.\n                                If this function returns false, action is prevented.\n                            </td>\n                        </tr>\n                    </tbody>\n                    <tfoot>\n                        <tr>\n                            <td colspan=\"4\">\n                                <small>All option defaults are configurable in 'BsModalConfigService'\n                                    and can be changed via bindings.\n                                </small>\n                            </td>\n                        </tr>\n                    </tfoot>\n                </table>\n                <pre>\n&lt;div class=\"modal fade\" <strong>[(bsModal)]=\"modal.exampleModal\" [keyboard]=\"modal.keyboard\" [onBeforeChange]=\"modal.beforeChange\" #bsModalApi=bsModal</strong>&gt;\n...\n&lt;/div&gt;</pre>\n            </div>\n        </div>\n    </section>\n</div>\n","import {Component, ViewChild} from '@angular/core';\nimport {BsModalDirective} from 'angular-bootstrap4';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n    nav: string[] = [];\n    navbar = false;\n    @ViewChild('bsModalApi')\n    bsModalApi?: BsModalDirective;\n\n    modal = {\n        exampleModal: false,\n        nestedModal: false,\n        backdrop: 'static' as 'static' | boolean,\n        keyboard: false,\n        preventModalOpen: false,\n        beforeChange: (): boolean => {\n            return !this.modal.preventModalOpen;\n        }\n    };\n}\n","import {NgModule} from '@angular/core';\nimport {BrowserModule} from '@angular/platform-browser';\n\nimport {AppComponent} from './app.component';\nimport {AngularBootstrap4Module} from 'angular-bootstrap4';\nimport {SectionDirective} from './section.directive';\nimport {FormsModule} from '@angular/forms';\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        SectionDirective\n    ],\n    imports: [\n        AngularBootstrap4Module,\n        BrowserModule,\n        FormsModule\n    ],\n    providers: [],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import {Directive, Host, Input, OnInit} from '@angular/core';\nimport {AppComponent} from './app.component';\n\n@Directive({\n    selector: 'section',\n})\nexport class SectionDirective implements OnInit {\n    @Input() id = '';\n\n    constructor(\n        @Host() private app: AppComponent\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.app.nav.push(this.id);\n    }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import {enableProdMode} from '@angular/core';\nimport {platformBrowserDynamic} from '@angular/platform-browser-dynamic';\n\nimport {AppModule} from './app/app.module';\nimport {environment} from './environments/environment';\n\nif (environment.production) {\n    enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n    // eslint-disable-next-line no-console\n    .catch((err) => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(() => {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = () => ([]);\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 6279;\nmodule.exports = webpackEmptyAsyncContext;"],"sourceRoot":"webpack:///"}